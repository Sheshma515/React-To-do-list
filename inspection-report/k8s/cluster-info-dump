{
    "kind": "NodeList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "8393"
    },
    "items": [
        {
            "metadata": {
                "name": "microk8s-vm",
                "uid": "2721536b-01c4-4dca-b8dc-93d8c12ec687",
                "resourceVersion": "7770",
                "creationTimestamp": "2024-10-29T11:53:17Z",
                "labels": {
                    "beta.kubernetes.io/arch": "amd64",
                    "beta.kubernetes.io/os": "linux",
                    "kubernetes.io/arch": "amd64",
                    "kubernetes.io/hostname": "microk8s-vm",
                    "kubernetes.io/os": "linux",
                    "microk8s.io/cluster": "true",
                    "node.kubernetes.io/microk8s-controlplane": "microk8s-controlplane"
                },
                "annotations": {
                    "node.alpha.kubernetes.io/ttl": "0",
                    "projectcalico.org/IPv4Address": "172.22.104.186/20",
                    "projectcalico.org/IPv4VXLANTunnelAddr": "10.1.254.64",
                    "volumes.kubernetes.io/controller-managed-attach-detach": "true"
                }
            },
            "spec": {},
            "status": {
                "capacity": {
                    "cpu": "2",
                    "ephemeral-storage": "50620216Ki",
                    "hugepages-1Gi": "0",
                    "hugepages-2Mi": "0",
                    "memory": "4005228Ki",
                    "pods": "110"
                },
                "allocatable": {
                    "cpu": "2",
                    "ephemeral-storage": "49571640Ki",
                    "hugepages-1Gi": "0",
                    "hugepages-2Mi": "0",
                    "memory": "3902828Ki",
                    "pods": "110"
                },
                "conditions": [
                    {
                        "type": "NetworkUnavailable",
                        "status": "False",
                        "lastHeartbeatTime": "2024-10-29T12:11:31Z",
                        "lastTransitionTime": "2024-10-29T12:11:31Z",
                        "reason": "CalicoIsUp",
                        "message": "Calico is running on this node"
                    },
                    {
                        "type": "MemoryPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2024-10-29T12:47:06Z",
                        "lastTransitionTime": "2024-10-29T11:53:17Z",
                        "reason": "KubeletHasSufficientMemory",
                        "message": "kubelet has sufficient memory available"
                    },
                    {
                        "type": "DiskPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2024-10-29T12:47:06Z",
                        "lastTransitionTime": "2024-10-29T11:53:17Z",
                        "reason": "KubeletHasNoDiskPressure",
                        "message": "kubelet has no disk pressure"
                    },
                    {
                        "type": "PIDPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2024-10-29T12:47:06Z",
                        "lastTransitionTime": "2024-10-29T11:53:17Z",
                        "reason": "KubeletHasSufficientPID",
                        "message": "kubelet has sufficient PID available"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastHeartbeatTime": "2024-10-29T12:47:06Z",
                        "lastTransitionTime": "2024-10-29T11:53:37Z",
                        "reason": "KubeletReady",
                        "message": "kubelet is posting ready status. AppArmor enabled"
                    }
                ],
                "addresses": [
                    {
                        "type": "InternalIP",
                        "address": "172.22.104.186"
                    },
                    {
                        "type": "Hostname",
                        "address": "microk8s-vm"
                    }
                ],
                "daemonEndpoints": {
                    "kubeletEndpoint": {
                        "Port": 10250
                    }
                },
                "nodeInfo": {
                    "machineID": "d64ef899684b424fac626ce4c79ae1ed",
                    "systemUUID": "817b9d44-45ec-4c0a-869d-6be057238ed3",
                    "bootID": "63561e02-5c4e-4114-aa3e-a87c8229cd06",
                    "kernelVersion": "5.15.0-122-generic",
                    "osImage": "Ubuntu 22.04.5 LTS",
                    "containerRuntimeVersion": "containerd://1.6.28",
                    "kubeletVersion": "v1.28.14",
                    "kubeProxyVersion": "v1.28.14",
                    "operatingSystem": "linux",
                    "architecture": "amd64"
                },
                "images": [
                    {
                        "names": [
                            "docker.io/istio/proxyv2@sha256:b71f2657e038a0d6092dfd954050a2783c7887ff8e72f77ce64840c0c39b076e",
                            "docker.io/istio/proxyv2:1.18.2"
                        ],
                        "sizeBytes": 95952518
                    },
                    {
                        "names": [
                            "docker.io/calico/cni@sha256:9a2c99f0314053aa11e971bd5d72e17951767bf5c6ff1fd9c38c4582d7cb8a0a",
                            "docker.io/calico/cni:v3.25.1"
                        ],
                        "sizeBytes": 89884044
                    },
                    {
                        "names": [
                            "docker.io/calico/node@sha256:0cd00e83d06b3af8cd712ad2c310be07b240235ad7ca1397e04eb14d20dcc20f",
                            "docker.io/calico/node:v3.25.1"
                        ],
                        "sizeBytes": 88335791
                    },
                    {
                        "names": [
                            "docker.io/istio/pilot@sha256:30328759bd2ef069ac5ccbeadc7b42ab51a47e4c6423c66987eda43ce4a3c16d",
                            "docker.io/istio/pilot:1.18.2"
                        ],
                        "sizeBytes": 80994909
                    },
                    {
                        "names": [
                            "docker.io/kubernetesui/dashboard@sha256:2e500d29e9d5f4a086b908eb8dfe7ecac57d2ab09d65b24f588b1d449841ef93",
                            "docker.io/kubernetesui/dashboard:v2.7.0"
                        ],
                        "sizeBytes": 75788960
                    },
                    {
                        "names": [
                            "docker.io/calico/kube-controllers@sha256:02c1232ee4b8c5a145c401ac1adb34a63ee7fc46b70b6ad0a4e068a774f25f8a",
                            "docker.io/calico/kube-controllers:v3.25.1"
                        ],
                        "sizeBytes": 31908610
                    },
                    {
                        "names": [
                            "registry.k8s.io/metrics-server/metrics-server@sha256:c60778fa1c44d0c5a0c4530ebe83f9243ee6fc02f4c3dc59226c201931350b10",
                            "registry.k8s.io/metrics-server/metrics-server:v0.6.3"
                        ],
                        "sizeBytes": 29943609
                    },
                    {
                        "names": [
                            "docker.io/kubernetesui/metrics-scraper@sha256:76049887f07a0476dc93efc2d3569b9529bf982b22d29f356092ce206e98765c",
                            "docker.io/kubernetesui/metrics-scraper:v1.0.8"
                        ],
                        "sizeBytes": 19746404
                    },
                    {
                        "names": [
                            "docker.io/coredns/coredns@sha256:a0ead06651cf580044aeb0a0feba63591858fb2e43ade8c9dea45a6a89ae7e5e",
                            "docker.io/coredns/coredns:1.10.1"
                        ],
                        "sizeBytes": 16190758
                    },
                    {
                        "names": [
                            "docker.io/cdkbot/hostpath-provisioner@sha256:b8e7be62e9c072adc52ca7e0ff4cffd3687cc39e98171b07884c456104e3fc5c",
                            "docker.io/cdkbot/hostpath-provisioner:1.4.2"
                        ],
                        "sizeBytes": 10004053
                    },
                    {
                        "names": [
                            "docker.io/library/registry@sha256:dbaa3e69f563fc146f3337eb9de422f74f6765bf0203c891ddfbd74a6f9b56eb",
                            "docker.io/library/registry:2.8.1"
                        ],
                        "sizeBytes": 9795532
                    },
                    {
                        "names": [
                            "docker.io/library/busybox@sha256:141c253bc4c3fd0a201d32dc1f493bcf3fff003b6df416dea4f41046e0f37d47",
                            "docker.io/library/busybox:1.28.4"
                        ],
                        "sizeBytes": 727869
                    },
                    {
                        "names": [
                            "registry.k8s.io/pause@sha256:bb6ed397957e9ca7c65ada0db5c5d1c707c9c8afc80a94acbe69f3ae76988f0c",
                            "registry.k8s.io/pause:3.7"
                        ],
                        "sizeBytes": 311278
                    }
                ]
            }
        }
    ]
}
{
    "kind": "EventList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "8393"
    },
    "items": []
}
{
    "kind": "ReplicationControllerList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "8393"
    },
    "items": []
}
{
    "kind": "ServiceList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "8393"
    },
    "items": [
        {
            "metadata": {
                "name": "registry",
                "namespace": "container-registry",
                "uid": "18bdf1b2-1652-48c5-88a9-b1098a9b2ecc",
                "resourceVersion": "1157",
                "creationTimestamp": "2024-10-29T12:02:14Z",
                "labels": {
                    "app": "registry"
                },
                "annotations": {
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"registry\"},\"name\":\"registry\",\"namespace\":\"container-registry\"},\"spec\":{\"ports\":[{\"name\":\"registry\",\"nodePort\":32000,\"port\":5000,\"targetPort\":5000}],\"selector\":{\"app\":\"registry\"},\"type\":\"NodePort\"}}\n"
                }
            },
            "spec": {
                "ports": [
                    {
                        "name": "registry",
                        "protocol": "TCP",
                        "port": 5000,
                        "targetPort": 5000,
                        "nodePort": 32000
                    }
                ],
                "selector": {
                    "app": "registry"
                },
                "clusterIP": "10.152.183.75",
                "clusterIPs": [
                    "10.152.183.75"
                ],
                "type": "NodePort",
                "sessionAffinity": "None",
                "externalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "internalTrafficPolicy": "Cluster"
            },
            "status": {
                "loadBalancer": {}
            }
        }
    ]
}
{
    "kind": "DaemonSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "8393"
    },
    "items": []
}
{
    "kind": "DeploymentList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "8393"
    },
    "items": [
        {
            "metadata": {
                "name": "registry",
                "namespace": "container-registry",
                "uid": "f6dd2dfd-32bc-4658-a176-a7836bcac6b4",
                "resourceVersion": "1266",
                "generation": 1,
                "creationTimestamp": "2024-10-29T12:02:14Z",
                "labels": {
                    "app": "registry"
                },
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"registry\"},\"name\":\"registry\",\"namespace\":\"container-registry\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app\":\"registry\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"registry\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"REGISTRY_HTTP_ADDR\",\"value\":\":5000\"},{\"name\":\"REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY\",\"value\":\"/var/lib/registry\"},{\"name\":\"REGISTRY_STORAGE_DELETE_ENABLED\",\"value\":\"yes\"}],\"image\":\"registry:2.8.1\",\"name\":\"registry\",\"ports\":[{\"containerPort\":5000,\"name\":\"registry\",\"protocol\":\"TCP\"}],\"volumeMounts\":[{\"mountPath\":\"/var/lib/registry\",\"name\":\"registry-data\"}]}],\"volumes\":[{\"name\":\"registry-data\",\"persistentVolumeClaim\":{\"claimName\":\"registry-claim\"}}]}}}}\n"
                }
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "app": "registry"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "registry"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "registry-data",
                                "persistentVolumeClaim": {
                                    "claimName": "registry-claim"
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "registry",
                                "image": "registry:2.8.1",
                                "ports": [
                                    {
                                        "name": "registry",
                                        "containerPort": 5000,
                                        "protocol": "TCP"
                                    }
                                ],
                                "env": [
                                    {
                                        "name": "REGISTRY_HTTP_ADDR",
                                        "value": ":5000"
                                    },
                                    {
                                        "name": "REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY",
                                        "value": "/var/lib/registry"
                                    },
                                    {
                                        "name": "REGISTRY_STORAGE_DELETE_ENABLED",
                                        "value": "yes"
                                    }
                                ],
                                "resources": {},
                                "volumeMounts": [
                                    {
                                        "name": "registry-data",
                                        "mountPath": "/var/lib/registry"
                                    }
                                ],
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent"
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "securityContext": {},
                        "schedulerName": "default-scheduler"
                    }
                },
                "strategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": "25%",
                        "maxSurge": "25%"
                    }
                },
                "revisionHistoryLimit": 10,
                "progressDeadlineSeconds": 600
            },
            "status": {
                "observedGeneration": 1,
                "replicas": 1,
                "updatedReplicas": 1,
                "readyReplicas": 1,
                "availableReplicas": 1,
                "conditions": [
                    {
                        "type": "Available",
                        "status": "True",
                        "lastUpdateTime": "2024-10-29T12:02:37Z",
                        "lastTransitionTime": "2024-10-29T12:02:37Z",
                        "reason": "MinimumReplicasAvailable",
                        "message": "Deployment has minimum availability."
                    },
                    {
                        "type": "Progressing",
                        "status": "True",
                        "lastUpdateTime": "2024-10-29T12:02:37Z",
                        "lastTransitionTime": "2024-10-29T12:02:14Z",
                        "reason": "NewReplicaSetAvailable",
                        "message": "ReplicaSet \"registry-6c9fcc695f\" has successfully progressed."
                    }
                ]
            }
        }
    ]
}
{
    "kind": "ReplicaSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "8393"
    },
    "items": [
        {
            "metadata": {
                "name": "registry-6c9fcc695f",
                "namespace": "container-registry",
                "uid": "aff41034-5094-42ae-bf99-c61b136bbe18",
                "resourceVersion": "1264",
                "generation": 1,
                "creationTimestamp": "2024-10-29T12:02:14Z",
                "labels": {
                    "app": "registry",
                    "pod-template-hash": "6c9fcc695f"
                },
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "2",
                    "deployment.kubernetes.io/revision": "1"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "name": "registry",
                        "uid": "f6dd2dfd-32bc-4658-a176-a7836bcac6b4",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "app": "registry",
                        "pod-template-hash": "6c9fcc695f"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "registry",
                            "pod-template-hash": "6c9fcc695f"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "registry-data",
                                "persistentVolumeClaim": {
                                    "claimName": "registry-claim"
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "registry",
                                "image": "registry:2.8.1",
                                "ports": [
                                    {
                                        "name": "registry",
                                        "containerPort": 5000,
                                        "protocol": "TCP"
                                    }
                                ],
                                "env": [
                                    {
                                        "name": "REGISTRY_HTTP_ADDR",
                                        "value": ":5000"
                                    },
                                    {
                                        "name": "REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY",
                                        "value": "/var/lib/registry"
                                    },
                                    {
                                        "name": "REGISTRY_STORAGE_DELETE_ENABLED",
                                        "value": "yes"
                                    }
                                ],
                                "resources": {},
                                "volumeMounts": [
                                    {
                                        "name": "registry-data",
                                        "mountPath": "/var/lib/registry"
                                    }
                                ],
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent"
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "securityContext": {},
                        "schedulerName": "default-scheduler"
                    }
                }
            },
            "status": {
                "replicas": 1,
                "fullyLabeledReplicas": 1,
                "readyReplicas": 1,
                "availableReplicas": 1,
                "observedGeneration": 1
            }
        }
    ]
}
{
    "kind": "PodList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "8393"
    },
    "items": [
        {
            "metadata": {
                "name": "registry-6c9fcc695f-5sh5d",
                "generateName": "registry-6c9fcc695f-",
                "namespace": "container-registry",
                "uid": "d36feefa-4d33-4230-b3b7-711774fb4976",
                "resourceVersion": "2685",
                "creationTimestamp": "2024-10-29T12:02:14Z",
                "labels": {
                    "app": "registry",
                    "pod-template-hash": "6c9fcc695f"
                },
                "annotations": {
                    "cni.projectcalico.org/containerID": "065e9affb2f3d2ac41bd9fa6bf727916d82c3259027f0ad0c39514a2873d3cec",
                    "cni.projectcalico.org/podIP": "10.1.254.79/32",
                    "cni.projectcalico.org/podIPs": "10.1.254.79/32"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "ReplicaSet",
                        "name": "registry-6c9fcc695f",
                        "uid": "aff41034-5094-42ae-bf99-c61b136bbe18",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "registry-data",
                        "persistentVolumeClaim": {
                            "claimName": "registry-claim"
                        }
                    },
                    {
                        "name": "kube-api-access-mdrzz",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "registry",
                        "image": "registry:2.8.1",
                        "ports": [
                            {
                                "name": "registry",
                                "containerPort": 5000,
                                "protocol": "TCP"
                            }
                        ],
                        "env": [
                            {
                                "name": "REGISTRY_HTTP_ADDR",
                                "value": ":5000"
                            },
                            {
                                "name": "REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY",
                                "value": "/var/lib/registry"
                            },
                            {
                                "name": "REGISTRY_STORAGE_DELETE_ENABLED",
                                "value": "yes"
                            }
                        ],
                        "resources": {},
                        "volumeMounts": [
                            {
                                "name": "registry-data",
                                "mountPath": "/var/lib/registry"
                            },
                            {
                                "name": "kube-api-access-mdrzz",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "serviceAccountName": "default",
                "serviceAccount": "default",
                "nodeName": "microk8s-vm",
                "securityContext": {},
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    }
                ],
                "priority": 0,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-29T12:02:30Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-29T12:11:32Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-29T12:11:32Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-29T12:02:30Z"
                    }
                ],
                "hostIP": "172.22.104.186",
                "podIP": "10.1.254.79",
                "podIPs": [
                    {
                        "ip": "10.1.254.79"
                    }
                ],
                "startTime": "2024-10-29T12:02:30Z",
                "containerStatuses": [
                    {
                        "name": "registry",
                        "state": {
                            "running": {
                                "startedAt": "2024-10-29T12:11:31Z"
                            }
                        },
                        "lastState": {
                            "terminated": {
                                "exitCode": 255,
                                "reason": "Unknown",
                                "startedAt": "2024-10-29T12:02:37Z",
                                "finishedAt": "2024-10-29T12:10:59Z",
                                "containerID": "containerd://fe760b69cc6e63d437292e9b6ef32027173d11a0deee5a0e3f38e733f8f85634"
                            }
                        },
                        "ready": true,
                        "restartCount": 1,
                        "image": "docker.io/library/registry:2.8.1",
                        "imageID": "docker.io/library/registry@sha256:dbaa3e69f563fc146f3337eb9de422f74f6765bf0203c891ddfbd74a6f9b56eb",
                        "containerID": "containerd://bf49397ffa21d4b9a1334424d03ce6bbdd02fd878411e1f53d9ba319ae191837",
                        "started": true
                    }
                ],
                "qosClass": "BestEffort"
            }
        }
    ]
}
==== START logs for container registry of pod container-registry/registry-6c9fcc695f-5sh5d ====
Request log error: an error on the server ("unknown") has prevented the request from succeeding (get pods registry-6c9fcc695f-5sh5d)
==== END logs for container registry of pod container-registry/registry-6c9fcc695f-5sh5d ====
{
    "kind": "EventList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "8393"
    },
    "items": []
}
{
    "kind": "ReplicationControllerList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "8393"
    },
    "items": []
}
{
    "kind": "ServiceList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "8393"
    },
    "items": [
        {
            "metadata": {
                "name": "kubernetes",
                "namespace": "default",
                "uid": "aeb5ee5c-e29d-4e9f-beaa-524d3c81c5ed",
                "resourceVersion": "73",
                "creationTimestamp": "2024-10-29T11:53:16Z",
                "labels": {
                    "component": "apiserver",
                    "provider": "kubernetes"
                }
            },
            "spec": {
                "ports": [
                    {
                        "name": "https",
                        "protocol": "TCP",
                        "port": 443,
                        "targetPort": 16443
                    }
                ],
                "clusterIP": "10.152.183.1",
                "clusterIPs": [
                    "10.152.183.1"
                ],
                "type": "ClusterIP",
                "sessionAffinity": "None",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "internalTrafficPolicy": "Cluster"
            },
            "status": {
                "loadBalancer": {}
            }
        }
    ]
}
{
    "kind": "DaemonSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "8393"
    },
    "items": []
}
{
    "kind": "DeploymentList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "8393"
    },
    "items": []
}
{
    "kind": "ReplicaSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "8393"
    },
    "items": []
}
{
    "kind": "PodList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "8393"
    },
    "items": []
}
{
    "kind": "EventList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "8393"
    },
    "items": []
}
{
    "kind": "ReplicationControllerList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "8393"
    },
    "items": []
}
{
    "kind": "ServiceList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "8393"
    },
    "items": [
        {
            "metadata": {
                "name": "istio-egressgateway",
                "namespace": "istio-system",
                "uid": "57104286-7c6c-4a10-91f9-df9a2d306dd1",
                "resourceVersion": "1574",
                "creationTimestamp": "2024-10-29T12:03:54Z",
                "labels": {
                    "app": "istio-egressgateway",
                    "install.operator.istio.io/owning-resource": "unknown",
                    "install.operator.istio.io/owning-resource-namespace": "istio-system",
                    "istio": "egressgateway",
                    "istio.io/rev": "default",
                    "operator.istio.io/component": "EgressGateways",
                    "operator.istio.io/managed": "Reconcile",
                    "operator.istio.io/version": "1.18.2",
                    "release": "istio"
                },
                "annotations": {
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"istio-egressgateway\",\"install.operator.istio.io/owning-resource\":\"unknown\",\"install.operator.istio.io/owning-resource-namespace\":\"istio-system\",\"istio\":\"egressgateway\",\"istio.io/rev\":\"default\",\"operator.istio.io/component\":\"EgressGateways\",\"operator.istio.io/managed\":\"Reconcile\",\"operator.istio.io/version\":\"1.18.2\",\"release\":\"istio\"},\"name\":\"istio-egressgateway\",\"namespace\":\"istio-system\"},\"spec\":{\"ports\":[{\"name\":\"http2\",\"port\":80,\"protocol\":\"TCP\",\"targetPort\":8080},{\"name\":\"https\",\"port\":443,\"protocol\":\"TCP\",\"targetPort\":8443}],\"selector\":{\"app\":\"istio-egressgateway\",\"istio\":\"egressgateway\"},\"type\":\"ClusterIP\"}}\n"
                }
            },
            "spec": {
                "ports": [
                    {
                        "name": "http2",
                        "protocol": "TCP",
                        "port": 80,
                        "targetPort": 8080
                    },
                    {
                        "name": "https",
                        "protocol": "TCP",
                        "port": 443,
                        "targetPort": 8443
                    }
                ],
                "selector": {
                    "app": "istio-egressgateway",
                    "istio": "egressgateway"
                },
                "clusterIP": "10.152.183.135",
                "clusterIPs": [
                    "10.152.183.135"
                ],
                "type": "ClusterIP",
                "sessionAffinity": "None",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "internalTrafficPolicy": "Cluster"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "metadata": {
                "name": "istio-ingressgateway",
                "namespace": "istio-system",
                "uid": "f640ea3d-53a7-44ef-a64b-318886c5b85e",
                "resourceVersion": "1586",
                "creationTimestamp": "2024-10-29T12:03:54Z",
                "labels": {
                    "app": "istio-ingressgateway",
                    "install.operator.istio.io/owning-resource": "unknown",
                    "install.operator.istio.io/owning-resource-namespace": "istio-system",
                    "istio": "ingressgateway",
                    "istio.io/rev": "default",
                    "operator.istio.io/component": "IngressGateways",
                    "operator.istio.io/managed": "Reconcile",
                    "operator.istio.io/version": "1.18.2",
                    "release": "istio"
                },
                "annotations": {
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"istio-ingressgateway\",\"install.operator.istio.io/owning-resource\":\"unknown\",\"install.operator.istio.io/owning-resource-namespace\":\"istio-system\",\"istio\":\"ingressgateway\",\"istio.io/rev\":\"default\",\"operator.istio.io/component\":\"IngressGateways\",\"operator.istio.io/managed\":\"Reconcile\",\"operator.istio.io/version\":\"1.18.2\",\"release\":\"istio\"},\"name\":\"istio-ingressgateway\",\"namespace\":\"istio-system\"},\"spec\":{\"ports\":[{\"name\":\"status-port\",\"port\":15021,\"protocol\":\"TCP\",\"targetPort\":15021},{\"name\":\"http2\",\"port\":80,\"protocol\":\"TCP\",\"targetPort\":8080},{\"name\":\"https\",\"port\":443,\"protocol\":\"TCP\",\"targetPort\":8443},{\"name\":\"tcp\",\"port\":31400,\"protocol\":\"TCP\",\"targetPort\":31400},{\"name\":\"tls\",\"port\":15443,\"protocol\":\"TCP\",\"targetPort\":15443}],\"selector\":{\"app\":\"istio-ingressgateway\",\"istio\":\"ingressgateway\"},\"type\":\"LoadBalancer\"}}\n"
                }
            },
            "spec": {
                "ports": [
                    {
                        "name": "status-port",
                        "protocol": "TCP",
                        "port": 15021,
                        "targetPort": 15021,
                        "nodePort": 32269
                    },
                    {
                        "name": "http2",
                        "protocol": "TCP",
                        "port": 80,
                        "targetPort": 8080,
                        "nodePort": 30657
                    },
                    {
                        "name": "https",
                        "protocol": "TCP",
                        "port": 443,
                        "targetPort": 8443,
                        "nodePort": 31044
                    },
                    {
                        "name": "tcp",
                        "protocol": "TCP",
                        "port": 31400,
                        "targetPort": 31400,
                        "nodePort": 31275
                    },
                    {
                        "name": "tls",
                        "protocol": "TCP",
                        "port": 15443,
                        "targetPort": 15443,
                        "nodePort": 32405
                    }
                ],
                "selector": {
                    "app": "istio-ingressgateway",
                    "istio": "ingressgateway"
                },
                "clusterIP": "10.152.183.228",
                "clusterIPs": [
                    "10.152.183.228"
                ],
                "type": "LoadBalancer",
                "sessionAffinity": "None",
                "externalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "allocateLoadBalancerNodePorts": true,
                "internalTrafficPolicy": "Cluster"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "metadata": {
                "name": "istiod",
                "namespace": "istio-system",
                "uid": "1a9b4d71-ad9d-43b8-9afa-09e6c856dfcc",
                "resourceVersion": "1478",
                "creationTimestamp": "2024-10-29T12:03:40Z",
                "labels": {
                    "app": "istiod",
                    "install.operator.istio.io/owning-resource": "unknown",
                    "install.operator.istio.io/owning-resource-namespace": "istio-system",
                    "istio": "pilot",
                    "istio.io/rev": "default",
                    "operator.istio.io/component": "Pilot",
                    "operator.istio.io/managed": "Reconcile",
                    "operator.istio.io/version": "1.18.2",
                    "release": "istio"
                },
                "annotations": {
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"istiod\",\"install.operator.istio.io/owning-resource\":\"unknown\",\"install.operator.istio.io/owning-resource-namespace\":\"istio-system\",\"istio\":\"pilot\",\"istio.io/rev\":\"default\",\"operator.istio.io/component\":\"Pilot\",\"operator.istio.io/managed\":\"Reconcile\",\"operator.istio.io/version\":\"1.18.2\",\"release\":\"istio\"},\"name\":\"istiod\",\"namespace\":\"istio-system\"},\"spec\":{\"ports\":[{\"name\":\"grpc-xds\",\"port\":15010,\"protocol\":\"TCP\"},{\"name\":\"https-dns\",\"port\":15012,\"protocol\":\"TCP\"},{\"name\":\"https-webhook\",\"port\":443,\"protocol\":\"TCP\",\"targetPort\":15017},{\"name\":\"http-monitoring\",\"port\":15014,\"protocol\":\"TCP\"}],\"selector\":{\"app\":\"istiod\",\"istio\":\"pilot\"}}}\n"
                }
            },
            "spec": {
                "ports": [
                    {
                        "name": "grpc-xds",
                        "protocol": "TCP",
                        "port": 15010,
                        "targetPort": 15010
                    },
                    {
                        "name": "https-dns",
                        "protocol": "TCP",
                        "port": 15012,
                        "targetPort": 15012
                    },
                    {
                        "name": "https-webhook",
                        "protocol": "TCP",
                        "port": 443,
                        "targetPort": 15017
                    },
                    {
                        "name": "http-monitoring",
                        "protocol": "TCP",
                        "port": 15014,
                        "targetPort": 15014
                    }
                ],
                "selector": {
                    "app": "istiod",
                    "istio": "pilot"
                },
                "clusterIP": "10.152.183.215",
                "clusterIPs": [
                    "10.152.183.215"
                ],
                "type": "ClusterIP",
                "sessionAffinity": "None",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "internalTrafficPolicy": "Cluster"
            },
            "status": {
                "loadBalancer": {}
            }
        }
    ]
}
{
    "kind": "DaemonSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "8393"
    },
    "items": []
}
{
    "kind": "DeploymentList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "8393"
    },
    "items": [
        {
            "metadata": {
                "name": "istio-egressgateway",
                "namespace": "istio-system",
                "uid": "ddb1b7f7-0f29-42d1-965f-3fe7c233a47b",
                "resourceVersion": "2950",
                "generation": 1,
                "creationTimestamp": "2024-10-29T12:03:54Z",
                "labels": {
                    "app": "istio-egressgateway",
                    "install.operator.istio.io/owning-resource": "unknown",
                    "install.operator.istio.io/owning-resource-namespace": "istio-system",
                    "istio": "egressgateway",
                    "istio.io/rev": "default",
                    "operator.istio.io/component": "EgressGateways",
                    "operator.istio.io/managed": "Reconcile",
                    "operator.istio.io/version": "1.18.2",
                    "release": "istio"
                },
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"istio-egressgateway\",\"install.operator.istio.io/owning-resource\":\"unknown\",\"install.operator.istio.io/owning-resource-namespace\":\"istio-system\",\"istio\":\"egressgateway\",\"istio.io/rev\":\"default\",\"operator.istio.io/component\":\"EgressGateways\",\"operator.istio.io/managed\":\"Reconcile\",\"operator.istio.io/version\":\"1.18.2\",\"release\":\"istio\"},\"name\":\"istio-egressgateway\",\"namespace\":\"istio-system\"},\"spec\":{\"selector\":{\"matchLabels\":{\"app\":\"istio-egressgateway\",\"istio\":\"egressgateway\"}},\"strategy\":{\"rollingUpdate\":{\"maxSurge\":\"100%\",\"maxUnavailable\":\"25%\"}},\"template\":{\"metadata\":{\"annotations\":{\"istio.io/rev\":\"default\",\"prometheus.io/path\":\"/stats/prometheus\",\"prometheus.io/port\":\"15020\",\"prometheus.io/scrape\":\"true\",\"sidecar.istio.io/inject\":\"false\"},\"labels\":{\"app\":\"istio-egressgateway\",\"chart\":\"gateways\",\"heritage\":\"Tiller\",\"install.operator.istio.io/owning-resource\":\"unknown\",\"istio\":\"egressgateway\",\"istio.io/rev\":\"default\",\"operator.istio.io/component\":\"EgressGateways\",\"release\":\"istio\",\"service.istio.io/canonical-name\":\"istio-egressgateway\",\"service.istio.io/canonical-revision\":\"latest\",\"sidecar.istio.io/inject\":\"false\"}},\"spec\":{\"affinity\":{\"nodeAffinity\":{\"preferredDuringSchedulingIgnoredDuringExecution\":null,\"requiredDuringSchedulingIgnoredDuringExecution\":null}},\"containers\":[{\"args\":[\"proxy\",\"router\",\"--domain\",\"$(POD_NAMESPACE).svc.cluster.local\",\"--proxyLogLevel=warning\",\"--proxyComponentLogLevel=misc:error\",\"--log_output_level=default:info\"],\"env\":[{\"name\":\"JWT_POLICY\",\"value\":\"third-party-jwt\"},{\"name\":\"PILOT_CERT_PROVIDER\",\"value\":\"istiod\"},{\"name\":\"CA_ADDR\",\"value\":\"istiod.istio-system.svc:15012\"},{\"name\":\"NODE_NAME\",\"valueFrom\":{\"fieldRef\":{\"apiVersion\":\"v1\",\"fieldPath\":\"spec.nodeName\"}}},{\"name\":\"POD_NAME\",\"valueFrom\":{\"fieldRef\":{\"apiVersion\":\"v1\",\"fieldPath\":\"metadata.name\"}}},{\"name\":\"POD_NAMESPACE\",\"valueFrom\":{\"fieldRef\":{\"apiVersion\":\"v1\",\"fieldPath\":\"metadata.namespace\"}}},{\"name\":\"INSTANCE_IP\",\"valueFrom\":{\"fieldRef\":{\"apiVersion\":\"v1\",\"fieldPath\":\"status.podIP\"}}},{\"name\":\"HOST_IP\",\"valueFrom\":{\"fieldRef\":{\"apiVersion\":\"v1\",\"fieldPath\":\"status.hostIP\"}}},{\"name\":\"ISTIO_CPU_LIMIT\",\"valueFrom\":{\"resourceFieldRef\":{\"resource\":\"limits.cpu\"}}},{\"name\":\"SERVICE_ACCOUNT\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"spec.serviceAccountName\"}}},{\"name\":\"ISTIO_META_WORKLOAD_NAME\",\"value\":\"istio-egressgateway\"},{\"name\":\"ISTIO_META_OWNER\",\"value\":\"kubernetes://apis/apps/v1/namespaces/istio-system/deployments/istio-egressgateway\"},{\"name\":\"ISTIO_META_MESH_ID\",\"value\":\"cluster.local\"},{\"name\":\"TRUST_DOMAIN\",\"value\":\"cluster.local\"},{\"name\":\"ISTIO_META_UNPRIVILEGED_POD\",\"value\":\"true\"},{\"name\":\"ISTIO_META_CLUSTER_ID\",\"value\":\"Kubernetes\"},{\"name\":\"ISTIO_META_NODE_NAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"spec.nodeName\"}}}],\"image\":\"docker.io/istio/proxyv2:1.18.2\",\"name\":\"istio-proxy\",\"ports\":[{\"containerPort\":8080,\"protocol\":\"TCP\"},{\"containerPort\":8443,\"protocol\":\"TCP\"},{\"containerPort\":15090,\"name\":\"http-envoy-prom\",\"protocol\":\"TCP\"}],\"readinessProbe\":{\"failureThreshold\":30,\"httpGet\":{\"path\":\"/healthz/ready\",\"port\":15021,\"scheme\":\"HTTP\"},\"initialDelaySeconds\":1,\"periodSeconds\":2,\"successThreshold\":1,\"timeoutSeconds\":1},\"resources\":{\"limits\":{\"cpu\":\"2000m\",\"memory\":\"1024Mi\"},\"requests\":{\"cpu\":\"10m\",\"memory\":\"40Mi\"}},\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]},\"privileged\":false,\"readOnlyRootFilesystem\":true},\"volumeMounts\":[{\"mountPath\":\"/var/run/secrets/workload-spiffe-uds\",\"name\":\"workload-socket\"},{\"mountPath\":\"/var/run/secrets/credential-uds\",\"name\":\"credential-socket\"},{\"mountPath\":\"/var/run/secrets/workload-spiffe-credentials\",\"name\":\"workload-certs\"},{\"mountPath\":\"/etc/istio/proxy\",\"name\":\"istio-envoy\"},{\"mountPath\":\"/etc/istio/config\",\"name\":\"config-volume\"},{\"mountPath\":\"/var/run/secrets/istio\",\"name\":\"istiod-ca-cert\"},{\"mountPath\":\"/var/run/secrets/tokens\",\"name\":\"istio-token\",\"readOnly\":true},{\"mountPath\":\"/var/lib/istio/data\",\"name\":\"istio-data\"},{\"mountPath\":\"/etc/istio/pod\",\"name\":\"podinfo\"},{\"mountPath\":\"/etc/istio/egressgateway-certs\",\"name\":\"egressgateway-certs\",\"readOnly\":true},{\"mountPath\":\"/etc/istio/egressgateway-ca-certs\",\"name\":\"egressgateway-ca-certs\",\"readOnly\":true}]}],\"securityContext\":{\"fsGroup\":1337,\"runAsGroup\":1337,\"runAsNonRoot\":true,\"runAsUser\":1337},\"serviceAccountName\":\"istio-egressgateway-service-account\",\"volumes\":[{\"emptyDir\":{},\"name\":\"workload-socket\"},{\"emptyDir\":{},\"name\":\"credential-socket\"},{\"emptyDir\":{},\"name\":\"workload-certs\"},{\"configMap\":{\"name\":\"istio-ca-root-cert\"},\"name\":\"istiod-ca-cert\"},{\"downwardAPI\":{\"items\":[{\"fieldRef\":{\"fieldPath\":\"metadata.labels\"},\"path\":\"labels\"},{\"fieldRef\":{\"fieldPath\":\"metadata.annotations\"},\"path\":\"annotations\"}]},\"name\":\"podinfo\"},{\"emptyDir\":{},\"name\":\"istio-envoy\"},{\"emptyDir\":{},\"name\":\"istio-data\"},{\"name\":\"istio-token\",\"projected\":{\"sources\":[{\"serviceAccountToken\":{\"audience\":\"istio-ca\",\"expirationSeconds\":43200,\"path\":\"istio-token\"}}]}},{\"configMap\":{\"name\":\"istio\",\"optional\":true},\"name\":\"config-volume\"},{\"name\":\"egressgateway-certs\",\"secret\":{\"optional\":true,\"secretName\":\"istio-egressgateway-certs\"}},{\"name\":\"egressgateway-ca-certs\",\"secret\":{\"optional\":true,\"secretName\":\"istio-egressgateway-ca-certs\"}}]}}}}\n"
                }
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "app": "istio-egressgateway",
                        "istio": "egressgateway"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "istio-egressgateway",
                            "chart": "gateways",
                            "heritage": "Tiller",
                            "install.operator.istio.io/owning-resource": "unknown",
                            "istio": "egressgateway",
                            "istio.io/rev": "default",
                            "operator.istio.io/component": "EgressGateways",
                            "release": "istio",
                            "service.istio.io/canonical-name": "istio-egressgateway",
                            "service.istio.io/canonical-revision": "latest",
                            "sidecar.istio.io/inject": "false"
                        },
                        "annotations": {
                            "istio.io/rev": "default",
                            "prometheus.io/path": "/stats/prometheus",
                            "prometheus.io/port": "15020",
                            "prometheus.io/scrape": "true",
                            "sidecar.istio.io/inject": "false"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "workload-socket",
                                "emptyDir": {}
                            },
                            {
                                "name": "credential-socket",
                                "emptyDir": {}
                            },
                            {
                                "name": "workload-certs",
                                "emptyDir": {}
                            },
                            {
                                "name": "istiod-ca-cert",
                                "configMap": {
                                    "name": "istio-ca-root-cert",
                                    "defaultMode": 420
                                }
                            },
                            {
                                "name": "podinfo",
                                "downwardAPI": {
                                    "items": [
                                        {
                                            "path": "labels",
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.labels"
                                            }
                                        },
                                        {
                                            "path": "annotations",
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.annotations"
                                            }
                                        }
                                    ],
                                    "defaultMode": 420
                                }
                            },
                            {
                                "name": "istio-envoy",
                                "emptyDir": {}
                            },
                            {
                                "name": "istio-data",
                                "emptyDir": {}
                            },
                            {
                                "name": "istio-token",
                                "projected": {
                                    "sources": [
                                        {
                                            "serviceAccountToken": {
                                                "audience": "istio-ca",
                                                "expirationSeconds": 43200,
                                                "path": "istio-token"
                                            }
                                        }
                                    ],
                                    "defaultMode": 420
                                }
                            },
                            {
                                "name": "config-volume",
                                "configMap": {
                                    "name": "istio",
                                    "defaultMode": 420,
                                    "optional": true
                                }
                            },
                            {
                                "name": "egressgateway-certs",
                                "secret": {
                                    "secretName": "istio-egressgateway-certs",
                                    "defaultMode": 420,
                                    "optional": true
                                }
                            },
                            {
                                "name": "egressgateway-ca-certs",
                                "secret": {
                                    "secretName": "istio-egressgateway-ca-certs",
                                    "defaultMode": 420,
                                    "optional": true
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "istio-proxy",
                                "image": "docker.io/istio/proxyv2:1.18.2",
                                "args": [
                                    "proxy",
                                    "router",
                                    "--domain",
                                    "$(POD_NAMESPACE).svc.cluster.local",
                                    "--proxyLogLevel=warning",
                                    "--proxyComponentLogLevel=misc:error",
                                    "--log_output_level=default:info"
                                ],
                                "ports": [
                                    {
                                        "containerPort": 8080,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 8443,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "http-envoy-prom",
                                        "containerPort": 15090,
                                        "protocol": "TCP"
                                    }
                                ],
                                "env": [
                                    {
                                        "name": "JWT_POLICY",
                                        "value": "third-party-jwt"
                                    },
                                    {
                                        "name": "PILOT_CERT_PROVIDER",
                                        "value": "istiod"
                                    },
                                    {
                                        "name": "CA_ADDR",
                                        "value": "istiod.istio-system.svc:15012"
                                    },
                                    {
                                        "name": "NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    },
                                    {
                                        "name": "POD_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.name"
                                            }
                                        }
                                    },
                                    {
                                        "name": "POD_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "INSTANCE_IP",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "status.podIP"
                                            }
                                        }
                                    },
                                    {
                                        "name": "HOST_IP",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "status.hostIP"
                                            }
                                        }
                                    },
                                    {
                                        "name": "ISTIO_CPU_LIMIT",
                                        "valueFrom": {
                                            "resourceFieldRef": {
                                                "resource": "limits.cpu",
                                                "divisor": "0"
                                            }
                                        }
                                    },
                                    {
                                        "name": "SERVICE_ACCOUNT",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.serviceAccountName"
                                            }
                                        }
                                    },
                                    {
                                        "name": "ISTIO_META_WORKLOAD_NAME",
                                        "value": "istio-egressgateway"
                                    },
                                    {
                                        "name": "ISTIO_META_OWNER",
                                        "value": "kubernetes://apis/apps/v1/namespaces/istio-system/deployments/istio-egressgateway"
                                    },
                                    {
                                        "name": "ISTIO_META_MESH_ID",
                                        "value": "cluster.local"
                                    },
                                    {
                                        "name": "TRUST_DOMAIN",
                                        "value": "cluster.local"
                                    },
                                    {
                                        "name": "ISTIO_META_UNPRIVILEGED_POD",
                                        "value": "true"
                                    },
                                    {
                                        "name": "ISTIO_META_CLUSTER_ID",
                                        "value": "Kubernetes"
                                    },
                                    {
                                        "name": "ISTIO_META_NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "2",
                                        "memory": "1Gi"
                                    },
                                    "requests": {
                                        "cpu": "10m",
                                        "memory": "40Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "workload-socket",
                                        "mountPath": "/var/run/secrets/workload-spiffe-uds"
                                    },
                                    {
                                        "name": "credential-socket",
                                        "mountPath": "/var/run/secrets/credential-uds"
                                    },
                                    {
                                        "name": "workload-certs",
                                        "mountPath": "/var/run/secrets/workload-spiffe-credentials"
                                    },
                                    {
                                        "name": "istio-envoy",
                                        "mountPath": "/etc/istio/proxy"
                                    },
                                    {
                                        "name": "config-volume",
                                        "mountPath": "/etc/istio/config"
                                    },
                                    {
                                        "name": "istiod-ca-cert",
                                        "mountPath": "/var/run/secrets/istio"
                                    },
                                    {
                                        "name": "istio-token",
                                        "readOnly": true,
                                        "mountPath": "/var/run/secrets/tokens"
                                    },
                                    {
                                        "name": "istio-data",
                                        "mountPath": "/var/lib/istio/data"
                                    },
                                    {
                                        "name": "podinfo",
                                        "mountPath": "/etc/istio/pod"
                                    },
                                    {
                                        "name": "egressgateway-certs",
                                        "readOnly": true,
                                        "mountPath": "/etc/istio/egressgateway-certs"
                                    },
                                    {
                                        "name": "egressgateway-ca-certs",
                                        "readOnly": true,
                                        "mountPath": "/etc/istio/egressgateway-ca-certs"
                                    }
                                ],
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/healthz/ready",
                                        "port": 15021,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 1,
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 2,
                                    "successThreshold": 1,
                                    "failureThreshold": 30
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "privileged": false,
                                    "readOnlyRootFilesystem": true,
                                    "allowPrivilegeEscalation": false
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "serviceAccountName": "istio-egressgateway-service-account",
                        "serviceAccount": "istio-egressgateway-service-account",
                        "securityContext": {
                            "runAsUser": 1337,
                            "runAsGroup": 1337,
                            "runAsNonRoot": true,
                            "fsGroup": 1337
                        },
                        "affinity": {
                            "nodeAffinity": {}
                        },
                        "schedulerName": "default-scheduler"
                    }
                },
                "strategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": "25%",
                        "maxSurge": "100%"
                    }
                },
                "revisionHistoryLimit": 10,
                "progressDeadlineSeconds": 600
            },
            "status": {
                "observedGeneration": 1,
                "replicas": 1,
                "updatedReplicas": 1,
                "readyReplicas": 1,
                "availableReplicas": 1,
                "conditions": [
                    {
                        "type": "Progressing",
                        "status": "True",
                        "lastUpdateTime": "2024-10-29T12:04:09Z",
                        "lastTransitionTime": "2024-10-29T12:03:54Z",
                        "reason": "NewReplicaSetAvailable",
                        "message": "ReplicaSet \"istio-egressgateway-5499894f8d\" has successfully progressed."
                    },
                    {
                        "type": "Available",
                        "status": "True",
                        "lastUpdateTime": "2024-10-29T12:12:53Z",
                        "lastTransitionTime": "2024-10-29T12:12:53Z",
                        "reason": "MinimumReplicasAvailable",
                        "message": "Deployment has minimum availability."
                    }
                ]
            }
        },
        {
            "metadata": {
                "name": "istio-ingressgateway",
                "namespace": "istio-system",
                "uid": "06822c7a-be94-437b-b89f-0c2f3aec9b3e",
                "resourceVersion": "2944",
                "generation": 1,
                "creationTimestamp": "2024-10-29T12:03:54Z",
                "labels": {
                    "app": "istio-ingressgateway",
                    "install.operator.istio.io/owning-resource": "unknown",
                    "install.operator.istio.io/owning-resource-namespace": "istio-system",
                    "istio": "ingressgateway",
                    "istio.io/rev": "default",
                    "operator.istio.io/component": "IngressGateways",
                    "operator.istio.io/managed": "Reconcile",
                    "operator.istio.io/version": "1.18.2",
                    "release": "istio"
                },
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"istio-ingressgateway\",\"install.operator.istio.io/owning-resource\":\"unknown\",\"install.operator.istio.io/owning-resource-namespace\":\"istio-system\",\"istio\":\"ingressgateway\",\"istio.io/rev\":\"default\",\"operator.istio.io/component\":\"IngressGateways\",\"operator.istio.io/managed\":\"Reconcile\",\"operator.istio.io/version\":\"1.18.2\",\"release\":\"istio\"},\"name\":\"istio-ingressgateway\",\"namespace\":\"istio-system\"},\"spec\":{\"selector\":{\"matchLabels\":{\"app\":\"istio-ingressgateway\",\"istio\":\"ingressgateway\"}},\"strategy\":{\"rollingUpdate\":{\"maxSurge\":\"100%\",\"maxUnavailable\":\"25%\"}},\"template\":{\"metadata\":{\"annotations\":{\"istio.io/rev\":\"default\",\"prometheus.io/path\":\"/stats/prometheus\",\"prometheus.io/port\":\"15020\",\"prometheus.io/scrape\":\"true\",\"sidecar.istio.io/inject\":\"false\"},\"labels\":{\"app\":\"istio-ingressgateway\",\"chart\":\"gateways\",\"heritage\":\"Tiller\",\"install.operator.istio.io/owning-resource\":\"unknown\",\"istio\":\"ingressgateway\",\"istio.io/rev\":\"default\",\"operator.istio.io/component\":\"IngressGateways\",\"release\":\"istio\",\"service.istio.io/canonical-name\":\"istio-ingressgateway\",\"service.istio.io/canonical-revision\":\"latest\",\"sidecar.istio.io/inject\":\"false\"}},\"spec\":{\"affinity\":{\"nodeAffinity\":{\"preferredDuringSchedulingIgnoredDuringExecution\":null,\"requiredDuringSchedulingIgnoredDuringExecution\":null}},\"containers\":[{\"args\":[\"proxy\",\"router\",\"--domain\",\"$(POD_NAMESPACE).svc.cluster.local\",\"--proxyLogLevel=warning\",\"--proxyComponentLogLevel=misc:error\",\"--log_output_level=default:info\"],\"env\":[{\"name\":\"JWT_POLICY\",\"value\":\"third-party-jwt\"},{\"name\":\"PILOT_CERT_PROVIDER\",\"value\":\"istiod\"},{\"name\":\"CA_ADDR\",\"value\":\"istiod.istio-system.svc:15012\"},{\"name\":\"NODE_NAME\",\"valueFrom\":{\"fieldRef\":{\"apiVersion\":\"v1\",\"fieldPath\":\"spec.nodeName\"}}},{\"name\":\"POD_NAME\",\"valueFrom\":{\"fieldRef\":{\"apiVersion\":\"v1\",\"fieldPath\":\"metadata.name\"}}},{\"name\":\"POD_NAMESPACE\",\"valueFrom\":{\"fieldRef\":{\"apiVersion\":\"v1\",\"fieldPath\":\"metadata.namespace\"}}},{\"name\":\"INSTANCE_IP\",\"valueFrom\":{\"fieldRef\":{\"apiVersion\":\"v1\",\"fieldPath\":\"status.podIP\"}}},{\"name\":\"HOST_IP\",\"valueFrom\":{\"fieldRef\":{\"apiVersion\":\"v1\",\"fieldPath\":\"status.hostIP\"}}},{\"name\":\"ISTIO_CPU_LIMIT\",\"valueFrom\":{\"resourceFieldRef\":{\"resource\":\"limits.cpu\"}}},{\"name\":\"SERVICE_ACCOUNT\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"spec.serviceAccountName\"}}},{\"name\":\"ISTIO_META_WORKLOAD_NAME\",\"value\":\"istio-ingressgateway\"},{\"name\":\"ISTIO_META_OWNER\",\"value\":\"kubernetes://apis/apps/v1/namespaces/istio-system/deployments/istio-ingressgateway\"},{\"name\":\"ISTIO_META_MESH_ID\",\"value\":\"cluster.local\"},{\"name\":\"TRUST_DOMAIN\",\"value\":\"cluster.local\"},{\"name\":\"ISTIO_META_UNPRIVILEGED_POD\",\"value\":\"true\"},{\"name\":\"ISTIO_META_CLUSTER_ID\",\"value\":\"Kubernetes\"},{\"name\":\"ISTIO_META_NODE_NAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"spec.nodeName\"}}}],\"image\":\"docker.io/istio/proxyv2:1.18.2\",\"name\":\"istio-proxy\",\"ports\":[{\"containerPort\":15021,\"protocol\":\"TCP\"},{\"containerPort\":8080,\"protocol\":\"TCP\"},{\"containerPort\":8443,\"protocol\":\"TCP\"},{\"containerPort\":31400,\"protocol\":\"TCP\"},{\"containerPort\":15443,\"protocol\":\"TCP\"},{\"containerPort\":15090,\"name\":\"http-envoy-prom\",\"protocol\":\"TCP\"}],\"readinessProbe\":{\"failureThreshold\":30,\"httpGet\":{\"path\":\"/healthz/ready\",\"port\":15021,\"scheme\":\"HTTP\"},\"initialDelaySeconds\":1,\"periodSeconds\":2,\"successThreshold\":1,\"timeoutSeconds\":1},\"resources\":{\"limits\":{\"cpu\":\"2000m\",\"memory\":\"1024Mi\"},\"requests\":{\"cpu\":\"10m\",\"memory\":\"40Mi\"}},\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]},\"privileged\":false,\"readOnlyRootFilesystem\":true},\"volumeMounts\":[{\"mountPath\":\"/var/run/secrets/workload-spiffe-uds\",\"name\":\"workload-socket\"},{\"mountPath\":\"/var/run/secrets/credential-uds\",\"name\":\"credential-socket\"},{\"mountPath\":\"/var/run/secrets/workload-spiffe-credentials\",\"name\":\"workload-certs\"},{\"mountPath\":\"/etc/istio/proxy\",\"name\":\"istio-envoy\"},{\"mountPath\":\"/etc/istio/config\",\"name\":\"config-volume\"},{\"mountPath\":\"/var/run/secrets/istio\",\"name\":\"istiod-ca-cert\"},{\"mountPath\":\"/var/run/secrets/tokens\",\"name\":\"istio-token\",\"readOnly\":true},{\"mountPath\":\"/var/lib/istio/data\",\"name\":\"istio-data\"},{\"mountPath\":\"/etc/istio/pod\",\"name\":\"podinfo\"},{\"mountPath\":\"/etc/istio/ingressgateway-certs\",\"name\":\"ingressgateway-certs\",\"readOnly\":true},{\"mountPath\":\"/etc/istio/ingressgateway-ca-certs\",\"name\":\"ingressgateway-ca-certs\",\"readOnly\":true}]}],\"securityContext\":{\"fsGroup\":1337,\"runAsGroup\":1337,\"runAsNonRoot\":true,\"runAsUser\":1337},\"serviceAccountName\":\"istio-ingressgateway-service-account\",\"volumes\":[{\"emptyDir\":{},\"name\":\"workload-socket\"},{\"emptyDir\":{},\"name\":\"credential-socket\"},{\"emptyDir\":{},\"name\":\"workload-certs\"},{\"configMap\":{\"name\":\"istio-ca-root-cert\"},\"name\":\"istiod-ca-cert\"},{\"downwardAPI\":{\"items\":[{\"fieldRef\":{\"fieldPath\":\"metadata.labels\"},\"path\":\"labels\"},{\"fieldRef\":{\"fieldPath\":\"metadata.annotations\"},\"path\":\"annotations\"}]},\"name\":\"podinfo\"},{\"emptyDir\":{},\"name\":\"istio-envoy\"},{\"emptyDir\":{},\"name\":\"istio-data\"},{\"name\":\"istio-token\",\"projected\":{\"sources\":[{\"serviceAccountToken\":{\"audience\":\"istio-ca\",\"expirationSeconds\":43200,\"path\":\"istio-token\"}}]}},{\"configMap\":{\"name\":\"istio\",\"optional\":true},\"name\":\"config-volume\"},{\"name\":\"ingressgateway-certs\",\"secret\":{\"optional\":true,\"secretName\":\"istio-ingressgateway-certs\"}},{\"name\":\"ingressgateway-ca-certs\",\"secret\":{\"optional\":true,\"secretName\":\"istio-ingressgateway-ca-certs\"}}]}}}}\n"
                }
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "app": "istio-ingressgateway",
                        "istio": "ingressgateway"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "istio-ingressgateway",
                            "chart": "gateways",
                            "heritage": "Tiller",
                            "install.operator.istio.io/owning-resource": "unknown",
                            "istio": "ingressgateway",
                            "istio.io/rev": "default",
                            "operator.istio.io/component": "IngressGateways",
                            "release": "istio",
                            "service.istio.io/canonical-name": "istio-ingressgateway",
                            "service.istio.io/canonical-revision": "latest",
                            "sidecar.istio.io/inject": "false"
                        },
                        "annotations": {
                            "istio.io/rev": "default",
                            "prometheus.io/path": "/stats/prometheus",
                            "prometheus.io/port": "15020",
                            "prometheus.io/scrape": "true",
                            "sidecar.istio.io/inject": "false"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "workload-socket",
                                "emptyDir": {}
                            },
                            {
                                "name": "credential-socket",
                                "emptyDir": {}
                            },
                            {
                                "name": "workload-certs",
                                "emptyDir": {}
                            },
                            {
                                "name": "istiod-ca-cert",
                                "configMap": {
                                    "name": "istio-ca-root-cert",
                                    "defaultMode": 420
                                }
                            },
                            {
                                "name": "podinfo",
                                "downwardAPI": {
                                    "items": [
                                        {
                                            "path": "labels",
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.labels"
                                            }
                                        },
                                        {
                                            "path": "annotations",
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.annotations"
                                            }
                                        }
                                    ],
                                    "defaultMode": 420
                                }
                            },
                            {
                                "name": "istio-envoy",
                                "emptyDir": {}
                            },
                            {
                                "name": "istio-data",
                                "emptyDir": {}
                            },
                            {
                                "name": "istio-token",
                                "projected": {
                                    "sources": [
                                        {
                                            "serviceAccountToken": {
                                                "audience": "istio-ca",
                                                "expirationSeconds": 43200,
                                                "path": "istio-token"
                                            }
                                        }
                                    ],
                                    "defaultMode": 420
                                }
                            },
                            {
                                "name": "config-volume",
                                "configMap": {
                                    "name": "istio",
                                    "defaultMode": 420,
                                    "optional": true
                                }
                            },
                            {
                                "name": "ingressgateway-certs",
                                "secret": {
                                    "secretName": "istio-ingressgateway-certs",
                                    "defaultMode": 420,
                                    "optional": true
                                }
                            },
                            {
                                "name": "ingressgateway-ca-certs",
                                "secret": {
                                    "secretName": "istio-ingressgateway-ca-certs",
                                    "defaultMode": 420,
                                    "optional": true
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "istio-proxy",
                                "image": "docker.io/istio/proxyv2:1.18.2",
                                "args": [
                                    "proxy",
                                    "router",
                                    "--domain",
                                    "$(POD_NAMESPACE).svc.cluster.local",
                                    "--proxyLogLevel=warning",
                                    "--proxyComponentLogLevel=misc:error",
                                    "--log_output_level=default:info"
                                ],
                                "ports": [
                                    {
                                        "containerPort": 15021,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 8080,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 8443,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 31400,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 15443,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "http-envoy-prom",
                                        "containerPort": 15090,
                                        "protocol": "TCP"
                                    }
                                ],
                                "env": [
                                    {
                                        "name": "JWT_POLICY",
                                        "value": "third-party-jwt"
                                    },
                                    {
                                        "name": "PILOT_CERT_PROVIDER",
                                        "value": "istiod"
                                    },
                                    {
                                        "name": "CA_ADDR",
                                        "value": "istiod.istio-system.svc:15012"
                                    },
                                    {
                                        "name": "NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    },
                                    {
                                        "name": "POD_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.name"
                                            }
                                        }
                                    },
                                    {
                                        "name": "POD_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "INSTANCE_IP",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "status.podIP"
                                            }
                                        }
                                    },
                                    {
                                        "name": "HOST_IP",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "status.hostIP"
                                            }
                                        }
                                    },
                                    {
                                        "name": "ISTIO_CPU_LIMIT",
                                        "valueFrom": {
                                            "resourceFieldRef": {
                                                "resource": "limits.cpu",
                                                "divisor": "0"
                                            }
                                        }
                                    },
                                    {
                                        "name": "SERVICE_ACCOUNT",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.serviceAccountName"
                                            }
                                        }
                                    },
                                    {
                                        "name": "ISTIO_META_WORKLOAD_NAME",
                                        "value": "istio-ingressgateway"
                                    },
                                    {
                                        "name": "ISTIO_META_OWNER",
                                        "value": "kubernetes://apis/apps/v1/namespaces/istio-system/deployments/istio-ingressgateway"
                                    },
                                    {
                                        "name": "ISTIO_META_MESH_ID",
                                        "value": "cluster.local"
                                    },
                                    {
                                        "name": "TRUST_DOMAIN",
                                        "value": "cluster.local"
                                    },
                                    {
                                        "name": "ISTIO_META_UNPRIVILEGED_POD",
                                        "value": "true"
                                    },
                                    {
                                        "name": "ISTIO_META_CLUSTER_ID",
                                        "value": "Kubernetes"
                                    },
                                    {
                                        "name": "ISTIO_META_NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "2",
                                        "memory": "1Gi"
                                    },
                                    "requests": {
                                        "cpu": "10m",
                                        "memory": "40Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "workload-socket",
                                        "mountPath": "/var/run/secrets/workload-spiffe-uds"
                                    },
                                    {
                                        "name": "credential-socket",
                                        "mountPath": "/var/run/secrets/credential-uds"
                                    },
                                    {
                                        "name": "workload-certs",
                                        "mountPath": "/var/run/secrets/workload-spiffe-credentials"
                                    },
                                    {
                                        "name": "istio-envoy",
                                        "mountPath": "/etc/istio/proxy"
                                    },
                                    {
                                        "name": "config-volume",
                                        "mountPath": "/etc/istio/config"
                                    },
                                    {
                                        "name": "istiod-ca-cert",
                                        "mountPath": "/var/run/secrets/istio"
                                    },
                                    {
                                        "name": "istio-token",
                                        "readOnly": true,
                                        "mountPath": "/var/run/secrets/tokens"
                                    },
                                    {
                                        "name": "istio-data",
                                        "mountPath": "/var/lib/istio/data"
                                    },
                                    {
                                        "name": "podinfo",
                                        "mountPath": "/etc/istio/pod"
                                    },
                                    {
                                        "name": "ingressgateway-certs",
                                        "readOnly": true,
                                        "mountPath": "/etc/istio/ingressgateway-certs"
                                    },
                                    {
                                        "name": "ingressgateway-ca-certs",
                                        "readOnly": true,
                                        "mountPath": "/etc/istio/ingressgateway-ca-certs"
                                    }
                                ],
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/healthz/ready",
                                        "port": 15021,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 1,
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 2,
                                    "successThreshold": 1,
                                    "failureThreshold": 30
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "privileged": false,
                                    "readOnlyRootFilesystem": true,
                                    "allowPrivilegeEscalation": false
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "serviceAccountName": "istio-ingressgateway-service-account",
                        "serviceAccount": "istio-ingressgateway-service-account",
                        "securityContext": {
                            "runAsUser": 1337,
                            "runAsGroup": 1337,
                            "runAsNonRoot": true,
                            "fsGroup": 1337
                        },
                        "affinity": {
                            "nodeAffinity": {}
                        },
                        "schedulerName": "default-scheduler"
                    }
                },
                "strategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": "25%",
                        "maxSurge": "100%"
                    }
                },
                "revisionHistoryLimit": 10,
                "progressDeadlineSeconds": 600
            },
            "status": {
                "observedGeneration": 1,
                "replicas": 1,
                "updatedReplicas": 1,
                "readyReplicas": 1,
                "availableReplicas": 1,
                "conditions": [
                    {
                        "type": "Progressing",
                        "status": "True",
                        "lastUpdateTime": "2024-10-29T12:04:09Z",
                        "lastTransitionTime": "2024-10-29T12:03:54Z",
                        "reason": "NewReplicaSetAvailable",
                        "message": "ReplicaSet \"istio-ingressgateway-77fbf9d476\" has successfully progressed."
                    },
                    {
                        "type": "Available",
                        "status": "True",
                        "lastUpdateTime": "2024-10-29T12:12:53Z",
                        "lastTransitionTime": "2024-10-29T12:12:53Z",
                        "reason": "MinimumReplicasAvailable",
                        "message": "Deployment has minimum availability."
                    }
                ]
            }
        },
        {
            "metadata": {
                "name": "istiod",
                "namespace": "istio-system",
                "uid": "9eec905f-e564-4432-9398-6781c10c0e27",
                "resourceVersion": "1534",
                "generation": 1,
                "creationTimestamp": "2024-10-29T12:03:40Z",
                "labels": {
                    "app": "istiod",
                    "install.operator.istio.io/owning-resource": "unknown",
                    "install.operator.istio.io/owning-resource-namespace": "istio-system",
                    "istio": "pilot",
                    "istio.io/rev": "default",
                    "operator.istio.io/component": "Pilot",
                    "operator.istio.io/managed": "Reconcile",
                    "operator.istio.io/version": "1.18.2",
                    "release": "istio"
                },
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"istiod\",\"install.operator.istio.io/owning-resource\":\"unknown\",\"install.operator.istio.io/owning-resource-namespace\":\"istio-system\",\"istio\":\"pilot\",\"istio.io/rev\":\"default\",\"operator.istio.io/component\":\"Pilot\",\"operator.istio.io/managed\":\"Reconcile\",\"operator.istio.io/version\":\"1.18.2\",\"release\":\"istio\"},\"name\":\"istiod\",\"namespace\":\"istio-system\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"istio\":\"pilot\"}},\"strategy\":{\"rollingUpdate\":{\"maxSurge\":\"100%\",\"maxUnavailable\":\"25%\"}},\"template\":{\"metadata\":{\"annotations\":{\"ambient.istio.io/redirection\":\"disabled\",\"prometheus.io/port\":\"15014\",\"prometheus.io/scrape\":\"true\",\"sidecar.istio.io/inject\":\"false\"},\"labels\":{\"app\":\"istiod\",\"install.operator.istio.io/owning-resource\":\"unknown\",\"istio\":\"pilot\",\"istio.io/rev\":\"default\",\"operator.istio.io/component\":\"Pilot\",\"sidecar.istio.io/inject\":\"false\"}},\"spec\":{\"containers\":[{\"args\":[\"discovery\",\"--monitoringAddr=:15014\",\"--log_output_level=default:info\",\"--domain\",\"cluster.local\",\"--keepaliveMaxServerConnectionAge\",\"30m\"],\"env\":[{\"name\":\"REVISION\",\"value\":\"default\"},{\"name\":\"JWT_POLICY\",\"value\":\"third-party-jwt\"},{\"name\":\"PILOT_CERT_PROVIDER\",\"value\":\"istiod\"},{\"name\":\"POD_NAME\",\"valueFrom\":{\"fieldRef\":{\"apiVersion\":\"v1\",\"fieldPath\":\"metadata.name\"}}},{\"name\":\"POD_NAMESPACE\",\"valueFrom\":{\"fieldRef\":{\"apiVersion\":\"v1\",\"fieldPath\":\"metadata.namespace\"}}},{\"name\":\"SERVICE_ACCOUNT\",\"valueFrom\":{\"fieldRef\":{\"apiVersion\":\"v1\",\"fieldPath\":\"spec.serviceAccountName\"}}},{\"name\":\"KUBECONFIG\",\"value\":\"/var/run/secrets/remote/config\"},{\"name\":\"PILOT_TRACE_SAMPLING\",\"value\":\"100\"},{\"name\":\"PILOT_ENABLE_PROTOCOL_SNIFFING_FOR_OUTBOUND\",\"value\":\"true\"},{\"name\":\"PILOT_ENABLE_PROTOCOL_SNIFFING_FOR_INBOUND\",\"value\":\"true\"},{\"name\":\"ISTIOD_ADDR\",\"value\":\"istiod.istio-system.svc:15012\"},{\"name\":\"PILOT_ENABLE_ANALYSIS\",\"value\":\"false\"},{\"name\":\"CLUSTER_ID\",\"value\":\"Kubernetes\"},{\"name\":\"GOMEMLIMIT\",\"valueFrom\":{\"resourceFieldRef\":{\"resource\":\"limits.memory\"}}}],\"image\":\"docker.io/istio/pilot:1.18.2\",\"name\":\"discovery\",\"ports\":[{\"containerPort\":8080,\"protocol\":\"TCP\"},{\"containerPort\":15010,\"protocol\":\"TCP\"},{\"containerPort\":15017,\"protocol\":\"TCP\"}],\"readinessProbe\":{\"httpGet\":{\"path\":\"/ready\",\"port\":8080},\"initialDelaySeconds\":1,\"periodSeconds\":3,\"timeoutSeconds\":5},\"resources\":{\"requests\":{\"cpu\":\"10m\",\"memory\":\"100Mi\"}},\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]},\"readOnlyRootFilesystem\":true,\"runAsGroup\":1337,\"runAsNonRoot\":true,\"runAsUser\":1337},\"volumeMounts\":[{\"mountPath\":\"/var/run/secrets/tokens\",\"name\":\"istio-token\",\"readOnly\":true},{\"mountPath\":\"/var/run/secrets/istio-dns\",\"name\":\"local-certs\"},{\"mountPath\":\"/etc/cacerts\",\"name\":\"cacerts\",\"readOnly\":true},{\"mountPath\":\"/var/run/secrets/remote\",\"name\":\"istio-kubeconfig\",\"readOnly\":true},{\"mountPath\":\"/var/run/secrets/istiod/tls\",\"name\":\"istio-csr-dns-cert\",\"readOnly\":true},{\"mountPath\":\"/var/run/secrets/istiod/ca\",\"name\":\"istio-csr-ca-configmap\",\"readOnly\":true}]}],\"securityContext\":{\"fsGroup\":1337},\"serviceAccountName\":\"istiod\",\"volumes\":[{\"emptyDir\":{\"medium\":\"Memory\"},\"name\":\"local-certs\"},{\"name\":\"istio-token\",\"projected\":{\"sources\":[{\"serviceAccountToken\":{\"audience\":\"istio-ca\",\"expirationSeconds\":43200,\"path\":\"istio-token\"}}]}},{\"name\":\"cacerts\",\"secret\":{\"optional\":true,\"secretName\":\"cacerts\"}},{\"name\":\"istio-kubeconfig\",\"secret\":{\"optional\":true,\"secretName\":\"istio-kubeconfig\"}},{\"name\":\"istio-csr-dns-cert\",\"secret\":{\"optional\":true,\"secretName\":\"istiod-tls\"}},{\"configMap\":{\"defaultMode\":420,\"name\":\"istio-ca-root-cert\",\"optional\":true},\"name\":\"istio-csr-ca-configmap\"}]}}}}\n"
                }
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "istio": "pilot"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "istiod",
                            "install.operator.istio.io/owning-resource": "unknown",
                            "istio": "pilot",
                            "istio.io/rev": "default",
                            "operator.istio.io/component": "Pilot",
                            "sidecar.istio.io/inject": "false"
                        },
                        "annotations": {
                            "ambient.istio.io/redirection": "disabled",
                            "prometheus.io/port": "15014",
                            "prometheus.io/scrape": "true",
                            "sidecar.istio.io/inject": "false"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "local-certs",
                                "emptyDir": {
                                    "medium": "Memory"
                                }
                            },
                            {
                                "name": "istio-token",
                                "projected": {
                                    "sources": [
                                        {
                                            "serviceAccountToken": {
                                                "audience": "istio-ca",
                                                "expirationSeconds": 43200,
                                                "path": "istio-token"
                                            }
                                        }
                                    ],
                                    "defaultMode": 420
                                }
                            },
                            {
                                "name": "cacerts",
                                "secret": {
                                    "secretName": "cacerts",
                                    "defaultMode": 420,
                                    "optional": true
                                }
                            },
                            {
                                "name": "istio-kubeconfig",
                                "secret": {
                                    "secretName": "istio-kubeconfig",
                                    "defaultMode": 420,
                                    "optional": true
                                }
                            },
                            {
                                "name": "istio-csr-dns-cert",
                                "secret": {
                                    "secretName": "istiod-tls",
                                    "defaultMode": 420,
                                    "optional": true
                                }
                            },
                            {
                                "name": "istio-csr-ca-configmap",
                                "configMap": {
                                    "name": "istio-ca-root-cert",
                                    "defaultMode": 420,
                                    "optional": true
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "discovery",
                                "image": "docker.io/istio/pilot:1.18.2",
                                "args": [
                                    "discovery",
                                    "--monitoringAddr=:15014",
                                    "--log_output_level=default:info",
                                    "--domain",
                                    "cluster.local",
                                    "--keepaliveMaxServerConnectionAge",
                                    "30m"
                                ],
                                "ports": [
                                    {
                                        "containerPort": 8080,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 15010,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 15017,
                                        "protocol": "TCP"
                                    }
                                ],
                                "env": [
                                    {
                                        "name": "REVISION",
                                        "value": "default"
                                    },
                                    {
                                        "name": "JWT_POLICY",
                                        "value": "third-party-jwt"
                                    },
                                    {
                                        "name": "PILOT_CERT_PROVIDER",
                                        "value": "istiod"
                                    },
                                    {
                                        "name": "POD_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.name"
                                            }
                                        }
                                    },
                                    {
                                        "name": "POD_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "SERVICE_ACCOUNT",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.serviceAccountName"
                                            }
                                        }
                                    },
                                    {
                                        "name": "KUBECONFIG",
                                        "value": "/var/run/secrets/remote/config"
                                    },
                                    {
                                        "name": "PILOT_TRACE_SAMPLING",
                                        "value": "100"
                                    },
                                    {
                                        "name": "PILOT_ENABLE_PROTOCOL_SNIFFING_FOR_OUTBOUND",
                                        "value": "true"
                                    },
                                    {
                                        "name": "PILOT_ENABLE_PROTOCOL_SNIFFING_FOR_INBOUND",
                                        "value": "true"
                                    },
                                    {
                                        "name": "ISTIOD_ADDR",
                                        "value": "istiod.istio-system.svc:15012"
                                    },
                                    {
                                        "name": "PILOT_ENABLE_ANALYSIS",
                                        "value": "false"
                                    },
                                    {
                                        "name": "CLUSTER_ID",
                                        "value": "Kubernetes"
                                    },
                                    {
                                        "name": "GOMEMLIMIT",
                                        "valueFrom": {
                                            "resourceFieldRef": {
                                                "resource": "limits.memory",
                                                "divisor": "0"
                                            }
                                        }
                                    }
                                ],
                                "resources": {
                                    "requests": {
                                        "cpu": "10m",
                                        "memory": "100Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "istio-token",
                                        "readOnly": true,
                                        "mountPath": "/var/run/secrets/tokens"
                                    },
                                    {
                                        "name": "local-certs",
                                        "mountPath": "/var/run/secrets/istio-dns"
                                    },
                                    {
                                        "name": "cacerts",
                                        "readOnly": true,
                                        "mountPath": "/etc/cacerts"
                                    },
                                    {
                                        "name": "istio-kubeconfig",
                                        "readOnly": true,
                                        "mountPath": "/var/run/secrets/remote"
                                    },
                                    {
                                        "name": "istio-csr-dns-cert",
                                        "readOnly": true,
                                        "mountPath": "/var/run/secrets/istiod/tls"
                                    },
                                    {
                                        "name": "istio-csr-ca-configmap",
                                        "readOnly": true,
                                        "mountPath": "/var/run/secrets/istiod/ca"
                                    }
                                ],
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/ready",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 1,
                                    "timeoutSeconds": 5,
                                    "periodSeconds": 3,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "runAsUser": 1337,
                                    "runAsGroup": 1337,
                                    "runAsNonRoot": true,
                                    "readOnlyRootFilesystem": true,
                                    "allowPrivilegeEscalation": false
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "serviceAccountName": "istiod",
                        "serviceAccount": "istiod",
                        "securityContext": {
                            "fsGroup": 1337
                        },
                        "schedulerName": "default-scheduler"
                    }
                },
                "strategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": "25%",
                        "maxSurge": "100%"
                    }
                },
                "revisionHistoryLimit": 10,
                "progressDeadlineSeconds": 600
            },
            "status": {
                "observedGeneration": 1,
                "replicas": 1,
                "updatedReplicas": 1,
                "readyReplicas": 1,
                "availableReplicas": 1,
                "conditions": [
                    {
                        "type": "Available",
                        "status": "True",
                        "lastUpdateTime": "2024-10-29T12:03:54Z",
                        "lastTransitionTime": "2024-10-29T12:03:54Z",
                        "reason": "MinimumReplicasAvailable",
                        "message": "Deployment has minimum availability."
                    },
                    {
                        "type": "Progressing",
                        "status": "True",
                        "lastUpdateTime": "2024-10-29T12:03:54Z",
                        "lastTransitionTime": "2024-10-29T12:03:40Z",
                        "reason": "NewReplicaSetAvailable",
                        "message": "ReplicaSet \"istiod-77c989fb\" has successfully progressed."
                    }
                ]
            }
        }
    ]
}
{
    "kind": "ReplicaSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "8393"
    },
    "items": [
        {
            "metadata": {
                "name": "istio-egressgateway-5499894f8d",
                "namespace": "istio-system",
                "uid": "3efe2ec4-f687-4aa2-990d-3fdb6d469d51",
                "resourceVersion": "2949",
                "generation": 1,
                "creationTimestamp": "2024-10-29T12:03:54Z",
                "labels": {
                    "app": "istio-egressgateway",
                    "chart": "gateways",
                    "heritage": "Tiller",
                    "install.operator.istio.io/owning-resource": "unknown",
                    "istio": "egressgateway",
                    "istio.io/rev": "default",
                    "operator.istio.io/component": "EgressGateways",
                    "pod-template-hash": "5499894f8d",
                    "release": "istio",
                    "service.istio.io/canonical-name": "istio-egressgateway",
                    "service.istio.io/canonical-revision": "latest",
                    "sidecar.istio.io/inject": "false"
                },
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "2",
                    "deployment.kubernetes.io/revision": "1"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "name": "istio-egressgateway",
                        "uid": "ddb1b7f7-0f29-42d1-965f-3fe7c233a47b",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "app": "istio-egressgateway",
                        "istio": "egressgateway",
                        "pod-template-hash": "5499894f8d"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "istio-egressgateway",
                            "chart": "gateways",
                            "heritage": "Tiller",
                            "install.operator.istio.io/owning-resource": "unknown",
                            "istio": "egressgateway",
                            "istio.io/rev": "default",
                            "operator.istio.io/component": "EgressGateways",
                            "pod-template-hash": "5499894f8d",
                            "release": "istio",
                            "service.istio.io/canonical-name": "istio-egressgateway",
                            "service.istio.io/canonical-revision": "latest",
                            "sidecar.istio.io/inject": "false"
                        },
                        "annotations": {
                            "istio.io/rev": "default",
                            "prometheus.io/path": "/stats/prometheus",
                            "prometheus.io/port": "15020",
                            "prometheus.io/scrape": "true",
                            "sidecar.istio.io/inject": "false"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "workload-socket",
                                "emptyDir": {}
                            },
                            {
                                "name": "credential-socket",
                                "emptyDir": {}
                            },
                            {
                                "name": "workload-certs",
                                "emptyDir": {}
                            },
                            {
                                "name": "istiod-ca-cert",
                                "configMap": {
                                    "name": "istio-ca-root-cert",
                                    "defaultMode": 420
                                }
                            },
                            {
                                "name": "podinfo",
                                "downwardAPI": {
                                    "items": [
                                        {
                                            "path": "labels",
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.labels"
                                            }
                                        },
                                        {
                                            "path": "annotations",
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.annotations"
                                            }
                                        }
                                    ],
                                    "defaultMode": 420
                                }
                            },
                            {
                                "name": "istio-envoy",
                                "emptyDir": {}
                            },
                            {
                                "name": "istio-data",
                                "emptyDir": {}
                            },
                            {
                                "name": "istio-token",
                                "projected": {
                                    "sources": [
                                        {
                                            "serviceAccountToken": {
                                                "audience": "istio-ca",
                                                "expirationSeconds": 43200,
                                                "path": "istio-token"
                                            }
                                        }
                                    ],
                                    "defaultMode": 420
                                }
                            },
                            {
                                "name": "config-volume",
                                "configMap": {
                                    "name": "istio",
                                    "defaultMode": 420,
                                    "optional": true
                                }
                            },
                            {
                                "name": "egressgateway-certs",
                                "secret": {
                                    "secretName": "istio-egressgateway-certs",
                                    "defaultMode": 420,
                                    "optional": true
                                }
                            },
                            {
                                "name": "egressgateway-ca-certs",
                                "secret": {
                                    "secretName": "istio-egressgateway-ca-certs",
                                    "defaultMode": 420,
                                    "optional": true
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "istio-proxy",
                                "image": "docker.io/istio/proxyv2:1.18.2",
                                "args": [
                                    "proxy",
                                    "router",
                                    "--domain",
                                    "$(POD_NAMESPACE).svc.cluster.local",
                                    "--proxyLogLevel=warning",
                                    "--proxyComponentLogLevel=misc:error",
                                    "--log_output_level=default:info"
                                ],
                                "ports": [
                                    {
                                        "containerPort": 8080,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 8443,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "http-envoy-prom",
                                        "containerPort": 15090,
                                        "protocol": "TCP"
                                    }
                                ],
                                "env": [
                                    {
                                        "name": "JWT_POLICY",
                                        "value": "third-party-jwt"
                                    },
                                    {
                                        "name": "PILOT_CERT_PROVIDER",
                                        "value": "istiod"
                                    },
                                    {
                                        "name": "CA_ADDR",
                                        "value": "istiod.istio-system.svc:15012"
                                    },
                                    {
                                        "name": "NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    },
                                    {
                                        "name": "POD_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.name"
                                            }
                                        }
                                    },
                                    {
                                        "name": "POD_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "INSTANCE_IP",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "status.podIP"
                                            }
                                        }
                                    },
                                    {
                                        "name": "HOST_IP",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "status.hostIP"
                                            }
                                        }
                                    },
                                    {
                                        "name": "ISTIO_CPU_LIMIT",
                                        "valueFrom": {
                                            "resourceFieldRef": {
                                                "resource": "limits.cpu",
                                                "divisor": "0"
                                            }
                                        }
                                    },
                                    {
                                        "name": "SERVICE_ACCOUNT",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.serviceAccountName"
                                            }
                                        }
                                    },
                                    {
                                        "name": "ISTIO_META_WORKLOAD_NAME",
                                        "value": "istio-egressgateway"
                                    },
                                    {
                                        "name": "ISTIO_META_OWNER",
                                        "value": "kubernetes://apis/apps/v1/namespaces/istio-system/deployments/istio-egressgateway"
                                    },
                                    {
                                        "name": "ISTIO_META_MESH_ID",
                                        "value": "cluster.local"
                                    },
                                    {
                                        "name": "TRUST_DOMAIN",
                                        "value": "cluster.local"
                                    },
                                    {
                                        "name": "ISTIO_META_UNPRIVILEGED_POD",
                                        "value": "true"
                                    },
                                    {
                                        "name": "ISTIO_META_CLUSTER_ID",
                                        "value": "Kubernetes"
                                    },
                                    {
                                        "name": "ISTIO_META_NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "2",
                                        "memory": "1Gi"
                                    },
                                    "requests": {
                                        "cpu": "10m",
                                        "memory": "40Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "workload-socket",
                                        "mountPath": "/var/run/secrets/workload-spiffe-uds"
                                    },
                                    {
                                        "name": "credential-socket",
                                        "mountPath": "/var/run/secrets/credential-uds"
                                    },
                                    {
                                        "name": "workload-certs",
                                        "mountPath": "/var/run/secrets/workload-spiffe-credentials"
                                    },
                                    {
                                        "name": "istio-envoy",
                                        "mountPath": "/etc/istio/proxy"
                                    },
                                    {
                                        "name": "config-volume",
                                        "mountPath": "/etc/istio/config"
                                    },
                                    {
                                        "name": "istiod-ca-cert",
                                        "mountPath": "/var/run/secrets/istio"
                                    },
                                    {
                                        "name": "istio-token",
                                        "readOnly": true,
                                        "mountPath": "/var/run/secrets/tokens"
                                    },
                                    {
                                        "name": "istio-data",
                                        "mountPath": "/var/lib/istio/data"
                                    },
                                    {
                                        "name": "podinfo",
                                        "mountPath": "/etc/istio/pod"
                                    },
                                    {
                                        "name": "egressgateway-certs",
                                        "readOnly": true,
                                        "mountPath": "/etc/istio/egressgateway-certs"
                                    },
                                    {
                                        "name": "egressgateway-ca-certs",
                                        "readOnly": true,
                                        "mountPath": "/etc/istio/egressgateway-ca-certs"
                                    }
                                ],
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/healthz/ready",
                                        "port": 15021,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 1,
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 2,
                                    "successThreshold": 1,
                                    "failureThreshold": 30
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "privileged": false,
                                    "readOnlyRootFilesystem": true,
                                    "allowPrivilegeEscalation": false
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "serviceAccountName": "istio-egressgateway-service-account",
                        "serviceAccount": "istio-egressgateway-service-account",
                        "securityContext": {
                            "runAsUser": 1337,
                            "runAsGroup": 1337,
                            "runAsNonRoot": true,
                            "fsGroup": 1337
                        },
                        "affinity": {
                            "nodeAffinity": {}
                        },
                        "schedulerName": "default-scheduler"
                    }
                }
            },
            "status": {
                "replicas": 1,
                "fullyLabeledReplicas": 1,
                "readyReplicas": 1,
                "availableReplicas": 1,
                "observedGeneration": 1
            }
        },
        {
            "metadata": {
                "name": "istio-ingressgateway-77fbf9d476",
                "namespace": "istio-system",
                "uid": "9d0c182f-8651-4300-a1b6-66d2a3d7a82f",
                "resourceVersion": "2942",
                "generation": 1,
                "creationTimestamp": "2024-10-29T12:03:54Z",
                "labels": {
                    "app": "istio-ingressgateway",
                    "chart": "gateways",
                    "heritage": "Tiller",
                    "install.operator.istio.io/owning-resource": "unknown",
                    "istio": "ingressgateway",
                    "istio.io/rev": "default",
                    "operator.istio.io/component": "IngressGateways",
                    "pod-template-hash": "77fbf9d476",
                    "release": "istio",
                    "service.istio.io/canonical-name": "istio-ingressgateway",
                    "service.istio.io/canonical-revision": "latest",
                    "sidecar.istio.io/inject": "false"
                },
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "2",
                    "deployment.kubernetes.io/revision": "1"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "name": "istio-ingressgateway",
                        "uid": "06822c7a-be94-437b-b89f-0c2f3aec9b3e",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "app": "istio-ingressgateway",
                        "istio": "ingressgateway",
                        "pod-template-hash": "77fbf9d476"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "istio-ingressgateway",
                            "chart": "gateways",
                            "heritage": "Tiller",
                            "install.operator.istio.io/owning-resource": "unknown",
                            "istio": "ingressgateway",
                            "istio.io/rev": "default",
                            "operator.istio.io/component": "IngressGateways",
                            "pod-template-hash": "77fbf9d476",
                            "release": "istio",
                            "service.istio.io/canonical-name": "istio-ingressgateway",
                            "service.istio.io/canonical-revision": "latest",
                            "sidecar.istio.io/inject": "false"
                        },
                        "annotations": {
                            "istio.io/rev": "default",
                            "prometheus.io/path": "/stats/prometheus",
                            "prometheus.io/port": "15020",
                            "prometheus.io/scrape": "true",
                            "sidecar.istio.io/inject": "false"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "workload-socket",
                                "emptyDir": {}
                            },
                            {
                                "name": "credential-socket",
                                "emptyDir": {}
                            },
                            {
                                "name": "workload-certs",
                                "emptyDir": {}
                            },
                            {
                                "name": "istiod-ca-cert",
                                "configMap": {
                                    "name": "istio-ca-root-cert",
                                    "defaultMode": 420
                                }
                            },
                            {
                                "name": "podinfo",
                                "downwardAPI": {
                                    "items": [
                                        {
                                            "path": "labels",
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.labels"
                                            }
                                        },
                                        {
                                            "path": "annotations",
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.annotations"
                                            }
                                        }
                                    ],
                                    "defaultMode": 420
                                }
                            },
                            {
                                "name": "istio-envoy",
                                "emptyDir": {}
                            },
                            {
                                "name": "istio-data",
                                "emptyDir": {}
                            },
                            {
                                "name": "istio-token",
                                "projected": {
                                    "sources": [
                                        {
                                            "serviceAccountToken": {
                                                "audience": "istio-ca",
                                                "expirationSeconds": 43200,
                                                "path": "istio-token"
                                            }
                                        }
                                    ],
                                    "defaultMode": 420
                                }
                            },
                            {
                                "name": "config-volume",
                                "configMap": {
                                    "name": "istio",
                                    "defaultMode": 420,
                                    "optional": true
                                }
                            },
                            {
                                "name": "ingressgateway-certs",
                                "secret": {
                                    "secretName": "istio-ingressgateway-certs",
                                    "defaultMode": 420,
                                    "optional": true
                                }
                            },
                            {
                                "name": "ingressgateway-ca-certs",
                                "secret": {
                                    "secretName": "istio-ingressgateway-ca-certs",
                                    "defaultMode": 420,
                                    "optional": true
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "istio-proxy",
                                "image": "docker.io/istio/proxyv2:1.18.2",
                                "args": [
                                    "proxy",
                                    "router",
                                    "--domain",
                                    "$(POD_NAMESPACE).svc.cluster.local",
                                    "--proxyLogLevel=warning",
                                    "--proxyComponentLogLevel=misc:error",
                                    "--log_output_level=default:info"
                                ],
                                "ports": [
                                    {
                                        "containerPort": 15021,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 8080,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 8443,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 31400,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 15443,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "http-envoy-prom",
                                        "containerPort": 15090,
                                        "protocol": "TCP"
                                    }
                                ],
                                "env": [
                                    {
                                        "name": "JWT_POLICY",
                                        "value": "third-party-jwt"
                                    },
                                    {
                                        "name": "PILOT_CERT_PROVIDER",
                                        "value": "istiod"
                                    },
                                    {
                                        "name": "CA_ADDR",
                                        "value": "istiod.istio-system.svc:15012"
                                    },
                                    {
                                        "name": "NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    },
                                    {
                                        "name": "POD_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.name"
                                            }
                                        }
                                    },
                                    {
                                        "name": "POD_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "INSTANCE_IP",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "status.podIP"
                                            }
                                        }
                                    },
                                    {
                                        "name": "HOST_IP",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "status.hostIP"
                                            }
                                        }
                                    },
                                    {
                                        "name": "ISTIO_CPU_LIMIT",
                                        "valueFrom": {
                                            "resourceFieldRef": {
                                                "resource": "limits.cpu",
                                                "divisor": "0"
                                            }
                                        }
                                    },
                                    {
                                        "name": "SERVICE_ACCOUNT",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.serviceAccountName"
                                            }
                                        }
                                    },
                                    {
                                        "name": "ISTIO_META_WORKLOAD_NAME",
                                        "value": "istio-ingressgateway"
                                    },
                                    {
                                        "name": "ISTIO_META_OWNER",
                                        "value": "kubernetes://apis/apps/v1/namespaces/istio-system/deployments/istio-ingressgateway"
                                    },
                                    {
                                        "name": "ISTIO_META_MESH_ID",
                                        "value": "cluster.local"
                                    },
                                    {
                                        "name": "TRUST_DOMAIN",
                                        "value": "cluster.local"
                                    },
                                    {
                                        "name": "ISTIO_META_UNPRIVILEGED_POD",
                                        "value": "true"
                                    },
                                    {
                                        "name": "ISTIO_META_CLUSTER_ID",
                                        "value": "Kubernetes"
                                    },
                                    {
                                        "name": "ISTIO_META_NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "2",
                                        "memory": "1Gi"
                                    },
                                    "requests": {
                                        "cpu": "10m",
                                        "memory": "40Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "workload-socket",
                                        "mountPath": "/var/run/secrets/workload-spiffe-uds"
                                    },
                                    {
                                        "name": "credential-socket",
                                        "mountPath": "/var/run/secrets/credential-uds"
                                    },
                                    {
                                        "name": "workload-certs",
                                        "mountPath": "/var/run/secrets/workload-spiffe-credentials"
                                    },
                                    {
                                        "name": "istio-envoy",
                                        "mountPath": "/etc/istio/proxy"
                                    },
                                    {
                                        "name": "config-volume",
                                        "mountPath": "/etc/istio/config"
                                    },
                                    {
                                        "name": "istiod-ca-cert",
                                        "mountPath": "/var/run/secrets/istio"
                                    },
                                    {
                                        "name": "istio-token",
                                        "readOnly": true,
                                        "mountPath": "/var/run/secrets/tokens"
                                    },
                                    {
                                        "name": "istio-data",
                                        "mountPath": "/var/lib/istio/data"
                                    },
                                    {
                                        "name": "podinfo",
                                        "mountPath": "/etc/istio/pod"
                                    },
                                    {
                                        "name": "ingressgateway-certs",
                                        "readOnly": true,
                                        "mountPath": "/etc/istio/ingressgateway-certs"
                                    },
                                    {
                                        "name": "ingressgateway-ca-certs",
                                        "readOnly": true,
                                        "mountPath": "/etc/istio/ingressgateway-ca-certs"
                                    }
                                ],
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/healthz/ready",
                                        "port": 15021,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 1,
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 2,
                                    "successThreshold": 1,
                                    "failureThreshold": 30
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "privileged": false,
                                    "readOnlyRootFilesystem": true,
                                    "allowPrivilegeEscalation": false
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "serviceAccountName": "istio-ingressgateway-service-account",
                        "serviceAccount": "istio-ingressgateway-service-account",
                        "securityContext": {
                            "runAsUser": 1337,
                            "runAsGroup": 1337,
                            "runAsNonRoot": true,
                            "fsGroup": 1337
                        },
                        "affinity": {
                            "nodeAffinity": {}
                        },
                        "schedulerName": "default-scheduler"
                    }
                }
            },
            "status": {
                "replicas": 1,
                "fullyLabeledReplicas": 1,
                "readyReplicas": 1,
                "availableReplicas": 1,
                "observedGeneration": 1
            }
        },
        {
            "metadata": {
                "name": "istiod-77c989fb",
                "namespace": "istio-system",
                "uid": "cf5d0d60-7743-4c39-a3ef-201b33d5cefe",
                "resourceVersion": "1533",
                "generation": 1,
                "creationTimestamp": "2024-10-29T12:03:40Z",
                "labels": {
                    "app": "istiod",
                    "install.operator.istio.io/owning-resource": "unknown",
                    "istio": "pilot",
                    "istio.io/rev": "default",
                    "operator.istio.io/component": "Pilot",
                    "pod-template-hash": "77c989fb",
                    "sidecar.istio.io/inject": "false"
                },
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "2",
                    "deployment.kubernetes.io/revision": "1"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "name": "istiod",
                        "uid": "9eec905f-e564-4432-9398-6781c10c0e27",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "istio": "pilot",
                        "pod-template-hash": "77c989fb"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "istiod",
                            "install.operator.istio.io/owning-resource": "unknown",
                            "istio": "pilot",
                            "istio.io/rev": "default",
                            "operator.istio.io/component": "Pilot",
                            "pod-template-hash": "77c989fb",
                            "sidecar.istio.io/inject": "false"
                        },
                        "annotations": {
                            "ambient.istio.io/redirection": "disabled",
                            "prometheus.io/port": "15014",
                            "prometheus.io/scrape": "true",
                            "sidecar.istio.io/inject": "false"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "local-certs",
                                "emptyDir": {
                                    "medium": "Memory"
                                }
                            },
                            {
                                "name": "istio-token",
                                "projected": {
                                    "sources": [
                                        {
                                            "serviceAccountToken": {
                                                "audience": "istio-ca",
                                                "expirationSeconds": 43200,
                                                "path": "istio-token"
                                            }
                                        }
                                    ],
                                    "defaultMode": 420
                                }
                            },
                            {
                                "name": "cacerts",
                                "secret": {
                                    "secretName": "cacerts",
                                    "defaultMode": 420,
                                    "optional": true
                                }
                            },
                            {
                                "name": "istio-kubeconfig",
                                "secret": {
                                    "secretName": "istio-kubeconfig",
                                    "defaultMode": 420,
                                    "optional": true
                                }
                            },
                            {
                                "name": "istio-csr-dns-cert",
                                "secret": {
                                    "secretName": "istiod-tls",
                                    "defaultMode": 420,
                                    "optional": true
                                }
                            },
                            {
                                "name": "istio-csr-ca-configmap",
                                "configMap": {
                                    "name": "istio-ca-root-cert",
                                    "defaultMode": 420,
                                    "optional": true
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "discovery",
                                "image": "docker.io/istio/pilot:1.18.2",
                                "args": [
                                    "discovery",
                                    "--monitoringAddr=:15014",
                                    "--log_output_level=default:info",
                                    "--domain",
                                    "cluster.local",
                                    "--keepaliveMaxServerConnectionAge",
                                    "30m"
                                ],
                                "ports": [
                                    {
                                        "containerPort": 8080,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 15010,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 15017,
                                        "protocol": "TCP"
                                    }
                                ],
                                "env": [
                                    {
                                        "name": "REVISION",
                                        "value": "default"
                                    },
                                    {
                                        "name": "JWT_POLICY",
                                        "value": "third-party-jwt"
                                    },
                                    {
                                        "name": "PILOT_CERT_PROVIDER",
                                        "value": "istiod"
                                    },
                                    {
                                        "name": "POD_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.name"
                                            }
                                        }
                                    },
                                    {
                                        "name": "POD_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "SERVICE_ACCOUNT",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.serviceAccountName"
                                            }
                                        }
                                    },
                                    {
                                        "name": "KUBECONFIG",
                                        "value": "/var/run/secrets/remote/config"
                                    },
                                    {
                                        "name": "PILOT_TRACE_SAMPLING",
                                        "value": "100"
                                    },
                                    {
                                        "name": "PILOT_ENABLE_PROTOCOL_SNIFFING_FOR_OUTBOUND",
                                        "value": "true"
                                    },
                                    {
                                        "name": "PILOT_ENABLE_PROTOCOL_SNIFFING_FOR_INBOUND",
                                        "value": "true"
                                    },
                                    {
                                        "name": "ISTIOD_ADDR",
                                        "value": "istiod.istio-system.svc:15012"
                                    },
                                    {
                                        "name": "PILOT_ENABLE_ANALYSIS",
                                        "value": "false"
                                    },
                                    {
                                        "name": "CLUSTER_ID",
                                        "value": "Kubernetes"
                                    },
                                    {
                                        "name": "GOMEMLIMIT",
                                        "valueFrom": {
                                            "resourceFieldRef": {
                                                "resource": "limits.memory",
                                                "divisor": "0"
                                            }
                                        }
                                    }
                                ],
                                "resources": {
                                    "requests": {
                                        "cpu": "10m",
                                        "memory": "100Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "istio-token",
                                        "readOnly": true,
                                        "mountPath": "/var/run/secrets/tokens"
                                    },
                                    {
                                        "name": "local-certs",
                                        "mountPath": "/var/run/secrets/istio-dns"
                                    },
                                    {
                                        "name": "cacerts",
                                        "readOnly": true,
                                        "mountPath": "/etc/cacerts"
                                    },
                                    {
                                        "name": "istio-kubeconfig",
                                        "readOnly": true,
                                        "mountPath": "/var/run/secrets/remote"
                                    },
                                    {
                                        "name": "istio-csr-dns-cert",
                                        "readOnly": true,
                                        "mountPath": "/var/run/secrets/istiod/tls"
                                    },
                                    {
                                        "name": "istio-csr-ca-configmap",
                                        "readOnly": true,
                                        "mountPath": "/var/run/secrets/istiod/ca"
                                    }
                                ],
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/ready",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 1,
                                    "timeoutSeconds": 5,
                                    "periodSeconds": 3,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "runAsUser": 1337,
                                    "runAsGroup": 1337,
                                    "runAsNonRoot": true,
                                    "readOnlyRootFilesystem": true,
                                    "allowPrivilegeEscalation": false
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "serviceAccountName": "istiod",
                        "serviceAccount": "istiod",
                        "securityContext": {
                            "fsGroup": 1337
                        },
                        "schedulerName": "default-scheduler"
                    }
                }
            },
            "status": {
                "replicas": 1,
                "fullyLabeledReplicas": 1,
                "readyReplicas": 1,
                "availableReplicas": 1,
                "observedGeneration": 1
            }
        }
    ]
}
{
    "kind": "PodList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "8393"
    },
    "items": [
        {
            "metadata": {
                "name": "istio-egressgateway-5499894f8d-9q5pc",
                "generateName": "istio-egressgateway-5499894f8d-",
                "namespace": "istio-system",
                "uid": "12463ac9-f45d-4535-a598-137c7f38f515",
                "resourceVersion": "2945",
                "creationTimestamp": "2024-10-29T12:03:54Z",
                "labels": {
                    "app": "istio-egressgateway",
                    "chart": "gateways",
                    "heritage": "Tiller",
                    "install.operator.istio.io/owning-resource": "unknown",
                    "istio": "egressgateway",
                    "istio.io/rev": "default",
                    "operator.istio.io/component": "EgressGateways",
                    "pod-template-hash": "5499894f8d",
                    "release": "istio",
                    "service.istio.io/canonical-name": "istio-egressgateway",
                    "service.istio.io/canonical-revision": "latest",
                    "sidecar.istio.io/inject": "false"
                },
                "annotations": {
                    "cni.projectcalico.org/containerID": "109e55a95db0dbbb731bee9bdfbec55ecf7122d57144c0cfe027a0a59388e260",
                    "cni.projectcalico.org/podIP": "10.1.254.81/32",
                    "cni.projectcalico.org/podIPs": "10.1.254.81/32",
                    "istio.io/rev": "default",
                    "prometheus.io/path": "/stats/prometheus",
                    "prometheus.io/port": "15020",
                    "prometheus.io/scrape": "true",
                    "sidecar.istio.io/inject": "false"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "ReplicaSet",
                        "name": "istio-egressgateway-5499894f8d",
                        "uid": "3efe2ec4-f687-4aa2-990d-3fdb6d469d51",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "workload-socket",
                        "emptyDir": {}
                    },
                    {
                        "name": "credential-socket",
                        "emptyDir": {}
                    },
                    {
                        "name": "workload-certs",
                        "emptyDir": {}
                    },
                    {
                        "name": "istiod-ca-cert",
                        "configMap": {
                            "name": "istio-ca-root-cert",
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "podinfo",
                        "downwardAPI": {
                            "items": [
                                {
                                    "path": "labels",
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.labels"
                                    }
                                },
                                {
                                    "path": "annotations",
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.annotations"
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "istio-envoy",
                        "emptyDir": {}
                    },
                    {
                        "name": "istio-data",
                        "emptyDir": {}
                    },
                    {
                        "name": "istio-token",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "audience": "istio-ca",
                                        "expirationSeconds": 43200,
                                        "path": "istio-token"
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "config-volume",
                        "configMap": {
                            "name": "istio",
                            "defaultMode": 420,
                            "optional": true
                        }
                    },
                    {
                        "name": "egressgateway-certs",
                        "secret": {
                            "secretName": "istio-egressgateway-certs",
                            "defaultMode": 420,
                            "optional": true
                        }
                    },
                    {
                        "name": "egressgateway-ca-certs",
                        "secret": {
                            "secretName": "istio-egressgateway-ca-certs",
                            "defaultMode": 420,
                            "optional": true
                        }
                    },
                    {
                        "name": "kube-api-access-29nmf",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "istio-proxy",
                        "image": "docker.io/istio/proxyv2:1.18.2",
                        "args": [
                            "proxy",
                            "router",
                            "--domain",
                            "$(POD_NAMESPACE).svc.cluster.local",
                            "--proxyLogLevel=warning",
                            "--proxyComponentLogLevel=misc:error",
                            "--log_output_level=default:info"
                        ],
                        "ports": [
                            {
                                "containerPort": 8080,
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 8443,
                                "protocol": "TCP"
                            },
                            {
                                "name": "http-envoy-prom",
                                "containerPort": 15090,
                                "protocol": "TCP"
                            }
                        ],
                        "env": [
                            {
                                "name": "JWT_POLICY",
                                "value": "third-party-jwt"
                            },
                            {
                                "name": "PILOT_CERT_PROVIDER",
                                "value": "istiod"
                            },
                            {
                                "name": "CA_ADDR",
                                "value": "istiod.istio-system.svc:15012"
                            },
                            {
                                "name": "NODE_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.nodeName"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            },
                            {
                                "name": "INSTANCE_IP",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.podIP"
                                    }
                                }
                            },
                            {
                                "name": "HOST_IP",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.hostIP"
                                    }
                                }
                            },
                            {
                                "name": "ISTIO_CPU_LIMIT",
                                "valueFrom": {
                                    "resourceFieldRef": {
                                        "resource": "limits.cpu",
                                        "divisor": "0"
                                    }
                                }
                            },
                            {
                                "name": "SERVICE_ACCOUNT",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.serviceAccountName"
                                    }
                                }
                            },
                            {
                                "name": "ISTIO_META_WORKLOAD_NAME",
                                "value": "istio-egressgateway"
                            },
                            {
                                "name": "ISTIO_META_OWNER",
                                "value": "kubernetes://apis/apps/v1/namespaces/istio-system/deployments/istio-egressgateway"
                            },
                            {
                                "name": "ISTIO_META_MESH_ID",
                                "value": "cluster.local"
                            },
                            {
                                "name": "TRUST_DOMAIN",
                                "value": "cluster.local"
                            },
                            {
                                "name": "ISTIO_META_UNPRIVILEGED_POD",
                                "value": "true"
                            },
                            {
                                "name": "ISTIO_META_CLUSTER_ID",
                                "value": "Kubernetes"
                            },
                            {
                                "name": "ISTIO_META_NODE_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.nodeName"
                                    }
                                }
                            }
                        ],
                        "resources": {
                            "limits": {
                                "cpu": "2",
                                "memory": "1Gi"
                            },
                            "requests": {
                                "cpu": "10m",
                                "memory": "40Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "workload-socket",
                                "mountPath": "/var/run/secrets/workload-spiffe-uds"
                            },
                            {
                                "name": "credential-socket",
                                "mountPath": "/var/run/secrets/credential-uds"
                            },
                            {
                                "name": "workload-certs",
                                "mountPath": "/var/run/secrets/workload-spiffe-credentials"
                            },
                            {
                                "name": "istio-envoy",
                                "mountPath": "/etc/istio/proxy"
                            },
                            {
                                "name": "config-volume",
                                "mountPath": "/etc/istio/config"
                            },
                            {
                                "name": "istiod-ca-cert",
                                "mountPath": "/var/run/secrets/istio"
                            },
                            {
                                "name": "istio-token",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/tokens"
                            },
                            {
                                "name": "istio-data",
                                "mountPath": "/var/lib/istio/data"
                            },
                            {
                                "name": "podinfo",
                                "mountPath": "/etc/istio/pod"
                            },
                            {
                                "name": "egressgateway-certs",
                                "readOnly": true,
                                "mountPath": "/etc/istio/egressgateway-certs"
                            },
                            {
                                "name": "egressgateway-ca-certs",
                                "readOnly": true,
                                "mountPath": "/etc/istio/egressgateway-ca-certs"
                            },
                            {
                                "name": "kube-api-access-29nmf",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "readinessProbe": {
                            "httpGet": {
                                "path": "/healthz/ready",
                                "port": 15021,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "timeoutSeconds": 1,
                            "periodSeconds": 2,
                            "successThreshold": 1,
                            "failureThreshold": 30
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "capabilities": {
                                "drop": [
                                    "ALL"
                                ]
                            },
                            "privileged": false,
                            "readOnlyRootFilesystem": true,
                            "allowPrivilegeEscalation": false
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "serviceAccountName": "istio-egressgateway-service-account",
                "serviceAccount": "istio-egressgateway-service-account",
                "nodeName": "microk8s-vm",
                "securityContext": {
                    "runAsUser": 1337,
                    "runAsGroup": 1337,
                    "runAsNonRoot": true,
                    "fsGroup": 1337
                },
                "affinity": {
                    "nodeAffinity": {}
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    }
                ],
                "priority": 0,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-29T12:03:54Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-29T12:12:53Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-29T12:12:53Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-29T12:03:54Z"
                    }
                ],
                "hostIP": "172.22.104.186",
                "podIP": "10.1.254.81",
                "podIPs": [
                    {
                        "ip": "10.1.254.81"
                    }
                ],
                "startTime": "2024-10-29T12:03:54Z",
                "containerStatuses": [
                    {
                        "name": "istio-proxy",
                        "state": {
                            "running": {
                                "startedAt": "2024-10-29T12:11:32Z"
                            }
                        },
                        "lastState": {
                            "terminated": {
                                "exitCode": 255,
                                "reason": "Unknown",
                                "startedAt": "2024-10-29T12:04:03Z",
                                "finishedAt": "2024-10-29T12:10:59Z",
                                "containerID": "containerd://149e57e4dcdf4bed97cf2e4c0be3aa8c067db21d76db5a7f26f8b321770d8e6b"
                            }
                        },
                        "ready": true,
                        "restartCount": 1,
                        "image": "docker.io/istio/proxyv2:1.18.2",
                        "imageID": "docker.io/istio/proxyv2@sha256:b71f2657e038a0d6092dfd954050a2783c7887ff8e72f77ce64840c0c39b076e",
                        "containerID": "containerd://a5019030904d67eb3680321b26ed95b1b929ff45b59abd57076d2c2e4c0b8f8f",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "istio-ingressgateway-77fbf9d476-zkpcr",
                "generateName": "istio-ingressgateway-77fbf9d476-",
                "namespace": "istio-system",
                "uid": "02825378-ee5c-4a38-9e94-fec0bf3c76b0",
                "resourceVersion": "2939",
                "creationTimestamp": "2024-10-29T12:03:54Z",
                "labels": {
                    "app": "istio-ingressgateway",
                    "chart": "gateways",
                    "heritage": "Tiller",
                    "install.operator.istio.io/owning-resource": "unknown",
                    "istio": "ingressgateway",
                    "istio.io/rev": "default",
                    "operator.istio.io/component": "IngressGateways",
                    "pod-template-hash": "77fbf9d476",
                    "release": "istio",
                    "service.istio.io/canonical-name": "istio-ingressgateway",
                    "service.istio.io/canonical-revision": "latest",
                    "sidecar.istio.io/inject": "false"
                },
                "annotations": {
                    "cni.projectcalico.org/containerID": "28575d5ddb51d717c5d30657648177bb636b4342b2f591e7ee166c3a5a1ecd9f",
                    "cni.projectcalico.org/podIP": "10.1.254.80/32",
                    "cni.projectcalico.org/podIPs": "10.1.254.80/32",
                    "istio.io/rev": "default",
                    "prometheus.io/path": "/stats/prometheus",
                    "prometheus.io/port": "15020",
                    "prometheus.io/scrape": "true",
                    "sidecar.istio.io/inject": "false"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "ReplicaSet",
                        "name": "istio-ingressgateway-77fbf9d476",
                        "uid": "9d0c182f-8651-4300-a1b6-66d2a3d7a82f",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "workload-socket",
                        "emptyDir": {}
                    },
                    {
                        "name": "credential-socket",
                        "emptyDir": {}
                    },
                    {
                        "name": "workload-certs",
                        "emptyDir": {}
                    },
                    {
                        "name": "istiod-ca-cert",
                        "configMap": {
                            "name": "istio-ca-root-cert",
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "podinfo",
                        "downwardAPI": {
                            "items": [
                                {
                                    "path": "labels",
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.labels"
                                    }
                                },
                                {
                                    "path": "annotations",
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.annotations"
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "istio-envoy",
                        "emptyDir": {}
                    },
                    {
                        "name": "istio-data",
                        "emptyDir": {}
                    },
                    {
                        "name": "istio-token",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "audience": "istio-ca",
                                        "expirationSeconds": 43200,
                                        "path": "istio-token"
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "config-volume",
                        "configMap": {
                            "name": "istio",
                            "defaultMode": 420,
                            "optional": true
                        }
                    },
                    {
                        "name": "ingressgateway-certs",
                        "secret": {
                            "secretName": "istio-ingressgateway-certs",
                            "defaultMode": 420,
                            "optional": true
                        }
                    },
                    {
                        "name": "ingressgateway-ca-certs",
                        "secret": {
                            "secretName": "istio-ingressgateway-ca-certs",
                            "defaultMode": 420,
                            "optional": true
                        }
                    },
                    {
                        "name": "kube-api-access-kht6l",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "istio-proxy",
                        "image": "docker.io/istio/proxyv2:1.18.2",
                        "args": [
                            "proxy",
                            "router",
                            "--domain",
                            "$(POD_NAMESPACE).svc.cluster.local",
                            "--proxyLogLevel=warning",
                            "--proxyComponentLogLevel=misc:error",
                            "--log_output_level=default:info"
                        ],
                        "ports": [
                            {
                                "containerPort": 15021,
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 8080,
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 8443,
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 31400,
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 15443,
                                "protocol": "TCP"
                            },
                            {
                                "name": "http-envoy-prom",
                                "containerPort": 15090,
                                "protocol": "TCP"
                            }
                        ],
                        "env": [
                            {
                                "name": "JWT_POLICY",
                                "value": "third-party-jwt"
                            },
                            {
                                "name": "PILOT_CERT_PROVIDER",
                                "value": "istiod"
                            },
                            {
                                "name": "CA_ADDR",
                                "value": "istiod.istio-system.svc:15012"
                            },
                            {
                                "name": "NODE_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.nodeName"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            },
                            {
                                "name": "INSTANCE_IP",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.podIP"
                                    }
                                }
                            },
                            {
                                "name": "HOST_IP",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.hostIP"
                                    }
                                }
                            },
                            {
                                "name": "ISTIO_CPU_LIMIT",
                                "valueFrom": {
                                    "resourceFieldRef": {
                                        "resource": "limits.cpu",
                                        "divisor": "0"
                                    }
                                }
                            },
                            {
                                "name": "SERVICE_ACCOUNT",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.serviceAccountName"
                                    }
                                }
                            },
                            {
                                "name": "ISTIO_META_WORKLOAD_NAME",
                                "value": "istio-ingressgateway"
                            },
                            {
                                "name": "ISTIO_META_OWNER",
                                "value": "kubernetes://apis/apps/v1/namespaces/istio-system/deployments/istio-ingressgateway"
                            },
                            {
                                "name": "ISTIO_META_MESH_ID",
                                "value": "cluster.local"
                            },
                            {
                                "name": "TRUST_DOMAIN",
                                "value": "cluster.local"
                            },
                            {
                                "name": "ISTIO_META_UNPRIVILEGED_POD",
                                "value": "true"
                            },
                            {
                                "name": "ISTIO_META_CLUSTER_ID",
                                "value": "Kubernetes"
                            },
                            {
                                "name": "ISTIO_META_NODE_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.nodeName"
                                    }
                                }
                            }
                        ],
                        "resources": {
                            "limits": {
                                "cpu": "2",
                                "memory": "1Gi"
                            },
                            "requests": {
                                "cpu": "10m",
                                "memory": "40Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "workload-socket",
                                "mountPath": "/var/run/secrets/workload-spiffe-uds"
                            },
                            {
                                "name": "credential-socket",
                                "mountPath": "/var/run/secrets/credential-uds"
                            },
                            {
                                "name": "workload-certs",
                                "mountPath": "/var/run/secrets/workload-spiffe-credentials"
                            },
                            {
                                "name": "istio-envoy",
                                "mountPath": "/etc/istio/proxy"
                            },
                            {
                                "name": "config-volume",
                                "mountPath": "/etc/istio/config"
                            },
                            {
                                "name": "istiod-ca-cert",
                                "mountPath": "/var/run/secrets/istio"
                            },
                            {
                                "name": "istio-token",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/tokens"
                            },
                            {
                                "name": "istio-data",
                                "mountPath": "/var/lib/istio/data"
                            },
                            {
                                "name": "podinfo",
                                "mountPath": "/etc/istio/pod"
                            },
                            {
                                "name": "ingressgateway-certs",
                                "readOnly": true,
                                "mountPath": "/etc/istio/ingressgateway-certs"
                            },
                            {
                                "name": "ingressgateway-ca-certs",
                                "readOnly": true,
                                "mountPath": "/etc/istio/ingressgateway-ca-certs"
                            },
                            {
                                "name": "kube-api-access-kht6l",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "readinessProbe": {
                            "httpGet": {
                                "path": "/healthz/ready",
                                "port": 15021,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "timeoutSeconds": 1,
                            "periodSeconds": 2,
                            "successThreshold": 1,
                            "failureThreshold": 30
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "capabilities": {
                                "drop": [
                                    "ALL"
                                ]
                            },
                            "privileged": false,
                            "readOnlyRootFilesystem": true,
                            "allowPrivilegeEscalation": false
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "serviceAccountName": "istio-ingressgateway-service-account",
                "serviceAccount": "istio-ingressgateway-service-account",
                "nodeName": "microk8s-vm",
                "securityContext": {
                    "runAsUser": 1337,
                    "runAsGroup": 1337,
                    "runAsNonRoot": true,
                    "fsGroup": 1337
                },
                "affinity": {
                    "nodeAffinity": {}
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    }
                ],
                "priority": 0,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-29T12:03:54Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-29T12:12:53Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-29T12:12:53Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-29T12:03:54Z"
                    }
                ],
                "hostIP": "172.22.104.186",
                "podIP": "10.1.254.80",
                "podIPs": [
                    {
                        "ip": "10.1.254.80"
                    }
                ],
                "startTime": "2024-10-29T12:03:54Z",
                "containerStatuses": [
                    {
                        "name": "istio-proxy",
                        "state": {
                            "running": {
                                "startedAt": "2024-10-29T12:11:31Z"
                            }
                        },
                        "lastState": {
                            "terminated": {
                                "exitCode": 255,
                                "reason": "Unknown",
                                "startedAt": "2024-10-29T12:04:03Z",
                                "finishedAt": "2024-10-29T12:10:59Z",
                                "containerID": "containerd://3e41467956a3e17a39107e916edf32e58e4678d4fe3cde8552e5b8b3c4a5f35e"
                            }
                        },
                        "ready": true,
                        "restartCount": 1,
                        "image": "docker.io/istio/proxyv2:1.18.2",
                        "imageID": "docker.io/istio/proxyv2@sha256:b71f2657e038a0d6092dfd954050a2783c7887ff8e72f77ce64840c0c39b076e",
                        "containerID": "containerd://abed1bbc34e9152e1fd5d3ad6a90c6c58a8a3ae941303d985a0ab1c665fba97b",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "istiod-77c989fb-zxtln",
                "generateName": "istiod-77c989fb-",
                "namespace": "istio-system",
                "uid": "92b81913-1f82-4079-815b-48517970de38",
                "resourceVersion": "2714",
                "creationTimestamp": "2024-10-29T12:03:40Z",
                "labels": {
                    "app": "istiod",
                    "install.operator.istio.io/owning-resource": "unknown",
                    "istio": "pilot",
                    "istio.io/rev": "default",
                    "operator.istio.io/component": "Pilot",
                    "pod-template-hash": "77c989fb",
                    "sidecar.istio.io/inject": "false"
                },
                "annotations": {
                    "ambient.istio.io/redirection": "disabled",
                    "cni.projectcalico.org/containerID": "839f5147dc960fbe2683beea1f47f29cd44ab4889406e28e9d3ff724a34da2d7",
                    "cni.projectcalico.org/podIP": "10.1.254.84/32",
                    "cni.projectcalico.org/podIPs": "10.1.254.84/32",
                    "prometheus.io/port": "15014",
                    "prometheus.io/scrape": "true",
                    "sidecar.istio.io/inject": "false"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "ReplicaSet",
                        "name": "istiod-77c989fb",
                        "uid": "cf5d0d60-7743-4c39-a3ef-201b33d5cefe",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "local-certs",
                        "emptyDir": {
                            "medium": "Memory"
                        }
                    },
                    {
                        "name": "istio-token",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "audience": "istio-ca",
                                        "expirationSeconds": 43200,
                                        "path": "istio-token"
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "cacerts",
                        "secret": {
                            "secretName": "cacerts",
                            "defaultMode": 420,
                            "optional": true
                        }
                    },
                    {
                        "name": "istio-kubeconfig",
                        "secret": {
                            "secretName": "istio-kubeconfig",
                            "defaultMode": 420,
                            "optional": true
                        }
                    },
                    {
                        "name": "istio-csr-dns-cert",
                        "secret": {
                            "secretName": "istiod-tls",
                            "defaultMode": 420,
                            "optional": true
                        }
                    },
                    {
                        "name": "istio-csr-ca-configmap",
                        "configMap": {
                            "name": "istio-ca-root-cert",
                            "defaultMode": 420,
                            "optional": true
                        }
                    },
                    {
                        "name": "kube-api-access-lr28v",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "discovery",
                        "image": "docker.io/istio/pilot:1.18.2",
                        "args": [
                            "discovery",
                            "--monitoringAddr=:15014",
                            "--log_output_level=default:info",
                            "--domain",
                            "cluster.local",
                            "--keepaliveMaxServerConnectionAge",
                            "30m"
                        ],
                        "ports": [
                            {
                                "containerPort": 8080,
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 15010,
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 15017,
                                "protocol": "TCP"
                            }
                        ],
                        "env": [
                            {
                                "name": "REVISION",
                                "value": "default"
                            },
                            {
                                "name": "JWT_POLICY",
                                "value": "third-party-jwt"
                            },
                            {
                                "name": "PILOT_CERT_PROVIDER",
                                "value": "istiod"
                            },
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            },
                            {
                                "name": "SERVICE_ACCOUNT",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.serviceAccountName"
                                    }
                                }
                            },
                            {
                                "name": "KUBECONFIG",
                                "value": "/var/run/secrets/remote/config"
                            },
                            {
                                "name": "PILOT_TRACE_SAMPLING",
                                "value": "100"
                            },
                            {
                                "name": "PILOT_ENABLE_PROTOCOL_SNIFFING_FOR_OUTBOUND",
                                "value": "true"
                            },
                            {
                                "name": "PILOT_ENABLE_PROTOCOL_SNIFFING_FOR_INBOUND",
                                "value": "true"
                            },
                            {
                                "name": "ISTIOD_ADDR",
                                "value": "istiod.istio-system.svc:15012"
                            },
                            {
                                "name": "PILOT_ENABLE_ANALYSIS",
                                "value": "false"
                            },
                            {
                                "name": "CLUSTER_ID",
                                "value": "Kubernetes"
                            },
                            {
                                "name": "GOMEMLIMIT",
                                "valueFrom": {
                                    "resourceFieldRef": {
                                        "resource": "limits.memory",
                                        "divisor": "0"
                                    }
                                }
                            }
                        ],
                        "resources": {
                            "requests": {
                                "cpu": "10m",
                                "memory": "100Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "istio-token",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/tokens"
                            },
                            {
                                "name": "local-certs",
                                "mountPath": "/var/run/secrets/istio-dns"
                            },
                            {
                                "name": "cacerts",
                                "readOnly": true,
                                "mountPath": "/etc/cacerts"
                            },
                            {
                                "name": "istio-kubeconfig",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/remote"
                            },
                            {
                                "name": "istio-csr-dns-cert",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/istiod/tls"
                            },
                            {
                                "name": "istio-csr-ca-configmap",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/istiod/ca"
                            },
                            {
                                "name": "kube-api-access-lr28v",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "readinessProbe": {
                            "httpGet": {
                                "path": "/ready",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "timeoutSeconds": 5,
                            "periodSeconds": 3,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "capabilities": {
                                "drop": [
                                    "ALL"
                                ]
                            },
                            "runAsUser": 1337,
                            "runAsGroup": 1337,
                            "runAsNonRoot": true,
                            "readOnlyRootFilesystem": true,
                            "allowPrivilegeEscalation": false
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "serviceAccountName": "istiod",
                "serviceAccount": "istiod",
                "nodeName": "microk8s-vm",
                "securityContext": {
                    "fsGroup": 1337
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    }
                ],
                "priority": 0,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-29T12:03:40Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-29T12:11:34Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-29T12:11:34Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-29T12:03:40Z"
                    }
                ],
                "hostIP": "172.22.104.186",
                "podIP": "10.1.254.84",
                "podIPs": [
                    {
                        "ip": "10.1.254.84"
                    }
                ],
                "startTime": "2024-10-29T12:03:40Z",
                "containerStatuses": [
                    {
                        "name": "discovery",
                        "state": {
                            "running": {
                                "startedAt": "2024-10-29T12:11:32Z"
                            }
                        },
                        "lastState": {
                            "terminated": {
                                "exitCode": 255,
                                "reason": "Unknown",
                                "startedAt": "2024-10-29T12:03:53Z",
                                "finishedAt": "2024-10-29T12:10:59Z",
                                "containerID": "containerd://8c915db79d6de76e715374f27d4bf1d9f703b6193a91322f3c244f9bcaa386b4"
                            }
                        },
                        "ready": true,
                        "restartCount": 1,
                        "image": "docker.io/istio/pilot:1.18.2",
                        "imageID": "docker.io/istio/pilot@sha256:30328759bd2ef069ac5ccbeadc7b42ab51a47e4c6423c66987eda43ce4a3c16d",
                        "containerID": "containerd://dbcc5aa017d36e2c328c58525ce15a5b4e8d6eb8fc1dfaedcf483a9733cab740",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        }
    ]
}
==== START logs for container istio-proxy of pod istio-system/istio-egressgateway-5499894f8d-9q5pc ====
Request log error: an error on the server ("unknown") has prevented the request from succeeding (get pods istio-egressgateway-5499894f8d-9q5pc)
==== END logs for container istio-proxy of pod istio-system/istio-egressgateway-5499894f8d-9q5pc ====
==== START logs for container istio-proxy of pod istio-system/istio-ingressgateway-77fbf9d476-zkpcr ====
Request log error: an error on the server ("unknown") has prevented the request from succeeding (get pods istio-ingressgateway-77fbf9d476-zkpcr)
==== END logs for container istio-proxy of pod istio-system/istio-ingressgateway-77fbf9d476-zkpcr ====
==== START logs for container discovery of pod istio-system/istiod-77c989fb-zxtln ====
Request log error: an error on the server ("unknown") has prevented the request from succeeding (get pods istiod-77c989fb-zxtln)
==== END logs for container discovery of pod istio-system/istiod-77c989fb-zxtln ====
{
    "kind": "EventList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "8393"
    },
    "items": []
}
{
    "kind": "ReplicationControllerList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "8395"
    },
    "items": []
}
{
    "kind": "ServiceList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "8395"
    },
    "items": []
}
{
    "kind": "DaemonSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "8395"
    },
    "items": []
}
{
    "kind": "DeploymentList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "8395"
    },
    "items": []
}
{
    "kind": "ReplicaSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "8395"
    },
    "items": []
}
{
    "kind": "PodList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "8395"
    },
    "items": []
}
{
    "kind": "EventList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "8395"
    },
    "items": []
}
{
    "kind": "ReplicationControllerList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "8396"
    },
    "items": []
}
{
    "kind": "ServiceList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "8396"
    },
    "items": []
}
{
    "kind": "DaemonSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "8396"
    },
    "items": []
}
{
    "kind": "DeploymentList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "8396"
    },
    "items": []
}
{
    "kind": "ReplicaSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "8396"
    },
    "items": []
}
{
    "kind": "PodList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "8396"
    },
    "items": []
}
{
    "kind": "EventList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "8396"
    },
    "items": []
}
{
    "kind": "ReplicationControllerList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "8396"
    },
    "items": []
}
{
    "kind": "ServiceList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "8396"
    },
    "items": [
        {
            "metadata": {
                "name": "dashboard-metrics-scraper",
                "namespace": "kube-system",
                "uid": "660bf446-a68a-4222-bb82-58fa2e81db62",
                "resourceVersion": "905",
                "creationTimestamp": "2024-10-29T12:00:34Z",
                "labels": {
                    "k8s-app": "dashboard-metrics-scraper"
                },
                "annotations": {
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"k8s-app\":\"dashboard-metrics-scraper\"},\"name\":\"dashboard-metrics-scraper\",\"namespace\":\"kube-system\"},\"spec\":{\"ports\":[{\"port\":8000,\"targetPort\":8000}],\"selector\":{\"k8s-app\":\"dashboard-metrics-scraper\"}}}\n"
                }
            },
            "spec": {
                "ports": [
                    {
                        "protocol": "TCP",
                        "port": 8000,
                        "targetPort": 8000
                    }
                ],
                "selector": {
                    "k8s-app": "dashboard-metrics-scraper"
                },
                "clusterIP": "10.152.183.80",
                "clusterIPs": [
                    "10.152.183.80"
                ],
                "type": "ClusterIP",
                "sessionAffinity": "None",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "internalTrafficPolicy": "Cluster"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "metadata": {
                "name": "kube-dns",
                "namespace": "kube-system",
                "uid": "f8362e03-ccd5-40fd-9e81-6030bc352191",
                "resourceVersion": "114",
                "creationTimestamp": "2024-10-29T11:53:18Z",
                "labels": {
                    "addonmanager.kubernetes.io/mode": "Reconcile",
                    "k8s-app": "kube-dns",
                    "kubernetes.io/cluster-service": "true",
                    "kubernetes.io/name": "CoreDNS"
                },
                "annotations": {
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{\"prometheus.io/port\":\"9153\",\"prometheus.io/scrape\":\"true\"},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"k8s-app\":\"kube-dns\",\"kubernetes.io/cluster-service\":\"true\",\"kubernetes.io/name\":\"CoreDNS\"},\"name\":\"kube-dns\",\"namespace\":\"kube-system\"},\"spec\":{\"clusterIP\":\"10.152.183.10\",\"ports\":[{\"name\":\"dns\",\"port\":53,\"protocol\":\"UDP\"},{\"name\":\"dns-tcp\",\"port\":53,\"protocol\":\"TCP\"},{\"name\":\"metrics\",\"port\":9153,\"protocol\":\"TCP\"}],\"selector\":{\"k8s-app\":\"kube-dns\"}}}\n",
                    "prometheus.io/port": "9153",
                    "prometheus.io/scrape": "true"
                }
            },
            "spec": {
                "ports": [
                    {
                        "name": "dns",
                        "protocol": "UDP",
                        "port": 53,
                        "targetPort": 53
                    },
                    {
                        "name": "dns-tcp",
                        "protocol": "TCP",
                        "port": 53,
                        "targetPort": 53
                    },
                    {
                        "name": "metrics",
                        "protocol": "TCP",
                        "port": 9153,
                        "targetPort": 9153
                    }
                ],
                "selector": {
                    "k8s-app": "kube-dns"
                },
                "clusterIP": "10.152.183.10",
                "clusterIPs": [
                    "10.152.183.10"
                ],
                "type": "ClusterIP",
                "sessionAffinity": "None",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "internalTrafficPolicy": "Cluster"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "metadata": {
                "name": "kubernetes-dashboard",
                "namespace": "kube-system",
                "uid": "2adf7aa8-38a2-4269-a138-db8e4e37310d",
                "resourceVersion": "888",
                "creationTimestamp": "2024-10-29T12:00:34Z",
                "labels": {
                    "k8s-app": "kubernetes-dashboard"
                },
                "annotations": {
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"k8s-app\":\"kubernetes-dashboard\"},\"name\":\"kubernetes-dashboard\",\"namespace\":\"kube-system\"},\"spec\":{\"ports\":[{\"port\":443,\"targetPort\":8443}],\"selector\":{\"k8s-app\":\"kubernetes-dashboard\"}}}\n"
                }
            },
            "spec": {
                "ports": [
                    {
                        "protocol": "TCP",
                        "port": 443,
                        "targetPort": 8443
                    }
                ],
                "selector": {
                    "k8s-app": "kubernetes-dashboard"
                },
                "clusterIP": "10.152.183.113",
                "clusterIPs": [
                    "10.152.183.113"
                ],
                "type": "ClusterIP",
                "sessionAffinity": "None",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "internalTrafficPolicy": "Cluster"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "metadata": {
                "name": "metrics-server",
                "namespace": "kube-system",
                "uid": "f4151d2d-60ee-4145-b123-61db3fc6a625",
                "resourceVersion": "863",
                "creationTimestamp": "2024-10-29T12:00:33Z",
                "labels": {
                    "k8s-app": "metrics-server"
                },
                "annotations": {
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"k8s-app\":\"metrics-server\"},\"name\":\"metrics-server\",\"namespace\":\"kube-system\"},\"spec\":{\"ports\":[{\"name\":\"https\",\"port\":443,\"protocol\":\"TCP\",\"targetPort\":\"https\"}],\"selector\":{\"k8s-app\":\"metrics-server\"}}}\n"
                }
            },
            "spec": {
                "ports": [
                    {
                        "name": "https",
                        "protocol": "TCP",
                        "port": 443,
                        "targetPort": "https"
                    }
                ],
                "selector": {
                    "k8s-app": "metrics-server"
                },
                "clusterIP": "10.152.183.51",
                "clusterIPs": [
                    "10.152.183.51"
                ],
                "type": "ClusterIP",
                "sessionAffinity": "None",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "internalTrafficPolicy": "Cluster"
            },
            "status": {
                "loadBalancer": {}
            }
        }
    ]
}
{
    "kind": "DaemonSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "8396"
    },
    "items": [
        {
            "metadata": {
                "name": "calico-node",
                "namespace": "kube-system",
                "uid": "4d871134-d104-4073-993d-132c6015c030",
                "resourceVersion": "324",
                "generation": 1,
                "creationTimestamp": "2024-10-29T11:53:22Z",
                "labels": {
                    "k8s-app": "calico-node"
                },
                "annotations": {
                    "deprecated.daemonset.template.generation": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"DaemonSet\",\"metadata\":{\"annotations\":{},\"labels\":{\"k8s-app\":\"calico-node\"},\"name\":\"calico-node\",\"namespace\":\"kube-system\"},\"spec\":{\"selector\":{\"matchLabels\":{\"k8s-app\":\"calico-node\"}},\"template\":{\"metadata\":{\"labels\":{\"k8s-app\":\"calico-node\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"DATASTORE_TYPE\",\"value\":\"kubernetes\"},{\"name\":\"WAIT_FOR_DATASTORE\",\"value\":\"true\"},{\"name\":\"NODENAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"spec.nodeName\"}}},{\"name\":\"CALICO_NETWORKING_BACKEND\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"calico_backend\",\"name\":\"calico-config\"}}},{\"name\":\"CLUSTER_TYPE\",\"value\":\"k8s,bgp\"},{\"name\":\"IP\",\"value\":\"autodetect\"},{\"name\":\"IP_AUTODETECTION_METHOD\",\"value\":\"first-found\"},{\"name\":\"CALICO_IPV4POOL_VXLAN\",\"value\":\"Always\"},{\"name\":\"CALICO_IPV6POOL_VXLAN\",\"value\":\"Never\"},{\"name\":\"FELIX_IPINIPMTU\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"veth_mtu\",\"name\":\"calico-config\"}}},{\"name\":\"FELIX_VXLANMTU\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"veth_mtu\",\"name\":\"calico-config\"}}},{\"name\":\"FELIX_WIREGUARDMTU\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"veth_mtu\",\"name\":\"calico-config\"}}},{\"name\":\"CALICO_IPV4POOL_CIDR\",\"value\":\"10.1.0.0/16\"},{\"name\":\"CALICO_DISABLE_FILE_LOGGING\",\"value\":\"true\"},{\"name\":\"FELIX_DEFAULTENDPOINTTOHOSTACTION\",\"value\":\"ACCEPT\"},{\"name\":\"FELIX_IPV6SUPPORT\",\"value\":\"false\"},{\"name\":\"FELIX_HEALTHENABLED\",\"value\":\"true\"},{\"name\":\"FELIX_FEATUREDETECTOVERRIDE\",\"value\":\"ChecksumOffloadBroken=true\"}],\"envFrom\":[{\"configMapRef\":{\"name\":\"kubernetes-services-endpoint\",\"optional\":true}}],\"image\":\"docker.io/calico/node:v3.25.1\",\"imagePullPolicy\":\"IfNotPresent\",\"lifecycle\":{\"preStop\":{\"exec\":{\"command\":[\"/bin/calico-node\",\"-shutdown\"]}}},\"livenessProbe\":{\"exec\":{\"command\":[\"/bin/calico-node\",\"-felix-live\"]},\"failureThreshold\":6,\"initialDelaySeconds\":10,\"periodSeconds\":10,\"timeoutSeconds\":10},\"name\":\"calico-node\",\"readinessProbe\":{\"exec\":{\"command\":[\"/bin/calico-node\",\"-felix-ready\"]},\"periodSeconds\":10,\"timeoutSeconds\":10},\"resources\":{\"requests\":{\"cpu\":\"250m\"}},\"securityContext\":{\"privileged\":true},\"volumeMounts\":[{\"mountPath\":\"/host/etc/cni/net.d\",\"name\":\"cni-net-dir\",\"readOnly\":false},{\"mountPath\":\"/lib/modules\",\"name\":\"lib-modules\",\"readOnly\":true},{\"mountPath\":\"/run/xtables.lock\",\"name\":\"xtables-lock\",\"readOnly\":false},{\"mountPath\":\"/var/run/calico\",\"name\":\"var-run-calico\",\"readOnly\":false},{\"mountPath\":\"/var/lib/calico\",\"name\":\"var-lib-calico\",\"readOnly\":false},{\"mountPath\":\"/var/run/nodeagent\",\"name\":\"policysync\"},{\"mountPath\":\"/var/log/calico/cni\",\"name\":\"cni-log-dir\",\"readOnly\":true}]}],\"hostNetwork\":true,\"initContainers\":[{\"command\":[\"/opt/cni/bin/calico-ipam\",\"-upgrade\"],\"env\":[{\"name\":\"KUBERNETES_NODE_NAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"spec.nodeName\"}}},{\"name\":\"CALICO_NETWORKING_BACKEND\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"calico_backend\",\"name\":\"calico-config\"}}}],\"envFrom\":[{\"configMapRef\":{\"name\":\"kubernetes-services-endpoint\",\"optional\":true}}],\"image\":\"docker.io/calico/cni:v3.25.1\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"upgrade-ipam\",\"securityContext\":{\"privileged\":true},\"volumeMounts\":[{\"mountPath\":\"/var/lib/cni/networks\",\"name\":\"host-local-net-dir\"},{\"mountPath\":\"/host/opt/cni/bin\",\"name\":\"cni-bin-dir\"}]},{\"command\":[\"/opt/cni/bin/install\"],\"env\":[{\"name\":\"CNI_CONF_NAME\",\"value\":\"10-calico.conflist\"},{\"name\":\"CNI_NETWORK_CONFIG\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"cni_network_config\",\"name\":\"calico-config\"}}},{\"name\":\"KUBERNETES_NODE_NAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"spec.nodeName\"}}},{\"name\":\"CNI_MTU\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"veth_mtu\",\"name\":\"calico-config\"}}},{\"name\":\"SLEEP\",\"value\":\"false\"},{\"name\":\"CNI_NET_DIR\",\"value\":\"/var/snap/microk8s/current/args/cni-network\"}],\"envFrom\":[{\"configMapRef\":{\"name\":\"kubernetes-services-endpoint\",\"optional\":true}}],\"image\":\"docker.io/calico/cni:v3.25.1\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"install-cni\",\"securityContext\":{\"privileged\":true},\"volumeMounts\":[{\"mountPath\":\"/host/opt/cni/bin\",\"name\":\"cni-bin-dir\"},{\"mountPath\":\"/host/etc/cni/net.d\",\"name\":\"cni-net-dir\"}]}],\"nodeSelector\":{\"kubernetes.io/os\":\"linux\"},\"priorityClassName\":\"system-node-critical\",\"serviceAccountName\":\"calico-node\",\"terminationGracePeriodSeconds\":0,\"tolerations\":[{\"effect\":\"NoSchedule\",\"operator\":\"Exists\"},{\"key\":\"CriticalAddonsOnly\",\"operator\":\"Exists\"},{\"effect\":\"NoExecute\",\"operator\":\"Exists\"}],\"volumes\":[{\"hostPath\":{\"path\":\"/lib/modules\"},\"name\":\"lib-modules\"},{\"hostPath\":{\"path\":\"/var/snap/microk8s/current/var/run/calico\"},\"name\":\"var-run-calico\"},{\"hostPath\":{\"path\":\"/var/snap/microk8s/current/var/lib/calico\"},\"name\":\"var-lib-calico\"},{\"hostPath\":{\"path\":\"/run/xtables.lock\",\"type\":\"FileOrCreate\"},\"name\":\"xtables-lock\"},{\"hostPath\":{\"path\":\"/sys/fs/\",\"type\":\"DirectoryOrCreate\"},\"name\":\"sys-fs\"},{\"hostPath\":{\"path\":\"/var/snap/microk8s/current/opt/cni/bin\"},\"name\":\"cni-bin-dir\"},{\"hostPath\":{\"path\":\"/var/snap/microk8s/current/args/cni-network\"},\"name\":\"cni-net-dir\"},{\"hostPath\":{\"path\":\"/var/snap/microk8s/common/var/log/calico/cni\"},\"name\":\"cni-log-dir\"},{\"hostPath\":{\"path\":\"/var/snap/microk8s/current/var/lib/cni/networks\"},\"name\":\"host-local-net-dir\"},{\"hostPath\":{\"path\":\"/var/snap/microk8s/current/var/run/nodeagent\",\"type\":\"DirectoryOrCreate\"},\"name\":\"policysync\"}]}},\"updateStrategy\":{\"rollingUpdate\":{\"maxUnavailable\":1},\"type\":\"RollingUpdate\"}}}\n"
                }
            },
            "spec": {
                "selector": {
                    "matchLabels": {
                        "k8s-app": "calico-node"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "calico-node"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "lib-modules",
                                "hostPath": {
                                    "path": "/lib/modules",
                                    "type": ""
                                }
                            },
                            {
                                "name": "var-run-calico",
                                "hostPath": {
                                    "path": "/var/snap/microk8s/current/var/run/calico",
                                    "type": ""
                                }
                            },
                            {
                                "name": "var-lib-calico",
                                "hostPath": {
                                    "path": "/var/snap/microk8s/current/var/lib/calico",
                                    "type": ""
                                }
                            },
                            {
                                "name": "xtables-lock",
                                "hostPath": {
                                    "path": "/run/xtables.lock",
                                    "type": "FileOrCreate"
                                }
                            },
                            {
                                "name": "sys-fs",
                                "hostPath": {
                                    "path": "/sys/fs/",
                                    "type": "DirectoryOrCreate"
                                }
                            },
                            {
                                "name": "cni-bin-dir",
                                "hostPath": {
                                    "path": "/var/snap/microk8s/current/opt/cni/bin",
                                    "type": ""
                                }
                            },
                            {
                                "name": "cni-net-dir",
                                "hostPath": {
                                    "path": "/var/snap/microk8s/current/args/cni-network",
                                    "type": ""
                                }
                            },
                            {
                                "name": "cni-log-dir",
                                "hostPath": {
                                    "path": "/var/snap/microk8s/common/var/log/calico/cni",
                                    "type": ""
                                }
                            },
                            {
                                "name": "host-local-net-dir",
                                "hostPath": {
                                    "path": "/var/snap/microk8s/current/var/lib/cni/networks",
                                    "type": ""
                                }
                            },
                            {
                                "name": "policysync",
                                "hostPath": {
                                    "path": "/var/snap/microk8s/current/var/run/nodeagent",
                                    "type": "DirectoryOrCreate"
                                }
                            }
                        ],
                        "initContainers": [
                            {
                                "name": "upgrade-ipam",
                                "image": "docker.io/calico/cni:v3.25.1",
                                "command": [
                                    "/opt/cni/bin/calico-ipam",
                                    "-upgrade"
                                ],
                                "envFrom": [
                                    {
                                        "configMapRef": {
                                            "name": "kubernetes-services-endpoint",
                                            "optional": true
                                        }
                                    }
                                ],
                                "env": [
                                    {
                                        "name": "KUBERNETES_NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    },
                                    {
                                        "name": "CALICO_NETWORKING_BACKEND",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "name": "calico-config",
                                                "key": "calico_backend"
                                            }
                                        }
                                    }
                                ],
                                "resources": {},
                                "volumeMounts": [
                                    {
                                        "name": "host-local-net-dir",
                                        "mountPath": "/var/lib/cni/networks"
                                    },
                                    {
                                        "name": "cni-bin-dir",
                                        "mountPath": "/host/opt/cni/bin"
                                    }
                                ],
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "privileged": true
                                }
                            },
                            {
                                "name": "install-cni",
                                "image": "docker.io/calico/cni:v3.25.1",
                                "command": [
                                    "/opt/cni/bin/install"
                                ],
                                "envFrom": [
                                    {
                                        "configMapRef": {
                                            "name": "kubernetes-services-endpoint",
                                            "optional": true
                                        }
                                    }
                                ],
                                "env": [
                                    {
                                        "name": "CNI_CONF_NAME",
                                        "value": "10-calico.conflist"
                                    },
                                    {
                                        "name": "CNI_NETWORK_CONFIG",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "name": "calico-config",
                                                "key": "cni_network_config"
                                            }
                                        }
                                    },
                                    {
                                        "name": "KUBERNETES_NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    },
                                    {
                                        "name": "CNI_MTU",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "name": "calico-config",
                                                "key": "veth_mtu"
                                            }
                                        }
                                    },
                                    {
                                        "name": "SLEEP",
                                        "value": "false"
                                    },
                                    {
                                        "name": "CNI_NET_DIR",
                                        "value": "/var/snap/microk8s/current/args/cni-network"
                                    }
                                ],
                                "resources": {},
                                "volumeMounts": [
                                    {
                                        "name": "cni-bin-dir",
                                        "mountPath": "/host/opt/cni/bin"
                                    },
                                    {
                                        "name": "cni-net-dir",
                                        "mountPath": "/host/etc/cni/net.d"
                                    }
                                ],
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "privileged": true
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "calico-node",
                                "image": "docker.io/calico/node:v3.25.1",
                                "envFrom": [
                                    {
                                        "configMapRef": {
                                            "name": "kubernetes-services-endpoint",
                                            "optional": true
                                        }
                                    }
                                ],
                                "env": [
                                    {
                                        "name": "DATASTORE_TYPE",
                                        "value": "kubernetes"
                                    },
                                    {
                                        "name": "WAIT_FOR_DATASTORE",
                                        "value": "true"
                                    },
                                    {
                                        "name": "NODENAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    },
                                    {
                                        "name": "CALICO_NETWORKING_BACKEND",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "name": "calico-config",
                                                "key": "calico_backend"
                                            }
                                        }
                                    },
                                    {
                                        "name": "CLUSTER_TYPE",
                                        "value": "k8s,bgp"
                                    },
                                    {
                                        "name": "IP",
                                        "value": "autodetect"
                                    },
                                    {
                                        "name": "IP_AUTODETECTION_METHOD",
                                        "value": "first-found"
                                    },
                                    {
                                        "name": "CALICO_IPV4POOL_VXLAN",
                                        "value": "Always"
                                    },
                                    {
                                        "name": "CALICO_IPV6POOL_VXLAN",
                                        "value": "Never"
                                    },
                                    {
                                        "name": "FELIX_IPINIPMTU",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "name": "calico-config",
                                                "key": "veth_mtu"
                                            }
                                        }
                                    },
                                    {
                                        "name": "FELIX_VXLANMTU",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "name": "calico-config",
                                                "key": "veth_mtu"
                                            }
                                        }
                                    },
                                    {
                                        "name": "FELIX_WIREGUARDMTU",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "name": "calico-config",
                                                "key": "veth_mtu"
                                            }
                                        }
                                    },
                                    {
                                        "name": "CALICO_IPV4POOL_CIDR",
                                        "value": "10.1.0.0/16"
                                    },
                                    {
                                        "name": "CALICO_DISABLE_FILE_LOGGING",
                                        "value": "true"
                                    },
                                    {
                                        "name": "FELIX_DEFAULTENDPOINTTOHOSTACTION",
                                        "value": "ACCEPT"
                                    },
                                    {
                                        "name": "FELIX_IPV6SUPPORT",
                                        "value": "false"
                                    },
                                    {
                                        "name": "FELIX_HEALTHENABLED",
                                        "value": "true"
                                    },
                                    {
                                        "name": "FELIX_FEATUREDETECTOVERRIDE",
                                        "value": "ChecksumOffloadBroken=true"
                                    }
                                ],
                                "resources": {
                                    "requests": {
                                        "cpu": "250m"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "cni-net-dir",
                                        "mountPath": "/host/etc/cni/net.d"
                                    },
                                    {
                                        "name": "lib-modules",
                                        "readOnly": true,
                                        "mountPath": "/lib/modules"
                                    },
                                    {
                                        "name": "xtables-lock",
                                        "mountPath": "/run/xtables.lock"
                                    },
                                    {
                                        "name": "var-run-calico",
                                        "mountPath": "/var/run/calico"
                                    },
                                    {
                                        "name": "var-lib-calico",
                                        "mountPath": "/var/lib/calico"
                                    },
                                    {
                                        "name": "policysync",
                                        "mountPath": "/var/run/nodeagent"
                                    },
                                    {
                                        "name": "cni-log-dir",
                                        "readOnly": true,
                                        "mountPath": "/var/log/calico/cni"
                                    }
                                ],
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            "/bin/calico-node",
                                            "-felix-live"
                                        ]
                                    },
                                    "initialDelaySeconds": 10,
                                    "timeoutSeconds": 10,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 6
                                },
                                "readinessProbe": {
                                    "exec": {
                                        "command": [
                                            "/bin/calico-node",
                                            "-felix-ready"
                                        ]
                                    },
                                    "timeoutSeconds": 10,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "lifecycle": {
                                    "preStop": {
                                        "exec": {
                                            "command": [
                                                "/bin/calico-node",
                                                "-shutdown"
                                            ]
                                        }
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "privileged": true
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 0,
                        "dnsPolicy": "ClusterFirst",
                        "nodeSelector": {
                            "kubernetes.io/os": "linux"
                        },
                        "serviceAccountName": "calico-node",
                        "serviceAccount": "calico-node",
                        "hostNetwork": true,
                        "securityContext": {},
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "operator": "Exists",
                                "effect": "NoSchedule"
                            },
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "operator": "Exists",
                                "effect": "NoExecute"
                            }
                        ],
                        "priorityClassName": "system-node-critical"
                    }
                },
                "updateStrategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": 1,
                        "maxSurge": 0
                    }
                },
                "revisionHistoryLimit": 10
            },
            "status": {
                "currentNumberScheduled": 1,
                "numberMisscheduled": 0,
                "desiredNumberScheduled": 1,
                "numberReady": 1,
                "observedGeneration": 1,
                "updatedNumberScheduled": 1,
                "numberAvailable": 1
            }
        }
    ]
}
{
    "kind": "DeploymentList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "8396"
    },
    "items": [
        {
            "metadata": {
                "name": "calico-kube-controllers",
                "namespace": "kube-system",
                "uid": "98f53efe-0075-4351-bd3e-a18c4955acd0",
                "resourceVersion": "372",
                "generation": 1,
                "creationTimestamp": "2024-10-29T11:53:22Z",
                "labels": {
                    "k8s-app": "calico-kube-controllers"
                },
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"k8s-app\":\"calico-kube-controllers\"},\"name\":\"calico-kube-controllers\",\"namespace\":\"kube-system\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"k8s-app\":\"calico-kube-controllers\"}},\"strategy\":{\"type\":\"Recreate\"},\"template\":{\"metadata\":{\"labels\":{\"k8s-app\":\"calico-kube-controllers\"},\"name\":\"calico-kube-controllers\",\"namespace\":\"kube-system\"},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"ENABLED_CONTROLLERS\",\"value\":\"node\"},{\"name\":\"DATASTORE_TYPE\",\"value\":\"kubernetes\"}],\"image\":\"docker.io/calico/kube-controllers:v3.25.1\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"exec\":{\"command\":[\"/usr/bin/check-status\",\"-l\"]},\"failureThreshold\":6,\"initialDelaySeconds\":10,\"periodSeconds\":10,\"timeoutSeconds\":10},\"name\":\"calico-kube-controllers\",\"readinessProbe\":{\"exec\":{\"command\":[\"/usr/bin/check-status\",\"-r\"]},\"periodSeconds\":10}}],\"nodeSelector\":{\"kubernetes.io/os\":\"linux\"},\"priorityClassName\":\"system-cluster-critical\",\"serviceAccountName\":\"calico-kube-controllers\",\"tolerations\":[{\"key\":\"CriticalAddonsOnly\",\"operator\":\"Exists\"},{\"effect\":\"NoSchedule\",\"key\":\"node-role.kubernetes.io/master\"},{\"effect\":\"NoSchedule\",\"key\":\"node-role.kubernetes.io/control-plane\"}]}}}}\n"
                }
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "calico-kube-controllers"
                    }
                },
                "template": {
                    "metadata": {
                        "name": "calico-kube-controllers",
                        "namespace": "kube-system",
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "calico-kube-controllers"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "name": "calico-kube-controllers",
                                "image": "docker.io/calico/kube-controllers:v3.25.1",
                                "env": [
                                    {
                                        "name": "ENABLED_CONTROLLERS",
                                        "value": "node"
                                    },
                                    {
                                        "name": "DATASTORE_TYPE",
                                        "value": "kubernetes"
                                    }
                                ],
                                "resources": {},
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            "/usr/bin/check-status",
                                            "-l"
                                        ]
                                    },
                                    "initialDelaySeconds": 10,
                                    "timeoutSeconds": 10,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 6
                                },
                                "readinessProbe": {
                                    "exec": {
                                        "command": [
                                            "/usr/bin/check-status",
                                            "-r"
                                        ]
                                    },
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent"
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "nodeSelector": {
                            "kubernetes.io/os": "linux"
                        },
                        "serviceAccountName": "calico-kube-controllers",
                        "serviceAccount": "calico-kube-controllers",
                        "securityContext": {},
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "key": "node-role.kubernetes.io/master",
                                "effect": "NoSchedule"
                            },
                            {
                                "key": "node-role.kubernetes.io/control-plane",
                                "effect": "NoSchedule"
                            }
                        ],
                        "priorityClassName": "system-cluster-critical"
                    }
                },
                "strategy": {
                    "type": "Recreate"
                },
                "revisionHistoryLimit": 10,
                "progressDeadlineSeconds": 600
            },
            "status": {
                "observedGeneration": 1,
                "replicas": 1,
                "updatedReplicas": 1,
                "readyReplicas": 1,
                "availableReplicas": 1,
                "conditions": [
                    {
                        "type": "Available",
                        "status": "True",
                        "lastUpdateTime": "2024-10-29T11:54:02Z",
                        "lastTransitionTime": "2024-10-29T11:54:02Z",
                        "reason": "MinimumReplicasAvailable",
                        "message": "Deployment has minimum availability."
                    },
                    {
                        "type": "Progressing",
                        "status": "True",
                        "lastUpdateTime": "2024-10-29T11:54:02Z",
                        "lastTransitionTime": "2024-10-29T11:53:22Z",
                        "reason": "NewReplicaSetAvailable",
                        "message": "ReplicaSet \"calico-kube-controllers-77bd7c5b\" has successfully progressed."
                    }
                ]
            }
        },
        {
            "metadata": {
                "name": "coredns",
                "namespace": "kube-system",
                "uid": "c0bbe023-d921-436e-9679-d5776753f3f5",
                "resourceVersion": "360",
                "generation": 1,
                "creationTimestamp": "2024-10-29T11:53:18Z",
                "labels": {
                    "addonmanager.kubernetes.io/mode": "Reconcile",
                    "k8s-app": "kube-dns",
                    "kubernetes.io/cluster-service": "true",
                    "kubernetes.io/name": "CoreDNS"
                },
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"k8s-app\":\"kube-dns\",\"kubernetes.io/cluster-service\":\"true\",\"kubernetes.io/name\":\"CoreDNS\"},\"name\":\"coredns\",\"namespace\":\"kube-system\"},\"spec\":{\"selector\":{\"matchLabels\":{\"k8s-app\":\"kube-dns\"}},\"strategy\":{\"rollingUpdate\":{\"maxSurge\":\"10%\",\"maxUnavailable\":0},\"type\":\"RollingUpdate\"},\"template\":{\"metadata\":{\"annotations\":{\"priorityClassName\":\"system-cluster-critical\"},\"labels\":{\"k8s-app\":\"kube-dns\"}},\"spec\":{\"containers\":[{\"args\":[\"-conf\",\"/etc/coredns/Corefile\"],\"image\":\"coredns/coredns:1.10.1\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"failureThreshold\":5,\"httpGet\":{\"path\":\"/health\",\"port\":8080,\"scheme\":\"HTTP\"},\"initialDelaySeconds\":60,\"successThreshold\":1,\"timeoutSeconds\":5},\"name\":\"coredns\",\"ports\":[{\"containerPort\":53,\"name\":\"dns\",\"protocol\":\"UDP\"},{\"containerPort\":53,\"name\":\"dns-tcp\",\"protocol\":\"TCP\"},{\"containerPort\":9153,\"name\":\"metrics\",\"protocol\":\"TCP\"}],\"readinessProbe\":{\"httpGet\":{\"path\":\"/ready\",\"port\":8181,\"scheme\":\"HTTP\"}},\"resources\":{\"limits\":{\"memory\":\"170Mi\"},\"requests\":{\"cpu\":\"100m\",\"memory\":\"70Mi\"}},\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"add\":[\"NET_BIND_SERVICE\"],\"drop\":[\"all\"]},\"readOnlyRootFilesystem\":true},\"volumeMounts\":[{\"mountPath\":\"/etc/coredns\",\"name\":\"config-volume\",\"readOnly\":true}]}],\"dnsPolicy\":\"Default\",\"priorityClassName\":\"system-cluster-critical\",\"serviceAccountName\":\"coredns\",\"tolerations\":[{\"key\":\"CriticalAddonsOnly\",\"operator\":\"Exists\"}],\"volumes\":[{\"configMap\":{\"items\":[{\"key\":\"Corefile\",\"path\":\"Corefile\"}],\"name\":\"coredns\"},\"name\":\"config-volume\"}]}}}}\n"
                }
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "kube-dns"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "kube-dns"
                        },
                        "annotations": {
                            "priorityClassName": "system-cluster-critical"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "config-volume",
                                "configMap": {
                                    "name": "coredns",
                                    "items": [
                                        {
                                            "key": "Corefile",
                                            "path": "Corefile"
                                        }
                                    ],
                                    "defaultMode": 420
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "coredns",
                                "image": "coredns/coredns:1.10.1",
                                "args": [
                                    "-conf",
                                    "/etc/coredns/Corefile"
                                ],
                                "ports": [
                                    {
                                        "name": "dns",
                                        "containerPort": 53,
                                        "protocol": "UDP"
                                    },
                                    {
                                        "name": "dns-tcp",
                                        "containerPort": 53,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "metrics",
                                        "containerPort": 9153,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "memory": "170Mi"
                                    },
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "70Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "config-volume",
                                        "readOnly": true,
                                        "mountPath": "/etc/coredns"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/health",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 60,
                                    "timeoutSeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 5
                                },
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/ready",
                                        "port": 8181,
                                        "scheme": "HTTP"
                                    },
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "add": [
                                            "NET_BIND_SERVICE"
                                        ],
                                        "drop": [
                                            "all"
                                        ]
                                    },
                                    "readOnlyRootFilesystem": true,
                                    "allowPrivilegeEscalation": false
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "Default",
                        "serviceAccountName": "coredns",
                        "serviceAccount": "coredns",
                        "securityContext": {},
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            }
                        ],
                        "priorityClassName": "system-cluster-critical"
                    }
                },
                "strategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": 0,
                        "maxSurge": "10%"
                    }
                },
                "revisionHistoryLimit": 10,
                "progressDeadlineSeconds": 600
            },
            "status": {
                "observedGeneration": 1,
                "replicas": 1,
                "updatedReplicas": 1,
                "readyReplicas": 1,
                "availableReplicas": 1,
                "conditions": [
                    {
                        "type": "Available",
                        "status": "True",
                        "lastUpdateTime": "2024-10-29T11:54:01Z",
                        "lastTransitionTime": "2024-10-29T11:54:01Z",
                        "reason": "MinimumReplicasAvailable",
                        "message": "Deployment has minimum availability."
                    },
                    {
                        "type": "Progressing",
                        "status": "True",
                        "lastUpdateTime": "2024-10-29T11:54:01Z",
                        "lastTransitionTime": "2024-10-29T11:53:21Z",
                        "reason": "NewReplicaSetAvailable",
                        "message": "ReplicaSet \"coredns-864597b5fd\" has successfully progressed."
                    }
                ]
            }
        },
        {
            "metadata": {
                "name": "dashboard-metrics-scraper",
                "namespace": "kube-system",
                "uid": "cab991b5-4c83-40c8-97ce-1f4efdcb3a11",
                "resourceVersion": "965",
                "generation": 1,
                "creationTimestamp": "2024-10-29T12:00:34Z",
                "labels": {
                    "k8s-app": "dashboard-metrics-scraper"
                },
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"k8s-app\":\"dashboard-metrics-scraper\"},\"name\":\"dashboard-metrics-scraper\",\"namespace\":\"kube-system\"},\"spec\":{\"replicas\":1,\"revisionHistoryLimit\":10,\"selector\":{\"matchLabels\":{\"k8s-app\":\"dashboard-metrics-scraper\"}},\"template\":{\"metadata\":{\"labels\":{\"k8s-app\":\"dashboard-metrics-scraper\"}},\"spec\":{\"containers\":[{\"image\":\"kubernetesui/metrics-scraper:v1.0.8\",\"livenessProbe\":{\"httpGet\":{\"path\":\"/\",\"port\":8000,\"scheme\":\"HTTP\"},\"initialDelaySeconds\":30,\"timeoutSeconds\":30},\"name\":\"dashboard-metrics-scraper\",\"ports\":[{\"containerPort\":8000,\"protocol\":\"TCP\"}],\"securityContext\":{\"allowPrivilegeEscalation\":false,\"readOnlyRootFilesystem\":true,\"runAsGroup\":2001,\"runAsUser\":1001},\"volumeMounts\":[{\"mountPath\":\"/tmp\",\"name\":\"tmp-volume\"}]}],\"nodeSelector\":{\"kubernetes.io/os\":\"linux\"},\"securityContext\":{\"seccompProfile\":{\"type\":\"RuntimeDefault\"}},\"serviceAccountName\":\"kubernetes-dashboard\",\"tolerations\":[{\"effect\":\"NoSchedule\",\"key\":\"node-role.kubernetes.io/master\"}],\"volumes\":[{\"emptyDir\":{},\"name\":\"tmp-volume\"}]}}}}\n"
                }
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "dashboard-metrics-scraper"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "dashboard-metrics-scraper"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "tmp-volume",
                                "emptyDir": {}
                            }
                        ],
                        "containers": [
                            {
                                "name": "dashboard-metrics-scraper",
                                "image": "kubernetesui/metrics-scraper:v1.0.8",
                                "ports": [
                                    {
                                        "containerPort": 8000,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {},
                                "volumeMounts": [
                                    {
                                        "name": "tmp-volume",
                                        "mountPath": "/tmp"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/",
                                        "port": 8000,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 30,
                                    "timeoutSeconds": 30,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "runAsUser": 1001,
                                    "runAsGroup": 2001,
                                    "readOnlyRootFilesystem": true,
                                    "allowPrivilegeEscalation": false
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "nodeSelector": {
                            "kubernetes.io/os": "linux"
                        },
                        "serviceAccountName": "kubernetes-dashboard",
                        "serviceAccount": "kubernetes-dashboard",
                        "securityContext": {
                            "seccompProfile": {
                                "type": "RuntimeDefault"
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "node-role.kubernetes.io/master",
                                "effect": "NoSchedule"
                            }
                        ]
                    }
                },
                "strategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": "25%",
                        "maxSurge": "25%"
                    }
                },
                "revisionHistoryLimit": 10,
                "progressDeadlineSeconds": 600
            },
            "status": {
                "observedGeneration": 1,
                "replicas": 1,
                "updatedReplicas": 1,
                "readyReplicas": 1,
                "availableReplicas": 1,
                "conditions": [
                    {
                        "type": "Available",
                        "status": "True",
                        "lastUpdateTime": "2024-10-29T12:00:43Z",
                        "lastTransitionTime": "2024-10-29T12:00:43Z",
                        "reason": "MinimumReplicasAvailable",
                        "message": "Deployment has minimum availability."
                    },
                    {
                        "type": "Progressing",
                        "status": "True",
                        "lastUpdateTime": "2024-10-29T12:00:43Z",
                        "lastTransitionTime": "2024-10-29T12:00:34Z",
                        "reason": "NewReplicaSetAvailable",
                        "message": "ReplicaSet \"dashboard-metrics-scraper-5657497c4c\" has successfully progressed."
                    }
                ]
            }
        },
        {
            "metadata": {
                "name": "hostpath-provisioner",
                "namespace": "kube-system",
                "uid": "ee9a34b4-677c-4385-b9b3-09d7241567f4",
                "resourceVersion": "1191",
                "generation": 1,
                "creationTimestamp": "2024-10-29T12:02:13Z",
                "labels": {
                    "k8s-app": "hostpath-provisioner"
                },
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"k8s-app\":\"hostpath-provisioner\"},\"name\":\"hostpath-provisioner\",\"namespace\":\"kube-system\"},\"spec\":{\"replicas\":1,\"revisionHistoryLimit\":0,\"selector\":{\"matchLabels\":{\"k8s-app\":\"hostpath-provisioner\"}},\"template\":{\"metadata\":{\"labels\":{\"k8s-app\":\"hostpath-provisioner\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"NAMESPACE\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.namespace\"}}},{\"name\":\"NODE_NAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"spec.nodeName\"}}},{\"name\":\"PV_DIR\",\"value\":\"/var/snap/microk8s/common/default-storage\"},{\"name\":\"BUSYBOX_IMAGE\",\"value\":\"busybox:1.28.4\"}],\"image\":\"cdkbot/hostpath-provisioner:1.4.2\",\"name\":\"hostpath-provisioner\",\"volumeMounts\":[{\"mountPath\":\"/var/snap/microk8s/common/default-storage\",\"name\":\"pv-volume\"}]}],\"serviceAccountName\":\"microk8s-hostpath\",\"volumes\":[{\"hostPath\":{\"path\":\"/var/snap/microk8s/common/default-storage\"},\"name\":\"pv-volume\"}]}}}}\n"
                }
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "hostpath-provisioner"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "hostpath-provisioner"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "pv-volume",
                                "hostPath": {
                                    "path": "/var/snap/microk8s/common/default-storage",
                                    "type": ""
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "hostpath-provisioner",
                                "image": "cdkbot/hostpath-provisioner:1.4.2",
                                "env": [
                                    {
                                        "name": "NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    },
                                    {
                                        "name": "PV_DIR",
                                        "value": "/var/snap/microk8s/common/default-storage"
                                    },
                                    {
                                        "name": "BUSYBOX_IMAGE",
                                        "value": "busybox:1.28.4"
                                    }
                                ],
                                "resources": {},
                                "volumeMounts": [
                                    {
                                        "name": "pv-volume",
                                        "mountPath": "/var/snap/microk8s/common/default-storage"
                                    }
                                ],
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent"
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "serviceAccountName": "microk8s-hostpath",
                        "serviceAccount": "microk8s-hostpath",
                        "securityContext": {},
                        "schedulerName": "default-scheduler"
                    }
                },
                "strategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": "25%",
                        "maxSurge": "25%"
                    }
                },
                "revisionHistoryLimit": 0,
                "progressDeadlineSeconds": 600
            },
            "status": {
                "observedGeneration": 1,
                "replicas": 1,
                "updatedReplicas": 1,
                "readyReplicas": 1,
                "availableReplicas": 1,
                "conditions": [
                    {
                        "type": "Available",
                        "status": "True",
                        "lastUpdateTime": "2024-10-29T12:02:20Z",
                        "lastTransitionTime": "2024-10-29T12:02:20Z",
                        "reason": "MinimumReplicasAvailable",
                        "message": "Deployment has minimum availability."
                    },
                    {
                        "type": "Progressing",
                        "status": "True",
                        "lastUpdateTime": "2024-10-29T12:02:20Z",
                        "lastTransitionTime": "2024-10-29T12:02:13Z",
                        "reason": "NewReplicaSetAvailable",
                        "message": "ReplicaSet \"hostpath-provisioner-7df77bc496\" has successfully progressed."
                    }
                ]
            }
        },
        {
            "metadata": {
                "name": "kubernetes-dashboard",
                "namespace": "kube-system",
                "uid": "666a2608-53c0-4332-bedd-7bf26a67d275",
                "resourceVersion": "978",
                "generation": 1,
                "creationTimestamp": "2024-10-29T12:00:34Z",
                "labels": {
                    "k8s-app": "kubernetes-dashboard"
                },
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"k8s-app\":\"kubernetes-dashboard\"},\"name\":\"kubernetes-dashboard\",\"namespace\":\"kube-system\"},\"spec\":{\"replicas\":1,\"revisionHistoryLimit\":10,\"selector\":{\"matchLabels\":{\"k8s-app\":\"kubernetes-dashboard\"}},\"template\":{\"metadata\":{\"labels\":{\"k8s-app\":\"kubernetes-dashboard\"}},\"spec\":{\"containers\":[{\"args\":[\"--auto-generate-certificates\",\"--namespace=kube-system\"],\"image\":\"kubernetesui/dashboard:v2.7.0\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"httpGet\":{\"path\":\"/\",\"port\":8443,\"scheme\":\"HTTPS\"},\"initialDelaySeconds\":30,\"timeoutSeconds\":30},\"name\":\"kubernetes-dashboard\",\"ports\":[{\"containerPort\":8443,\"protocol\":\"TCP\"}],\"securityContext\":{\"allowPrivilegeEscalation\":false,\"readOnlyRootFilesystem\":true,\"runAsGroup\":2001,\"runAsUser\":1001},\"volumeMounts\":[{\"mountPath\":\"/certs\",\"name\":\"kubernetes-dashboard-certs\"},{\"mountPath\":\"/tmp\",\"name\":\"tmp-volume\"}]}],\"nodeSelector\":{\"kubernetes.io/os\":\"linux\"},\"securityContext\":{\"seccompProfile\":{\"type\":\"RuntimeDefault\"}},\"serviceAccountName\":\"kubernetes-dashboard\",\"tolerations\":[{\"effect\":\"NoSchedule\",\"key\":\"node-role.kubernetes.io/master\"}],\"volumes\":[{\"name\":\"kubernetes-dashboard-certs\",\"secret\":{\"secretName\":\"kubernetes-dashboard-certs\"}},{\"emptyDir\":{},\"name\":\"tmp-volume\"}]}}}}\n"
                }
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "kubernetes-dashboard"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "kubernetes-dashboard"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "kubernetes-dashboard-certs",
                                "secret": {
                                    "secretName": "kubernetes-dashboard-certs",
                                    "defaultMode": 420
                                }
                            },
                            {
                                "name": "tmp-volume",
                                "emptyDir": {}
                            }
                        ],
                        "containers": [
                            {
                                "name": "kubernetes-dashboard",
                                "image": "kubernetesui/dashboard:v2.7.0",
                                "args": [
                                    "--auto-generate-certificates",
                                    "--namespace=kube-system"
                                ],
                                "ports": [
                                    {
                                        "containerPort": 8443,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {},
                                "volumeMounts": [
                                    {
                                        "name": "kubernetes-dashboard-certs",
                                        "mountPath": "/certs"
                                    },
                                    {
                                        "name": "tmp-volume",
                                        "mountPath": "/tmp"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/",
                                        "port": 8443,
                                        "scheme": "HTTPS"
                                    },
                                    "initialDelaySeconds": 30,
                                    "timeoutSeconds": 30,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "runAsUser": 1001,
                                    "runAsGroup": 2001,
                                    "readOnlyRootFilesystem": true,
                                    "allowPrivilegeEscalation": false
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "nodeSelector": {
                            "kubernetes.io/os": "linux"
                        },
                        "serviceAccountName": "kubernetes-dashboard",
                        "serviceAccount": "kubernetes-dashboard",
                        "securityContext": {
                            "seccompProfile": {
                                "type": "RuntimeDefault"
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "node-role.kubernetes.io/master",
                                "effect": "NoSchedule"
                            }
                        ]
                    }
                },
                "strategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": "25%",
                        "maxSurge": "25%"
                    }
                },
                "revisionHistoryLimit": 10,
                "progressDeadlineSeconds": 600
            },
            "status": {
                "observedGeneration": 1,
                "replicas": 1,
                "updatedReplicas": 1,
                "readyReplicas": 1,
                "availableReplicas": 1,
                "conditions": [
                    {
                        "type": "Available",
                        "status": "True",
                        "lastUpdateTime": "2024-10-29T12:00:46Z",
                        "lastTransitionTime": "2024-10-29T12:00:46Z",
                        "reason": "MinimumReplicasAvailable",
                        "message": "Deployment has minimum availability."
                    },
                    {
                        "type": "Progressing",
                        "status": "True",
                        "lastUpdateTime": "2024-10-29T12:00:46Z",
                        "lastTransitionTime": "2024-10-29T12:00:34Z",
                        "reason": "NewReplicaSetAvailable",
                        "message": "ReplicaSet \"kubernetes-dashboard-54b48fbf9\" has successfully progressed."
                    }
                ]
            }
        },
        {
            "metadata": {
                "name": "metrics-server",
                "namespace": "kube-system",
                "uid": "a57adc8e-9312-4f52-8681-7c3931c847d4",
                "resourceVersion": "1006",
                "generation": 1,
                "creationTimestamp": "2024-10-29T12:00:33Z",
                "labels": {
                    "k8s-app": "metrics-server"
                },
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"k8s-app\":\"metrics-server\"},\"name\":\"metrics-server\",\"namespace\":\"kube-system\"},\"spec\":{\"selector\":{\"matchLabels\":{\"k8s-app\":\"metrics-server\"}},\"strategy\":{\"rollingUpdate\":{\"maxUnavailable\":0}},\"template\":{\"metadata\":{\"labels\":{\"k8s-app\":\"metrics-server\"}},\"spec\":{\"containers\":[{\"args\":[\"--cert-dir=/tmp\",\"--secure-port=4443\",\"--kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname\",\"--kubelet-use-node-status-port\",\"--metric-resolution=15s\",\"--kubelet-insecure-tls\"],\"image\":\"registry.k8s.io/metrics-server/metrics-server:v0.6.3\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"failureThreshold\":3,\"httpGet\":{\"path\":\"/livez\",\"port\":\"https\",\"scheme\":\"HTTPS\"},\"periodSeconds\":10},\"name\":\"metrics-server\",\"ports\":[{\"containerPort\":4443,\"name\":\"https\",\"protocol\":\"TCP\"}],\"readinessProbe\":{\"failureThreshold\":3,\"httpGet\":{\"path\":\"/readyz\",\"port\":\"https\",\"scheme\":\"HTTPS\"},\"initialDelaySeconds\":20,\"periodSeconds\":10},\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"200Mi\"}},\"securityContext\":{\"readOnlyRootFilesystem\":true,\"runAsNonRoot\":true,\"runAsUser\":1000},\"volumeMounts\":[{\"mountPath\":\"/tmp\",\"name\":\"tmp-dir\"}]}],\"nodeSelector\":{\"kubernetes.io/arch\":\"amd64\",\"kubernetes.io/os\":\"linux\"},\"priorityClassName\":\"system-cluster-critical\",\"serviceAccountName\":\"metrics-server\",\"volumes\":[{\"emptyDir\":{},\"name\":\"tmp-dir\"}]}}}}\n"
                }
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "metrics-server"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "metrics-server"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "tmp-dir",
                                "emptyDir": {}
                            }
                        ],
                        "containers": [
                            {
                                "name": "metrics-server",
                                "image": "registry.k8s.io/metrics-server/metrics-server:v0.6.3",
                                "args": [
                                    "--cert-dir=/tmp",
                                    "--secure-port=4443",
                                    "--kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname",
                                    "--kubelet-use-node-status-port",
                                    "--metric-resolution=15s",
                                    "--kubelet-insecure-tls"
                                ],
                                "ports": [
                                    {
                                        "name": "https",
                                        "containerPort": 4443,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "200Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "tmp-dir",
                                        "mountPath": "/tmp"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/livez",
                                        "port": "https",
                                        "scheme": "HTTPS"
                                    },
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/readyz",
                                        "port": "https",
                                        "scheme": "HTTPS"
                                    },
                                    "initialDelaySeconds": 20,
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "runAsUser": 1000,
                                    "runAsNonRoot": true,
                                    "readOnlyRootFilesystem": true
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "nodeSelector": {
                            "kubernetes.io/arch": "amd64",
                            "kubernetes.io/os": "linux"
                        },
                        "serviceAccountName": "metrics-server",
                        "serviceAccount": "metrics-server",
                        "securityContext": {},
                        "schedulerName": "default-scheduler",
                        "priorityClassName": "system-cluster-critical"
                    }
                },
                "strategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": 0,
                        "maxSurge": "25%"
                    }
                },
                "revisionHistoryLimit": 10,
                "progressDeadlineSeconds": 600
            },
            "status": {
                "observedGeneration": 1,
                "replicas": 1,
                "updatedReplicas": 1,
                "readyReplicas": 1,
                "availableReplicas": 1,
                "conditions": [
                    {
                        "type": "Available",
                        "status": "True",
                        "lastUpdateTime": "2024-10-29T12:01:04Z",
                        "lastTransitionTime": "2024-10-29T12:01:04Z",
                        "reason": "MinimumReplicasAvailable",
                        "message": "Deployment has minimum availability."
                    },
                    {
                        "type": "Progressing",
                        "status": "True",
                        "lastUpdateTime": "2024-10-29T12:01:04Z",
                        "lastTransitionTime": "2024-10-29T12:00:33Z",
                        "reason": "NewReplicaSetAvailable",
                        "message": "ReplicaSet \"metrics-server-848968bdcd\" has successfully progressed."
                    }
                ]
            }
        }
    ]
}
{
    "kind": "ReplicaSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "8396"
    },
    "items": [
        {
            "metadata": {
                "name": "calico-kube-controllers-77bd7c5b",
                "namespace": "kube-system",
                "uid": "f98bf6f5-f7e9-413d-a36d-d1a73f3d178a",
                "resourceVersion": "370",
                "generation": 1,
                "creationTimestamp": "2024-10-29T11:53:22Z",
                "labels": {
                    "k8s-app": "calico-kube-controllers",
                    "pod-template-hash": "77bd7c5b"
                },
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "1",
                    "deployment.kubernetes.io/revision": "1"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "name": "calico-kube-controllers",
                        "uid": "98f53efe-0075-4351-bd3e-a18c4955acd0",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "calico-kube-controllers",
                        "pod-template-hash": "77bd7c5b"
                    }
                },
                "template": {
                    "metadata": {
                        "name": "calico-kube-controllers",
                        "namespace": "kube-system",
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "calico-kube-controllers",
                            "pod-template-hash": "77bd7c5b"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "name": "calico-kube-controllers",
                                "image": "docker.io/calico/kube-controllers:v3.25.1",
                                "env": [
                                    {
                                        "name": "ENABLED_CONTROLLERS",
                                        "value": "node"
                                    },
                                    {
                                        "name": "DATASTORE_TYPE",
                                        "value": "kubernetes"
                                    }
                                ],
                                "resources": {},
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            "/usr/bin/check-status",
                                            "-l"
                                        ]
                                    },
                                    "initialDelaySeconds": 10,
                                    "timeoutSeconds": 10,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 6
                                },
                                "readinessProbe": {
                                    "exec": {
                                        "command": [
                                            "/usr/bin/check-status",
                                            "-r"
                                        ]
                                    },
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent"
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "nodeSelector": {
                            "kubernetes.io/os": "linux"
                        },
                        "serviceAccountName": "calico-kube-controllers",
                        "serviceAccount": "calico-kube-controllers",
                        "securityContext": {},
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "key": "node-role.kubernetes.io/master",
                                "effect": "NoSchedule"
                            },
                            {
                                "key": "node-role.kubernetes.io/control-plane",
                                "effect": "NoSchedule"
                            }
                        ],
                        "priorityClassName": "system-cluster-critical"
                    }
                }
            },
            "status": {
                "replicas": 1,
                "fullyLabeledReplicas": 1,
                "readyReplicas": 1,
                "availableReplicas": 1,
                "observedGeneration": 1
            }
        },
        {
            "metadata": {
                "name": "coredns-864597b5fd",
                "namespace": "kube-system",
                "uid": "edb0e403-54df-4639-9e8f-5bddd0b0abfc",
                "resourceVersion": "359",
                "generation": 1,
                "creationTimestamp": "2024-10-29T11:53:21Z",
                "labels": {
                    "k8s-app": "kube-dns",
                    "pod-template-hash": "864597b5fd"
                },
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "2",
                    "deployment.kubernetes.io/revision": "1"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "name": "coredns",
                        "uid": "c0bbe023-d921-436e-9679-d5776753f3f5",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "kube-dns",
                        "pod-template-hash": "864597b5fd"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "kube-dns",
                            "pod-template-hash": "864597b5fd"
                        },
                        "annotations": {
                            "priorityClassName": "system-cluster-critical"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "config-volume",
                                "configMap": {
                                    "name": "coredns",
                                    "items": [
                                        {
                                            "key": "Corefile",
                                            "path": "Corefile"
                                        }
                                    ],
                                    "defaultMode": 420
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "coredns",
                                "image": "coredns/coredns:1.10.1",
                                "args": [
                                    "-conf",
                                    "/etc/coredns/Corefile"
                                ],
                                "ports": [
                                    {
                                        "name": "dns",
                                        "containerPort": 53,
                                        "protocol": "UDP"
                                    },
                                    {
                                        "name": "dns-tcp",
                                        "containerPort": 53,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "metrics",
                                        "containerPort": 9153,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "memory": "170Mi"
                                    },
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "70Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "config-volume",
                                        "readOnly": true,
                                        "mountPath": "/etc/coredns"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/health",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 60,
                                    "timeoutSeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 5
                                },
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/ready",
                                        "port": 8181,
                                        "scheme": "HTTP"
                                    },
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "add": [
                                            "NET_BIND_SERVICE"
                                        ],
                                        "drop": [
                                            "all"
                                        ]
                                    },
                                    "readOnlyRootFilesystem": true,
                                    "allowPrivilegeEscalation": false
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "Default",
                        "serviceAccountName": "coredns",
                        "serviceAccount": "coredns",
                        "securityContext": {},
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            }
                        ],
                        "priorityClassName": "system-cluster-critical"
                    }
                }
            },
            "status": {
                "replicas": 1,
                "fullyLabeledReplicas": 1,
                "readyReplicas": 1,
                "availableReplicas": 1,
                "observedGeneration": 1
            }
        },
        {
            "metadata": {
                "name": "dashboard-metrics-scraper-5657497c4c",
                "namespace": "kube-system",
                "uid": "87fec33d-ad2a-4721-a18f-a2109ea814f0",
                "resourceVersion": "964",
                "generation": 1,
                "creationTimestamp": "2024-10-29T12:00:34Z",
                "labels": {
                    "k8s-app": "dashboard-metrics-scraper",
                    "pod-template-hash": "5657497c4c"
                },
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "2",
                    "deployment.kubernetes.io/revision": "1"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "name": "dashboard-metrics-scraper",
                        "uid": "cab991b5-4c83-40c8-97ce-1f4efdcb3a11",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "dashboard-metrics-scraper",
                        "pod-template-hash": "5657497c4c"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "dashboard-metrics-scraper",
                            "pod-template-hash": "5657497c4c"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "tmp-volume",
                                "emptyDir": {}
                            }
                        ],
                        "containers": [
                            {
                                "name": "dashboard-metrics-scraper",
                                "image": "kubernetesui/metrics-scraper:v1.0.8",
                                "ports": [
                                    {
                                        "containerPort": 8000,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {},
                                "volumeMounts": [
                                    {
                                        "name": "tmp-volume",
                                        "mountPath": "/tmp"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/",
                                        "port": 8000,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 30,
                                    "timeoutSeconds": 30,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "runAsUser": 1001,
                                    "runAsGroup": 2001,
                                    "readOnlyRootFilesystem": true,
                                    "allowPrivilegeEscalation": false
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "nodeSelector": {
                            "kubernetes.io/os": "linux"
                        },
                        "serviceAccountName": "kubernetes-dashboard",
                        "serviceAccount": "kubernetes-dashboard",
                        "securityContext": {
                            "seccompProfile": {
                                "type": "RuntimeDefault"
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "node-role.kubernetes.io/master",
                                "effect": "NoSchedule"
                            }
                        ]
                    }
                }
            },
            "status": {
                "replicas": 1,
                "fullyLabeledReplicas": 1,
                "readyReplicas": 1,
                "availableReplicas": 1,
                "observedGeneration": 1
            }
        },
        {
            "metadata": {
                "name": "hostpath-provisioner-7df77bc496",
                "namespace": "kube-system",
                "uid": "5ec0fa6d-512d-436c-b1db-75d064167618",
                "resourceVersion": "1190",
                "generation": 1,
                "creationTimestamp": "2024-10-29T12:02:13Z",
                "labels": {
                    "k8s-app": "hostpath-provisioner",
                    "pod-template-hash": "7df77bc496"
                },
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "2",
                    "deployment.kubernetes.io/revision": "1"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "name": "hostpath-provisioner",
                        "uid": "ee9a34b4-677c-4385-b9b3-09d7241567f4",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "hostpath-provisioner",
                        "pod-template-hash": "7df77bc496"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "hostpath-provisioner",
                            "pod-template-hash": "7df77bc496"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "pv-volume",
                                "hostPath": {
                                    "path": "/var/snap/microk8s/common/default-storage",
                                    "type": ""
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "hostpath-provisioner",
                                "image": "cdkbot/hostpath-provisioner:1.4.2",
                                "env": [
                                    {
                                        "name": "NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    },
                                    {
                                        "name": "PV_DIR",
                                        "value": "/var/snap/microk8s/common/default-storage"
                                    },
                                    {
                                        "name": "BUSYBOX_IMAGE",
                                        "value": "busybox:1.28.4"
                                    }
                                ],
                                "resources": {},
                                "volumeMounts": [
                                    {
                                        "name": "pv-volume",
                                        "mountPath": "/var/snap/microk8s/common/default-storage"
                                    }
                                ],
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent"
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "serviceAccountName": "microk8s-hostpath",
                        "serviceAccount": "microk8s-hostpath",
                        "securityContext": {},
                        "schedulerName": "default-scheduler"
                    }
                }
            },
            "status": {
                "replicas": 1,
                "fullyLabeledReplicas": 1,
                "readyReplicas": 1,
                "availableReplicas": 1,
                "observedGeneration": 1
            }
        },
        {
            "metadata": {
                "name": "kubernetes-dashboard-54b48fbf9",
                "namespace": "kube-system",
                "uid": "1989bff3-0efa-4afe-ac9e-df8c380deba4",
                "resourceVersion": "977",
                "generation": 1,
                "creationTimestamp": "2024-10-29T12:00:34Z",
                "labels": {
                    "k8s-app": "kubernetes-dashboard",
                    "pod-template-hash": "54b48fbf9"
                },
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "2",
                    "deployment.kubernetes.io/revision": "1"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "name": "kubernetes-dashboard",
                        "uid": "666a2608-53c0-4332-bedd-7bf26a67d275",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "kubernetes-dashboard",
                        "pod-template-hash": "54b48fbf9"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "kubernetes-dashboard",
                            "pod-template-hash": "54b48fbf9"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "kubernetes-dashboard-certs",
                                "secret": {
                                    "secretName": "kubernetes-dashboard-certs",
                                    "defaultMode": 420
                                }
                            },
                            {
                                "name": "tmp-volume",
                                "emptyDir": {}
                            }
                        ],
                        "containers": [
                            {
                                "name": "kubernetes-dashboard",
                                "image": "kubernetesui/dashboard:v2.7.0",
                                "args": [
                                    "--auto-generate-certificates",
                                    "--namespace=kube-system"
                                ],
                                "ports": [
                                    {
                                        "containerPort": 8443,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {},
                                "volumeMounts": [
                                    {
                                        "name": "kubernetes-dashboard-certs",
                                        "mountPath": "/certs"
                                    },
                                    {
                                        "name": "tmp-volume",
                                        "mountPath": "/tmp"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/",
                                        "port": 8443,
                                        "scheme": "HTTPS"
                                    },
                                    "initialDelaySeconds": 30,
                                    "timeoutSeconds": 30,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "runAsUser": 1001,
                                    "runAsGroup": 2001,
                                    "readOnlyRootFilesystem": true,
                                    "allowPrivilegeEscalation": false
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "nodeSelector": {
                            "kubernetes.io/os": "linux"
                        },
                        "serviceAccountName": "kubernetes-dashboard",
                        "serviceAccount": "kubernetes-dashboard",
                        "securityContext": {
                            "seccompProfile": {
                                "type": "RuntimeDefault"
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "node-role.kubernetes.io/master",
                                "effect": "NoSchedule"
                            }
                        ]
                    }
                }
            },
            "status": {
                "replicas": 1,
                "fullyLabeledReplicas": 1,
                "readyReplicas": 1,
                "availableReplicas": 1,
                "observedGeneration": 1
            }
        },
        {
            "metadata": {
                "name": "metrics-server-848968bdcd",
                "namespace": "kube-system",
                "uid": "4234bac8-7cfd-4cb1-821e-0c07b25cdb36",
                "resourceVersion": "1004",
                "generation": 1,
                "creationTimestamp": "2024-10-29T12:00:33Z",
                "labels": {
                    "k8s-app": "metrics-server",
                    "pod-template-hash": "848968bdcd"
                },
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "2",
                    "deployment.kubernetes.io/revision": "1"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "name": "metrics-server",
                        "uid": "a57adc8e-9312-4f52-8681-7c3931c847d4",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "metrics-server",
                        "pod-template-hash": "848968bdcd"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "metrics-server",
                            "pod-template-hash": "848968bdcd"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "tmp-dir",
                                "emptyDir": {}
                            }
                        ],
                        "containers": [
                            {
                                "name": "metrics-server",
                                "image": "registry.k8s.io/metrics-server/metrics-server:v0.6.3",
                                "args": [
                                    "--cert-dir=/tmp",
                                    "--secure-port=4443",
                                    "--kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname",
                                    "--kubelet-use-node-status-port",
                                    "--metric-resolution=15s",
                                    "--kubelet-insecure-tls"
                                ],
                                "ports": [
                                    {
                                        "name": "https",
                                        "containerPort": 4443,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "200Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "tmp-dir",
                                        "mountPath": "/tmp"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/livez",
                                        "port": "https",
                                        "scheme": "HTTPS"
                                    },
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/readyz",
                                        "port": "https",
                                        "scheme": "HTTPS"
                                    },
                                    "initialDelaySeconds": 20,
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "runAsUser": 1000,
                                    "runAsNonRoot": true,
                                    "readOnlyRootFilesystem": true
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "nodeSelector": {
                            "kubernetes.io/arch": "amd64",
                            "kubernetes.io/os": "linux"
                        },
                        "serviceAccountName": "metrics-server",
                        "serviceAccount": "metrics-server",
                        "securityContext": {},
                        "schedulerName": "default-scheduler",
                        "priorityClassName": "system-cluster-critical"
                    }
                }
            },
            "status": {
                "replicas": 1,
                "fullyLabeledReplicas": 1,
                "readyReplicas": 1,
                "availableReplicas": 1,
                "observedGeneration": 1
            }
        }
    ]
}
{
    "kind": "PodList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "8396"
    },
    "items": [
        {
            "metadata": {
                "name": "calico-kube-controllers-77bd7c5b-24kb9",
                "generateName": "calico-kube-controllers-77bd7c5b-",
                "namespace": "kube-system",
                "uid": "02ee1131-34e3-4ed2-a2bb-b6583b667475",
                "resourceVersion": "2709",
                "creationTimestamp": "2024-10-29T11:53:22Z",
                "labels": {
                    "k8s-app": "calico-kube-controllers",
                    "pod-template-hash": "77bd7c5b"
                },
                "annotations": {
                    "cni.projectcalico.org/containerID": "6e12ff519b0a0d799db5007ec75a3983f2fdf00d3276e6d13cb21671dca5bb1a",
                    "cni.projectcalico.org/podIP": "10.1.254.82/32",
                    "cni.projectcalico.org/podIPs": "10.1.254.82/32"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "ReplicaSet",
                        "name": "calico-kube-controllers-77bd7c5b",
                        "uid": "f98bf6f5-f7e9-413d-a36d-d1a73f3d178a",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "kube-api-access-9r47v",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "calico-kube-controllers",
                        "image": "docker.io/calico/kube-controllers:v3.25.1",
                        "env": [
                            {
                                "name": "ENABLED_CONTROLLERS",
                                "value": "node"
                            },
                            {
                                "name": "DATASTORE_TYPE",
                                "value": "kubernetes"
                            }
                        ],
                        "resources": {},
                        "volumeMounts": [
                            {
                                "name": "kube-api-access-9r47v",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "livenessProbe": {
                            "exec": {
                                "command": [
                                    "/usr/bin/check-status",
                                    "-l"
                                ]
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 10,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 6
                        },
                        "readinessProbe": {
                            "exec": {
                                "command": [
                                    "/usr/bin/check-status",
                                    "-r"
                                ]
                            },
                            "timeoutSeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "nodeSelector": {
                    "kubernetes.io/os": "linux"
                },
                "serviceAccountName": "calico-kube-controllers",
                "serviceAccount": "calico-kube-controllers",
                "nodeName": "microk8s-vm",
                "securityContext": {},
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "CriticalAddonsOnly",
                        "operator": "Exists"
                    },
                    {
                        "key": "node-role.kubernetes.io/master",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node-role.kubernetes.io/control-plane",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    }
                ],
                "priorityClassName": "system-cluster-critical",
                "priority": 2000000000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-29T11:53:37Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-29T12:11:33Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-29T12:11:33Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-29T11:53:37Z"
                    }
                ],
                "hostIP": "172.22.104.186",
                "podIP": "10.1.254.82",
                "podIPs": [
                    {
                        "ip": "10.1.254.82"
                    }
                ],
                "startTime": "2024-10-29T11:53:37Z",
                "containerStatuses": [
                    {
                        "name": "calico-kube-controllers",
                        "state": {
                            "running": {
                                "startedAt": "2024-10-29T12:11:32Z"
                            }
                        },
                        "lastState": {
                            "terminated": {
                                "exitCode": 255,
                                "reason": "Unknown",
                                "startedAt": "2024-10-29T11:57:08Z",
                                "finishedAt": "2024-10-29T12:10:59Z",
                                "containerID": "containerd://4aea27760b85f1c3b6652168c1b72b41aa95245b49ecc4d7c531106830d641f1"
                            }
                        },
                        "ready": true,
                        "restartCount": 2,
                        "image": "docker.io/calico/kube-controllers:v3.25.1",
                        "imageID": "docker.io/calico/kube-controllers@sha256:02c1232ee4b8c5a145c401ac1adb34a63ee7fc46b70b6ad0a4e068a774f25f8a",
                        "containerID": "containerd://c5b58c0e257e39e9dd2cb48a4f4ab13a69aaa9409a20cd1626c27efbaa02102e",
                        "started": true
                    }
                ],
                "qosClass": "BestEffort"
            }
        },
        {
            "metadata": {
                "name": "calico-node-kwv84",
                "generateName": "calico-node-",
                "namespace": "kube-system",
                "uid": "69b9a2cd-3b81-471b-87cc-dc71c33a5732",
                "resourceVersion": "2679",
                "creationTimestamp": "2024-10-29T11:53:22Z",
                "labels": {
                    "controller-revision-hash": "6fbb45588b",
                    "k8s-app": "calico-node",
                    "pod-template-generation": "1"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "DaemonSet",
                        "name": "calico-node",
                        "uid": "4d871134-d104-4073-993d-132c6015c030",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "lib-modules",
                        "hostPath": {
                            "path": "/lib/modules",
                            "type": ""
                        }
                    },
                    {
                        "name": "var-run-calico",
                        "hostPath": {
                            "path": "/var/snap/microk8s/current/var/run/calico",
                            "type": ""
                        }
                    },
                    {
                        "name": "var-lib-calico",
                        "hostPath": {
                            "path": "/var/snap/microk8s/current/var/lib/calico",
                            "type": ""
                        }
                    },
                    {
                        "name": "xtables-lock",
                        "hostPath": {
                            "path": "/run/xtables.lock",
                            "type": "FileOrCreate"
                        }
                    },
                    {
                        "name": "sys-fs",
                        "hostPath": {
                            "path": "/sys/fs/",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "cni-bin-dir",
                        "hostPath": {
                            "path": "/var/snap/microk8s/current/opt/cni/bin",
                            "type": ""
                        }
                    },
                    {
                        "name": "cni-net-dir",
                        "hostPath": {
                            "path": "/var/snap/microk8s/current/args/cni-network",
                            "type": ""
                        }
                    },
                    {
                        "name": "cni-log-dir",
                        "hostPath": {
                            "path": "/var/snap/microk8s/common/var/log/calico/cni",
                            "type": ""
                        }
                    },
                    {
                        "name": "host-local-net-dir",
                        "hostPath": {
                            "path": "/var/snap/microk8s/current/var/lib/cni/networks",
                            "type": ""
                        }
                    },
                    {
                        "name": "policysync",
                        "hostPath": {
                            "path": "/var/snap/microk8s/current/var/run/nodeagent",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "kube-api-access-7gdtl",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "initContainers": [
                    {
                        "name": "upgrade-ipam",
                        "image": "docker.io/calico/cni:v3.25.1",
                        "command": [
                            "/opt/cni/bin/calico-ipam",
                            "-upgrade"
                        ],
                        "envFrom": [
                            {
                                "configMapRef": {
                                    "name": "kubernetes-services-endpoint",
                                    "optional": true
                                }
                            }
                        ],
                        "env": [
                            {
                                "name": "KUBERNETES_NODE_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.nodeName"
                                    }
                                }
                            },
                            {
                                "name": "CALICO_NETWORKING_BACKEND",
                                "valueFrom": {
                                    "configMapKeyRef": {
                                        "name": "calico-config",
                                        "key": "calico_backend"
                                    }
                                }
                            }
                        ],
                        "resources": {},
                        "volumeMounts": [
                            {
                                "name": "host-local-net-dir",
                                "mountPath": "/var/lib/cni/networks"
                            },
                            {
                                "name": "cni-bin-dir",
                                "mountPath": "/host/opt/cni/bin"
                            },
                            {
                                "name": "kube-api-access-7gdtl",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "privileged": true
                        }
                    },
                    {
                        "name": "install-cni",
                        "image": "docker.io/calico/cni:v3.25.1",
                        "command": [
                            "/opt/cni/bin/install"
                        ],
                        "envFrom": [
                            {
                                "configMapRef": {
                                    "name": "kubernetes-services-endpoint",
                                    "optional": true
                                }
                            }
                        ],
                        "env": [
                            {
                                "name": "CNI_CONF_NAME",
                                "value": "10-calico.conflist"
                            },
                            {
                                "name": "CNI_NETWORK_CONFIG",
                                "valueFrom": {
                                    "configMapKeyRef": {
                                        "name": "calico-config",
                                        "key": "cni_network_config"
                                    }
                                }
                            },
                            {
                                "name": "KUBERNETES_NODE_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.nodeName"
                                    }
                                }
                            },
                            {
                                "name": "CNI_MTU",
                                "valueFrom": {
                                    "configMapKeyRef": {
                                        "name": "calico-config",
                                        "key": "veth_mtu"
                                    }
                                }
                            },
                            {
                                "name": "SLEEP",
                                "value": "false"
                            },
                            {
                                "name": "CNI_NET_DIR",
                                "value": "/var/snap/microk8s/current/args/cni-network"
                            }
                        ],
                        "resources": {},
                        "volumeMounts": [
                            {
                                "name": "cni-bin-dir",
                                "mountPath": "/host/opt/cni/bin"
                            },
                            {
                                "name": "cni-net-dir",
                                "mountPath": "/host/etc/cni/net.d"
                            },
                            {
                                "name": "kube-api-access-7gdtl",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "privileged": true
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "calico-node",
                        "image": "docker.io/calico/node:v3.25.1",
                        "envFrom": [
                            {
                                "configMapRef": {
                                    "name": "kubernetes-services-endpoint",
                                    "optional": true
                                }
                            }
                        ],
                        "env": [
                            {
                                "name": "DATASTORE_TYPE",
                                "value": "kubernetes"
                            },
                            {
                                "name": "WAIT_FOR_DATASTORE",
                                "value": "true"
                            },
                            {
                                "name": "NODENAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.nodeName"
                                    }
                                }
                            },
                            {
                                "name": "CALICO_NETWORKING_BACKEND",
                                "valueFrom": {
                                    "configMapKeyRef": {
                                        "name": "calico-config",
                                        "key": "calico_backend"
                                    }
                                }
                            },
                            {
                                "name": "CLUSTER_TYPE",
                                "value": "k8s,bgp"
                            },
                            {
                                "name": "IP",
                                "value": "autodetect"
                            },
                            {
                                "name": "IP_AUTODETECTION_METHOD",
                                "value": "first-found"
                            },
                            {
                                "name": "CALICO_IPV4POOL_VXLAN",
                                "value": "Always"
                            },
                            {
                                "name": "CALICO_IPV6POOL_VXLAN",
                                "value": "Never"
                            },
                            {
                                "name": "FELIX_IPINIPMTU",
                                "valueFrom": {
                                    "configMapKeyRef": {
                                        "name": "calico-config",
                                        "key": "veth_mtu"
                                    }
                                }
                            },
                            {
                                "name": "FELIX_VXLANMTU",
                                "valueFrom": {
                                    "configMapKeyRef": {
                                        "name": "calico-config",
                                        "key": "veth_mtu"
                                    }
                                }
                            },
                            {
                                "name": "FELIX_WIREGUARDMTU",
                                "valueFrom": {
                                    "configMapKeyRef": {
                                        "name": "calico-config",
                                        "key": "veth_mtu"
                                    }
                                }
                            },
                            {
                                "name": "CALICO_IPV4POOL_CIDR",
                                "value": "10.1.0.0/16"
                            },
                            {
                                "name": "CALICO_DISABLE_FILE_LOGGING",
                                "value": "true"
                            },
                            {
                                "name": "FELIX_DEFAULTENDPOINTTOHOSTACTION",
                                "value": "ACCEPT"
                            },
                            {
                                "name": "FELIX_IPV6SUPPORT",
                                "value": "false"
                            },
                            {
                                "name": "FELIX_HEALTHENABLED",
                                "value": "true"
                            },
                            {
                                "name": "FELIX_FEATUREDETECTOVERRIDE",
                                "value": "ChecksumOffloadBroken=true"
                            }
                        ],
                        "resources": {
                            "requests": {
                                "cpu": "250m"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "cni-net-dir",
                                "mountPath": "/host/etc/cni/net.d"
                            },
                            {
                                "name": "lib-modules",
                                "readOnly": true,
                                "mountPath": "/lib/modules"
                            },
                            {
                                "name": "xtables-lock",
                                "mountPath": "/run/xtables.lock"
                            },
                            {
                                "name": "var-run-calico",
                                "mountPath": "/var/run/calico"
                            },
                            {
                                "name": "var-lib-calico",
                                "mountPath": "/var/lib/calico"
                            },
                            {
                                "name": "policysync",
                                "mountPath": "/var/run/nodeagent"
                            },
                            {
                                "name": "cni-log-dir",
                                "readOnly": true,
                                "mountPath": "/var/log/calico/cni"
                            },
                            {
                                "name": "kube-api-access-7gdtl",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "livenessProbe": {
                            "exec": {
                                "command": [
                                    "/bin/calico-node",
                                    "-felix-live"
                                ]
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 10,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 6
                        },
                        "readinessProbe": {
                            "exec": {
                                "command": [
                                    "/bin/calico-node",
                                    "-felix-ready"
                                ]
                            },
                            "timeoutSeconds": 10,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "lifecycle": {
                            "preStop": {
                                "exec": {
                                    "command": [
                                        "/bin/calico-node",
                                        "-shutdown"
                                    ]
                                }
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "privileged": true
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 0,
                "dnsPolicy": "ClusterFirst",
                "nodeSelector": {
                    "kubernetes.io/os": "linux"
                },
                "serviceAccountName": "calico-node",
                "serviceAccount": "calico-node",
                "nodeName": "microk8s-vm",
                "hostNetwork": true,
                "securityContext": {},
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "microk8s-vm"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "CriticalAddonsOnly",
                        "operator": "Exists"
                    },
                    {
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-29T11:53:38Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-29T12:11:32Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-29T12:11:32Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-29T11:53:22Z"
                    }
                ],
                "hostIP": "172.22.104.186",
                "podIP": "172.22.104.186",
                "podIPs": [
                    {
                        "ip": "172.22.104.186"
                    }
                ],
                "startTime": "2024-10-29T11:53:22Z",
                "initContainerStatuses": [
                    {
                        "name": "upgrade-ipam",
                        "state": {
                            "terminated": {
                                "exitCode": 0,
                                "reason": "Completed",
                                "startedAt": "2024-10-29T12:11:22Z",
                                "finishedAt": "2024-10-29T12:11:22Z",
                                "containerID": "containerd://b22f25282c45410ed579c7f2db6a3310178b7dca75f8fee5ae169150576b5093"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 2,
                        "image": "docker.io/calico/cni:v3.25.1",
                        "imageID": "docker.io/calico/cni@sha256:9a2c99f0314053aa11e971bd5d72e17951767bf5c6ff1fd9c38c4582d7cb8a0a",
                        "containerID": "containerd://b22f25282c45410ed579c7f2db6a3310178b7dca75f8fee5ae169150576b5093",
                        "started": false
                    },
                    {
                        "name": "install-cni",
                        "state": {
                            "terminated": {
                                "exitCode": 0,
                                "reason": "Completed",
                                "startedAt": "2024-10-29T12:11:22Z",
                                "finishedAt": "2024-10-29T12:11:23Z",
                                "containerID": "containerd://4e38abdd5645909094d0c90ea9ae6d6a0e7593210e1ac9ac63276b41c88c629a"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "docker.io/calico/cni:v3.25.1",
                        "imageID": "docker.io/calico/cni@sha256:9a2c99f0314053aa11e971bd5d72e17951767bf5c6ff1fd9c38c4582d7cb8a0a",
                        "containerID": "containerd://4e38abdd5645909094d0c90ea9ae6d6a0e7593210e1ac9ac63276b41c88c629a",
                        "started": false
                    }
                ],
                "containerStatuses": [
                    {
                        "name": "calico-node",
                        "state": {
                            "running": {
                                "startedAt": "2024-10-29T12:11:23Z"
                            }
                        },
                        "lastState": {
                            "terminated": {
                                "exitCode": 255,
                                "reason": "Unknown",
                                "startedAt": "2024-10-29T11:56:39Z",
                                "finishedAt": "2024-10-29T12:10:59Z",
                                "containerID": "containerd://601dd2db46fdf717a26ca8624c6bdb52fd11a09f01a4c627fc80f99d1ed4c36e"
                            }
                        },
                        "ready": true,
                        "restartCount": 2,
                        "image": "docker.io/calico/node:v3.25.1",
                        "imageID": "docker.io/calico/node@sha256:0cd00e83d06b3af8cd712ad2c310be07b240235ad7ca1397e04eb14d20dcc20f",
                        "containerID": "containerd://e9c6ccf4ba0e0696eba73c8c18430248dc9cf85466bc7c552f75a89ce0644efd",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "coredns-864597b5fd-n46c6",
                "generateName": "coredns-864597b5fd-",
                "namespace": "kube-system",
                "uid": "46e0b55c-cd53-4d27-8748-246d19025ddc",
                "resourceVersion": "2758",
                "creationTimestamp": "2024-10-29T11:53:22Z",
                "labels": {
                    "k8s-app": "kube-dns",
                    "pod-template-hash": "864597b5fd"
                },
                "annotations": {
                    "cni.projectcalico.org/containerID": "b7092ebd5e13412db4d07f62dad45651b2ca877564e2c557478c74657ce1d923",
                    "cni.projectcalico.org/podIP": "10.1.254.87/32",
                    "cni.projectcalico.org/podIPs": "10.1.254.87/32",
                    "priorityClassName": "system-cluster-critical"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "ReplicaSet",
                        "name": "coredns-864597b5fd",
                        "uid": "edb0e403-54df-4639-9e8f-5bddd0b0abfc",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "config-volume",
                        "configMap": {
                            "name": "coredns",
                            "items": [
                                {
                                    "key": "Corefile",
                                    "path": "Corefile"
                                }
                            ],
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "kube-api-access-lc9wj",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "coredns",
                        "image": "coredns/coredns:1.10.1",
                        "args": [
                            "-conf",
                            "/etc/coredns/Corefile"
                        ],
                        "ports": [
                            {
                                "name": "dns",
                                "containerPort": 53,
                                "protocol": "UDP"
                            },
                            {
                                "name": "dns-tcp",
                                "containerPort": 53,
                                "protocol": "TCP"
                            },
                            {
                                "name": "metrics",
                                "containerPort": 9153,
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "memory": "170Mi"
                            },
                            "requests": {
                                "cpu": "100m",
                                "memory": "70Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "config-volume",
                                "readOnly": true,
                                "mountPath": "/etc/coredns"
                            },
                            {
                                "name": "kube-api-access-lc9wj",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/health",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 60,
                            "timeoutSeconds": 5,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 5
                        },
                        "readinessProbe": {
                            "httpGet": {
                                "path": "/ready",
                                "port": 8181,
                                "scheme": "HTTP"
                            },
                            "timeoutSeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "capabilities": {
                                "add": [
                                    "NET_BIND_SERVICE"
                                ],
                                "drop": [
                                    "all"
                                ]
                            },
                            "readOnlyRootFilesystem": true,
                            "allowPrivilegeEscalation": false
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "Default",
                "serviceAccountName": "coredns",
                "serviceAccount": "coredns",
                "nodeName": "microk8s-vm",
                "securityContext": {},
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "CriticalAddonsOnly",
                        "operator": "Exists"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    }
                ],
                "priorityClassName": "system-cluster-critical",
                "priority": 2000000000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-29T11:53:37Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-29T12:11:47Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-29T12:11:47Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-29T11:53:37Z"
                    }
                ],
                "hostIP": "172.22.104.186",
                "podIP": "10.1.254.87",
                "podIPs": [
                    {
                        "ip": "10.1.254.87"
                    }
                ],
                "startTime": "2024-10-29T11:53:37Z",
                "containerStatuses": [
                    {
                        "name": "coredns",
                        "state": {
                            "running": {
                                "startedAt": "2024-10-29T12:11:47Z"
                            }
                        },
                        "lastState": {
                            "terminated": {
                                "exitCode": 255,
                                "reason": "Unknown",
                                "startedAt": "2024-10-29T11:57:08Z",
                                "finishedAt": "2024-10-29T12:10:59Z",
                                "containerID": "containerd://5c97c1e29c1e3486f5294918ecd0249eea9985cf239b0e035c47d2fe4abd9f52"
                            }
                        },
                        "ready": true,
                        "restartCount": 2,
                        "image": "docker.io/coredns/coredns:1.10.1",
                        "imageID": "docker.io/coredns/coredns@sha256:a0ead06651cf580044aeb0a0feba63591858fb2e43ade8c9dea45a6a89ae7e5e",
                        "containerID": "containerd://6efe4613cea7a9e0bef6585ecd629f2050a3c6294b408425af204880e3b474af",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "dashboard-metrics-scraper-5657497c4c-f54lw",
                "generateName": "dashboard-metrics-scraper-5657497c4c-",
                "namespace": "kube-system",
                "uid": "b78fc866-221e-4326-a5f4-43208190de14",
                "resourceVersion": "2681",
                "creationTimestamp": "2024-10-29T12:00:34Z",
                "labels": {
                    "k8s-app": "dashboard-metrics-scraper",
                    "pod-template-hash": "5657497c4c"
                },
                "annotations": {
                    "cni.projectcalico.org/containerID": "ea6852e6ea0796338516333d48505bfb2b0e22d631753f70095ab0a424eb302d",
                    "cni.projectcalico.org/podIP": "10.1.254.78/32",
                    "cni.projectcalico.org/podIPs": "10.1.254.78/32"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "ReplicaSet",
                        "name": "dashboard-metrics-scraper-5657497c4c",
                        "uid": "87fec33d-ad2a-4721-a18f-a2109ea814f0",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "tmp-volume",
                        "emptyDir": {}
                    },
                    {
                        "name": "kube-api-access-qkhvz",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "dashboard-metrics-scraper",
                        "image": "kubernetesui/metrics-scraper:v1.0.8",
                        "ports": [
                            {
                                "containerPort": 8000,
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "volumeMounts": [
                            {
                                "name": "tmp-volume",
                                "mountPath": "/tmp"
                            },
                            {
                                "name": "kube-api-access-qkhvz",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/",
                                "port": 8000,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 30,
                            "timeoutSeconds": 30,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "runAsUser": 1001,
                            "runAsGroup": 2001,
                            "readOnlyRootFilesystem": true,
                            "allowPrivilegeEscalation": false
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "nodeSelector": {
                    "kubernetes.io/os": "linux"
                },
                "serviceAccountName": "kubernetes-dashboard",
                "serviceAccount": "kubernetes-dashboard",
                "nodeName": "microk8s-vm",
                "securityContext": {
                    "seccompProfile": {
                        "type": "RuntimeDefault"
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "node-role.kubernetes.io/master",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    }
                ],
                "priority": 0,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-29T12:00:34Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-29T12:11:32Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-29T12:11:32Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-29T12:00:34Z"
                    }
                ],
                "hostIP": "172.22.104.186",
                "podIP": "10.1.254.78",
                "podIPs": [
                    {
                        "ip": "10.1.254.78"
                    }
                ],
                "startTime": "2024-10-29T12:00:34Z",
                "containerStatuses": [
                    {
                        "name": "dashboard-metrics-scraper",
                        "state": {
                            "running": {
                                "startedAt": "2024-10-29T12:11:31Z"
                            }
                        },
                        "lastState": {
                            "terminated": {
                                "exitCode": 255,
                                "reason": "Unknown",
                                "startedAt": "2024-10-29T12:00:42Z",
                                "finishedAt": "2024-10-29T12:10:59Z",
                                "containerID": "containerd://2edad8b115006330bd10e189daa64b1d562fbfbce4b5033f69f9752cf76bd88d"
                            }
                        },
                        "ready": true,
                        "restartCount": 1,
                        "image": "docker.io/kubernetesui/metrics-scraper:v1.0.8",
                        "imageID": "docker.io/kubernetesui/metrics-scraper@sha256:76049887f07a0476dc93efc2d3569b9529bf982b22d29f356092ce206e98765c",
                        "containerID": "containerd://80a1a9fb8ba6625d371942b4c83a2139d98e0f97749278615632b597a075d1cf",
                        "started": true
                    }
                ],
                "qosClass": "BestEffort"
            }
        },
        {
            "metadata": {
                "name": "hostpath-provisioner-7df77bc496-cgp28",
                "generateName": "hostpath-provisioner-7df77bc496-",
                "namespace": "kube-system",
                "uid": "02f0c113-9ed5-4d80-bf4d-df6aca3562b7",
                "resourceVersion": "2703",
                "creationTimestamp": "2024-10-29T12:02:13Z",
                "labels": {
                    "k8s-app": "hostpath-provisioner",
                    "pod-template-hash": "7df77bc496"
                },
                "annotations": {
                    "cni.projectcalico.org/containerID": "84cbf14c59588cb2088284cfe316e6ace6f6850770d19edc91343d55f58ca5be",
                    "cni.projectcalico.org/podIP": "10.1.254.83/32",
                    "cni.projectcalico.org/podIPs": "10.1.254.83/32"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "ReplicaSet",
                        "name": "hostpath-provisioner-7df77bc496",
                        "uid": "5ec0fa6d-512d-436c-b1db-75d064167618",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "pv-volume",
                        "hostPath": {
                            "path": "/var/snap/microk8s/common/default-storage",
                            "type": ""
                        }
                    },
                    {
                        "name": "kube-api-access-wmqj4",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "hostpath-provisioner",
                        "image": "cdkbot/hostpath-provisioner:1.4.2",
                        "env": [
                            {
                                "name": "NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            },
                            {
                                "name": "NODE_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.nodeName"
                                    }
                                }
                            },
                            {
                                "name": "PV_DIR",
                                "value": "/var/snap/microk8s/common/default-storage"
                            },
                            {
                                "name": "BUSYBOX_IMAGE",
                                "value": "busybox:1.28.4"
                            }
                        ],
                        "resources": {},
                        "volumeMounts": [
                            {
                                "name": "pv-volume",
                                "mountPath": "/var/snap/microk8s/common/default-storage"
                            },
                            {
                                "name": "kube-api-access-wmqj4",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "serviceAccountName": "microk8s-hostpath",
                "serviceAccount": "microk8s-hostpath",
                "nodeName": "microk8s-vm",
                "securityContext": {},
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    }
                ],
                "priority": 0,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-29T12:02:13Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-29T12:11:33Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-29T12:11:33Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-29T12:02:13Z"
                    }
                ],
                "hostIP": "172.22.104.186",
                "podIP": "10.1.254.83",
                "podIPs": [
                    {
                        "ip": "10.1.254.83"
                    }
                ],
                "startTime": "2024-10-29T12:02:13Z",
                "containerStatuses": [
                    {
                        "name": "hostpath-provisioner",
                        "state": {
                            "running": {
                                "startedAt": "2024-10-29T12:11:32Z"
                            }
                        },
                        "lastState": {
                            "terminated": {
                                "exitCode": 255,
                                "reason": "Unknown",
                                "startedAt": "2024-10-29T12:02:19Z",
                                "finishedAt": "2024-10-29T12:10:59Z",
                                "containerID": "containerd://472c28f7ffadc68ed8e138aa9b05c4feffca43230226318f1e16ddad26bf9ab0"
                            }
                        },
                        "ready": true,
                        "restartCount": 1,
                        "image": "docker.io/cdkbot/hostpath-provisioner:1.4.2",
                        "imageID": "docker.io/cdkbot/hostpath-provisioner@sha256:b8e7be62e9c072adc52ca7e0ff4cffd3687cc39e98171b07884c456104e3fc5c",
                        "containerID": "containerd://b67c9abd433b16209899412b4609d2b1a2159a80a47deb761e338db868d7590a",
                        "started": true
                    }
                ],
                "qosClass": "BestEffort"
            }
        },
        {
            "metadata": {
                "name": "kubernetes-dashboard-54b48fbf9-j4jgt",
                "generateName": "kubernetes-dashboard-54b48fbf9-",
                "namespace": "kube-system",
                "uid": "935aa2b5-65db-4556-b9e0-ec3548272d33",
                "resourceVersion": "2732",
                "creationTimestamp": "2024-10-29T12:00:34Z",
                "labels": {
                    "k8s-app": "kubernetes-dashboard",
                    "pod-template-hash": "54b48fbf9"
                },
                "annotations": {
                    "cni.projectcalico.org/containerID": "73dcc666dbbaa6159bb14ed7120cd3937d49349c54ae2073fa4b68cb700a56fd",
                    "cni.projectcalico.org/podIP": "10.1.254.86/32",
                    "cni.projectcalico.org/podIPs": "10.1.254.86/32"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "ReplicaSet",
                        "name": "kubernetes-dashboard-54b48fbf9",
                        "uid": "1989bff3-0efa-4afe-ac9e-df8c380deba4",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "kubernetes-dashboard-certs",
                        "secret": {
                            "secretName": "kubernetes-dashboard-certs",
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "tmp-volume",
                        "emptyDir": {}
                    },
                    {
                        "name": "kube-api-access-qcn9s",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "kubernetes-dashboard",
                        "image": "kubernetesui/dashboard:v2.7.0",
                        "args": [
                            "--auto-generate-certificates",
                            "--namespace=kube-system"
                        ],
                        "ports": [
                            {
                                "containerPort": 8443,
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "volumeMounts": [
                            {
                                "name": "kubernetes-dashboard-certs",
                                "mountPath": "/certs"
                            },
                            {
                                "name": "tmp-volume",
                                "mountPath": "/tmp"
                            },
                            {
                                "name": "kube-api-access-qcn9s",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/",
                                "port": 8443,
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 30,
                            "timeoutSeconds": 30,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "runAsUser": 1001,
                            "runAsGroup": 2001,
                            "readOnlyRootFilesystem": true,
                            "allowPrivilegeEscalation": false
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "nodeSelector": {
                    "kubernetes.io/os": "linux"
                },
                "serviceAccountName": "kubernetes-dashboard",
                "serviceAccount": "kubernetes-dashboard",
                "nodeName": "microk8s-vm",
                "securityContext": {
                    "seccompProfile": {
                        "type": "RuntimeDefault"
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "node-role.kubernetes.io/master",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    }
                ],
                "priority": 0,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-29T12:00:34Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-29T12:11:39Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-29T12:11:39Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-29T12:00:34Z"
                    }
                ],
                "hostIP": "172.22.104.186",
                "podIP": "10.1.254.86",
                "podIPs": [
                    {
                        "ip": "10.1.254.86"
                    }
                ],
                "startTime": "2024-10-29T12:00:34Z",
                "containerStatuses": [
                    {
                        "name": "kubernetes-dashboard",
                        "state": {
                            "running": {
                                "startedAt": "2024-10-29T12:11:39Z"
                            }
                        },
                        "lastState": {
                            "terminated": {
                                "exitCode": 255,
                                "reason": "Unknown",
                                "startedAt": "2024-10-29T12:00:46Z",
                                "finishedAt": "2024-10-29T12:10:59Z",
                                "containerID": "containerd://ba7c66adfe7829ccc592f405a794bfe8b088a9722da565819cc7e48245d06eaf"
                            }
                        },
                        "ready": true,
                        "restartCount": 1,
                        "image": "docker.io/kubernetesui/dashboard:v2.7.0",
                        "imageID": "docker.io/kubernetesui/dashboard@sha256:2e500d29e9d5f4a086b908eb8dfe7ecac57d2ab09d65b24f588b1d449841ef93",
                        "containerID": "containerd://117352cf2c5bb4d010a9381a98548082317c2e22dfa47c8e59e2594dddca6ec9",
                        "started": true
                    }
                ],
                "qosClass": "BestEffort"
            }
        },
        {
            "metadata": {
                "name": "metrics-server-848968bdcd-rpgvx",
                "generateName": "metrics-server-848968bdcd-",
                "namespace": "kube-system",
                "uid": "1deb1486-45b0-4787-a43f-9dfa87bfdf1f",
                "resourceVersion": "2778",
                "creationTimestamp": "2024-10-29T12:00:33Z",
                "labels": {
                    "k8s-app": "metrics-server",
                    "pod-template-hash": "848968bdcd"
                },
                "annotations": {
                    "cni.projectcalico.org/containerID": "df2b16284fa621a18e99e143bd37a9f6736ea0bafa9706a4dbb94c0978582cc5",
                    "cni.projectcalico.org/podIP": "10.1.254.85/32",
                    "cni.projectcalico.org/podIPs": "10.1.254.85/32"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "ReplicaSet",
                        "name": "metrics-server-848968bdcd",
                        "uid": "4234bac8-7cfd-4cb1-821e-0c07b25cdb36",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "tmp-dir",
                        "emptyDir": {}
                    },
                    {
                        "name": "kube-api-access-n7kkq",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "metrics-server",
                        "image": "registry.k8s.io/metrics-server/metrics-server:v0.6.3",
                        "args": [
                            "--cert-dir=/tmp",
                            "--secure-port=4443",
                            "--kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname",
                            "--kubelet-use-node-status-port",
                            "--metric-resolution=15s",
                            "--kubelet-insecure-tls"
                        ],
                        "ports": [
                            {
                                "name": "https",
                                "containerPort": 4443,
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {
                            "requests": {
                                "cpu": "100m",
                                "memory": "200Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "tmp-dir",
                                "mountPath": "/tmp"
                            },
                            {
                                "name": "kube-api-access-n7kkq",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/livez",
                                "port": "https",
                                "scheme": "HTTPS"
                            },
                            "timeoutSeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "readinessProbe": {
                            "httpGet": {
                                "path": "/readyz",
                                "port": "https",
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 20,
                            "timeoutSeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "runAsUser": 1000,
                            "runAsNonRoot": true,
                            "readOnlyRootFilesystem": true
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "nodeSelector": {
                    "kubernetes.io/arch": "amd64",
                    "kubernetes.io/os": "linux"
                },
                "serviceAccountName": "metrics-server",
                "serviceAccount": "metrics-server",
                "nodeName": "microk8s-vm",
                "securityContext": {},
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    }
                ],
                "priorityClassName": "system-cluster-critical",
                "priority": 2000000000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-29T12:00:33Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-29T12:11:54Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-29T12:11:54Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-29T12:00:33Z"
                    }
                ],
                "hostIP": "172.22.104.186",
                "podIP": "10.1.254.85",
                "podIPs": [
                    {
                        "ip": "10.1.254.85"
                    }
                ],
                "startTime": "2024-10-29T12:00:33Z",
                "containerStatuses": [
                    {
                        "name": "metrics-server",
                        "state": {
                            "running": {
                                "startedAt": "2024-10-29T12:11:33Z"
                            }
                        },
                        "lastState": {
                            "terminated": {
                                "exitCode": 255,
                                "reason": "Unknown",
                                "startedAt": "2024-10-29T12:00:38Z",
                                "finishedAt": "2024-10-29T12:10:59Z",
                                "containerID": "containerd://b61febf3c1e39b8b382dad5c231e5b532329f243bcdde7745a8a9234ab0613c7"
                            }
                        },
                        "ready": true,
                        "restartCount": 1,
                        "image": "registry.k8s.io/metrics-server/metrics-server:v0.6.3",
                        "imageID": "registry.k8s.io/metrics-server/metrics-server@sha256:c60778fa1c44d0c5a0c4530ebe83f9243ee6fc02f4c3dc59226c201931350b10",
                        "containerID": "containerd://ce03e3583c4f707eec9d4172efa388028fc17c7e03491e967bac7069302061aa",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        }
    ]
}
==== START logs for container calico-kube-controllers of pod kube-system/calico-kube-controllers-77bd7c5b-24kb9 ====
Request log error: an error on the server ("unknown") has prevented the request from succeeding (get pods calico-kube-controllers-77bd7c5b-24kb9)
==== END logs for container calico-kube-controllers of pod kube-system/calico-kube-controllers-77bd7c5b-24kb9 ====
==== START logs for container upgrade-ipam of pod kube-system/calico-node-kwv84 ====
Request log error: an error on the server ("unknown") has prevented the request from succeeding (get pods calico-node-kwv84)
==== END logs for container upgrade-ipam of pod kube-system/calico-node-kwv84 ====
==== START logs for container install-cni of pod kube-system/calico-node-kwv84 ====
Request log error: an error on the server ("unknown") has prevented the request from succeeding (get pods calico-node-kwv84)
==== END logs for container install-cni of pod kube-system/calico-node-kwv84 ====
==== START logs for container calico-node of pod kube-system/calico-node-kwv84 ====
Request log error: an error on the server ("unknown") has prevented the request from succeeding (get pods calico-node-kwv84)
==== END logs for container calico-node of pod kube-system/calico-node-kwv84 ====
==== START logs for container coredns of pod kube-system/coredns-864597b5fd-n46c6 ====
Request log error: an error on the server ("unknown") has prevented the request from succeeding (get pods coredns-864597b5fd-n46c6)
==== END logs for container coredns of pod kube-system/coredns-864597b5fd-n46c6 ====
==== START logs for container dashboard-metrics-scraper of pod kube-system/dashboard-metrics-scraper-5657497c4c-f54lw ====
Request log error: an error on the server ("unknown") has prevented the request from succeeding (get pods dashboard-metrics-scraper-5657497c4c-f54lw)
==== END logs for container dashboard-metrics-scraper of pod kube-system/dashboard-metrics-scraper-5657497c4c-f54lw ====
==== START logs for container hostpath-provisioner of pod kube-system/hostpath-provisioner-7df77bc496-cgp28 ====
Request log error: an error on the server ("unknown") has prevented the request from succeeding (get pods hostpath-provisioner-7df77bc496-cgp28)
==== END logs for container hostpath-provisioner of pod kube-system/hostpath-provisioner-7df77bc496-cgp28 ====
==== START logs for container kubernetes-dashboard of pod kube-system/kubernetes-dashboard-54b48fbf9-j4jgt ====
Request log error: an error on the server ("unknown") has prevented the request from succeeding (get pods kubernetes-dashboard-54b48fbf9-j4jgt)
==== END logs for container kubernetes-dashboard of pod kube-system/kubernetes-dashboard-54b48fbf9-j4jgt ====
==== START logs for container metrics-server of pod kube-system/metrics-server-848968bdcd-rpgvx ====
Request log error: an error on the server ("unknown") has prevented the request from succeeding (get pods metrics-server-848968bdcd-rpgvx)
==== END logs for container metrics-server of pod kube-system/metrics-server-848968bdcd-rpgvx ====
